{"version":3,"file":"pather.min.js","sources":["../source/class/Token.js","../source/class/BigDecimal.js","../source/class/Value.js","../source/class/TokenStream.js","../source/class/Distortion.js","../source/class/PathParser.js","../source/class/ExpressionParser.js","../source/class/Transformer.js","../source/main.js"],"sourcesContent":["export default class Token\n{\n    static TYPE_NUMBER                    = 1;\n    static TYPE_COMMAND                   = 2;\n    static TYPE_DELIMITER                 = 3;\n    static TYPE_WHITESPACE                = 4;\n    static TYPE_IDENTIFIER                = 5;\n    static TYPE_BRACKET                   = 6;\n    static TYPE_END                       = 7;\n    static TYPE_OPERATOR_ADD              = 8;\n    static TYPE_OPERATOR_SUBTRACT         = 9;\n    static TYPE_OPERATOR_MULTIPLY         = 10;\n    static TYPE_OPERATOR_DIVIDE           = 11;\n    static TYPE_OPERATOR_ROTATE           = 12;\n    static TYPE_OPERATOR_SKEW_HORIZONTAL  = 13;\n    static TYPE_OPERATOR_SKEW_VERTICAL    = 14;\n    static TYPE_OPERATOR_FIX              = 15;\n    static TYPE_OPERATOR_MEASURE          = 16;\n    static TYPE_OPERATOR_ASSIGN           = 17;\n    static TYPE_OPERATOR_REPEAT           = 18;\n\n    constructor(type, name, value, position)\n    {\n        this.type = type;\n        this.name = name;\n        this.value = value;\n        this.position = position;\n    }\n\n    static nameOf(type)\n    {\n        return(Object.entries(Token).filter(([key, value]) => value === type)[0][0]);\n    }\n};\n","export default class BigDecimal\n{\n    static LIMIT_PRECISION         = 18;\n    static PI                      = new BigDecimal(\"3.141592653589793238\");\n    static #VALUE_SHIFT            = BigInt(\"1\" + \"0\".repeat(BigDecimal.LIMIT_PRECISION));\n    static #PATTERN_TRAILING_ZERO  = new RegExp(\"\\\\.?0+$\");\n\n    #value;\n\n    constructor(source = 0)\n\t{\n\t\tlet integerPart;\n\t\tlet decimalPart;\n\n\t\tif(source instanceof BigDecimal)\n            this.#value = source.#value;\n\t\telse\n            if(source instanceof BigInt)\n                this.#value = value * BigDecimal.VALUE_SHIFT;\n            else\n            {\n                [integerPart, decimalPart] = (source + \".\").split(\".\");\n                this.#value = BigInt(integerPart + decimalPart.substr(0, BigDecimal.LIMIT_PRECISION).padEnd(BigDecimal.LIMIT_PRECISION, \"0\"));\n                if(decimalPart.charCodeAt(BigDecimal.LIMIT_PRECISION) > 52)\n                    this.#value++;\n            }\n\n\t\treturn;\n    }\n\n    #fromBigInt(source)\n    {\n        let result;\n\n        result = new BigDecimal(this);\n        result.#value = source;\n\n        return(result);\n    }\n\n    #fromBigIntDivision(dividend, divisor)\n    {\n        return(this.#fromBigInt(dividend / divisor + dividend * 2n / divisor % 2n));\n    }\n\n    add(other)\n    {\n        return(this.#fromBigInt(this.#value + new BigDecimal(other).#value));\n    }\n\n    subtract(other)\n    {\n        return(this.#fromBigInt(this.#value - new BigDecimal(other).#value));\n    }\n\n    multiplyBy(other)\n    {\n        return(this.#fromBigIntDivision(this.#value * new BigDecimal(other).#value, BigDecimal.#VALUE_SHIFT));\n    }\n\n    divideBy(other)\n    {\n        return(this.#fromBigIntDivision(this.#value * BigDecimal.#VALUE_SHIFT, new BigDecimal(other).#value));\n    }\n\n    equals(other)\n    {\n        return(this.valueOf() == other);\n    }\n\n    valueOf()\n    {\n        return(this.#value);\n    }\n\n    toNumber()\n    {\n        return(+this.toString());\n    }\n\n    toString(precision = BigDecimal.LIMIT_PRECISION)\n    {\n        let text;\n\n        text = this.#fromBigIntDivision(this.#value, BigInt(\"1\" + \"0\".repeat(precision > -1 ? Math.max(BigDecimal.LIMIT_PRECISION - precision, 0) : BigDecimal.LIMIT_PRECISION))).#value.toString().padStart(precision + 1, \"0\");\n\n        return(text.substr(0, text.length - precision) + (\".\" + text.substr(-precision)).replace(BigDecimal.#PATTERN_TRAILING_ZERO, \"\"));\n    }\n}\n","import BigDecimal from \"./BigDecimal\";\n\nexport default class Value\n{\n\tstatic TYPE_X        = 1;\n\tstatic TYPE_Y        = 2;\n\tstatic TYPE_THETA    = 3;\n\tstatic TYPE_FLAG     = 4;\n\tstatic TYPE_UNIT     = 5;\n\n\tstatic getEmptyResult()\n\t{\n\t\treturn(\n\t\t{\n\t\t\tstack: [],\n\t\t\tsequence: [],\n\t\t\tarity: null,\n\t\t\tpending: 0,\n\t\t\tx: new BigDecimal(0),\n\t\t\ty: new BigDecimal(0),\n\t\t\tfixNext: false,\n\t\t\tlastAngle: null,\n\t\t\toriginX: new BigDecimal(0),\n\t\t\toriginY: new BigDecimal(0) \n\t\t});\n\t}\n};\n","import Token from \"./Token\";\nimport BigDecimal from \"./BigDecimal\";\nimport Value from \"./Value\";\n\nexport default class TokenStream\n{\n    static #PRIORITY =\n    [\n        {\n            type: Token.TYPE_NUMBER,\n            expression: new RegExp(\"^[0-9]*\\\\.?[0-9]+\", \"\"),\n            handler: value => new BigDecimal(value)\n        },\n        {\n            type: Token.TYPE_COMMAND,\n            expression: new RegExp(\"^[achlmqstvz](?![a-z_$])\", \"i\"),\n            handler: value => (\n            {\n                \"a\":\n                [\n                    Value.TYPE_X,\n                    Value.TYPE_Y,\n                    Value.TYPE_THETA,\n                    Value.TYPE_FLAG,\n                    Value.TYPE_FLAG,\n                    Value.TYPE_X,\n                    Value.TYPE_Y\n                ],\n                \"c\":\n                [\n                    Value.TYPE_X,\n                    Value.TYPE_Y,\n                    Value.TYPE_X,\n                    Value.TYPE_Y,\n                    Value.TYPE_X,\n                    Value.TYPE_Y\n                ],\n                \"h\":\n                [\n                    Value.TYPE_X\n                ],\n                \"l\":\n                [\n                    Value.TYPE_X,\n                    Value.TYPE_Y\n                ],\n                \"m\":\n                [\n                    Value.TYPE_X,\n                    Value.TYPE_Y\n                ],\n                \"q\":\n                [\n                    Value.TYPE_X,\n                    Value.TYPE_Y,\n                    Value.TYPE_X,\n                    Value.TYPE_Y\n                ],\n                \"s\":\n                [\n                    Value.TYPE_X,\n                    Value.TYPE_Y,\n                    Value.TYPE_X,\n                    Value.TYPE_Y\n                ],\n                \"t\":\n                [\n                    Value.TYPE_X,\n                    Value.TYPE_Y\n                ],\n                \"v\":\n                [\n                    Value.TYPE_Y\n                ],\n                \"z\":\n                [\n                ]\n            }[value.toLowerCase()])\n        },\n        {\n            type: Token.TYPE_DELIMITER,\n            expression: new RegExp(\"^,+\", \"\"),\n            handler: () => null\n        },\n        {\n            type: Token.TYPE_WHITESPACE,\n            expression: new RegExp(\"^\\\\s+\", \"\"),\n            handler: () => null\n        },\n        {\n            type: Token.TYPE_IDENTIFIER,\n            expression: new RegExp(\"^[a-z_$][a-z0-9_$]*\", \"i\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_BRACKET,\n            expression: new RegExp(\"^[()]\", \"\"),\n            handler: value => value === \"(\"\n        },\n        {\n            type: Token.TYPE_OPERATOR_ADD,\n            expression: new RegExp(\"^\\\\+\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_MULTIPLY,\n            expression: new RegExp(\"^\\\\*\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_SUBTRACT,\n            expression: new RegExp(\"^-\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_DIVIDE,\n            expression: new RegExp(\"^/\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_ROTATE,\n            expression: new RegExp(\"^%r\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_SKEW_HORIZONTAL,\n            expression: new RegExp(\"^%h\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_SKEW_VERTICAL,\n            expression: new RegExp(\"^%v\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_FIX,\n            expression: new RegExp(\"^@\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_MEASURE,\n            expression: new RegExp(\"^\\\\|\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_ASSIGN,\n            expression: new RegExp(\"^=\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_REPEAT,\n            expression: new RegExp(\"^#\", \"\"),\n            handler: value => value\n        }\n    ];\n\n    #data = null;\n    #cursor = 0;\n\n    constructor(text)\n    {\n        var chainIndex;\n        var streamIndex;\n        var match;\n        var item;\n\n        this.#data = [];\n        streamIndex = 0;\n        while(text.length)\n        {\n            for(chainIndex = 0; chainIndex < TokenStream.#PRIORITY.length; chainIndex++)\n            {\n                item = TokenStream.#PRIORITY[chainIndex];\n                match = item.expression.exec(text);\n                if(match)\n                {\n                    this.#data.push(new Token(item.type, match[0], item.handler(match[0]), streamIndex));\n                    streamIndex += match[0].length;\n                    text = text.substr(match[0].length);\n                    break;\n                }\n            }\n            if(chainIndex === TokenStream.#PRIORITY.length)\n\t\t\t\tthrow(new SyntaxError(`Unexpected symbol \"${text.substr(0, 1)}\" at column ${streamIndex}`));\n        }\n        this.#data.push(new Token(Token.TYPE_END, null, null, streamIndex));\n    }\n\n    getCurrent()\n    {\n        return(this.#data[this.#cursor] ?? null);\n    }\n\n    getNext()\n    {\n        this.#cursor++;\n\n        return(this.getCurrent());\n    }\n\n    peekNext()\n    {\n        return(this.#data[this.#cursor + 1] ?? null);\n    }\n\n    reset()\n    {\n        this.#cursor = 0;\n\n        return(this.getCurrent());\n    }\n};\n","import BigDecimal from \"./BigDecimal\";\r\n\r\nexport default class Distortion\r\n{\r\n\tstatic OPERATION_NONE = 0;\r\n\tstatic OPERATION_ROTATE = 1;\r\n\tstatic OPERATION_SKEW_HORIZONTAL = 2;\r\n\tstatic OPERATION_SKEW_VERTICAL = 3;\r\n\r\n\tstatic #rotate(x0, y0, x1, y1, distortionValue)\r\n\t{\r\n\t\tvar cosine;\r\n\t\tvar sine;\r\n\r\n\t\tx1 = x1.subtract(x0);\r\n\t\ty1 = y1.subtract(y0);\r\n\t\tdistortionValue = (distortionValue.toNumber() % 360) * Math.PI / 180;\r\n\t\tcosine = Math.cos(distortionValue);\r\n\t\tsine = Math.sin(distortionValue);\r\n\t\tif(Math.abs(cosine - sine) < Number.EPSILON * 2)\r\n\t\t\tsine = cosine;\r\n\t\telse\r\n\t\t\tif(Math.abs(cosine + sine) < Number.EPSILON * 2)\r\n\t\t\t\tcosine = sine;\r\n\t\tif(Math.abs(cosine) < Number.EPSILON)\r\n\t\t\tcosine = 0;\r\n\t\tif(Math.abs(sine) < Number.EPSILON)\r\n\t\t\tsine = 0;\r\n\t\r\n\t\treturn(\r\n\t\t{\r\n\t\t\tx: x0.add(x1.multiplyBy(cosine)).subtract(y1.multiplyBy(sine)),\r\n\t\t\ty: y0.add(y1.multiplyBy(cosine)).add(x1.multiplyBy(sine))\r\n\t\t});\r\n\t}\r\n\t\r\n\tstatic #skewX(x0, y0, x1, y1, distortionValue)\r\n\t{\r\n\t\treturn(\r\n\t\t{\r\n\t\t\tx: x0.add(x1.subtract(x0).subtract(y1.multiplyBy(Math.tan((distortionValue.toNumber() % 360) * Math.PI / 180)))),\r\n\t\t\ty: y1\r\n\t\t});\r\n\t}\r\n\r\n\tstatic #skewY(x0, y0, x1, y1, distortionValue)\r\n\t{\r\n\t\treturn(\r\n\t\t{\r\n\t\t\tx: x1,\r\n\t\t\ty: y0.add(y1.subtract(y0).subtract(x1.multiplyBy(Math.tan((distortionValue.toNumber() % 360) * Math.PI / 180))))\r\n\t\t});\r\n\t}\r\n\r\n\tstatic #fixPoint(point, relative, topX, topY, distortionType, result)\r\n\t{\r\n\t\tif(distortionType === Distortion.OPERATION_SKEW_VERTICAL)\r\n\t\t\tpoint.x = topX.value;\r\n\t\telse\r\n\t\t\tif(topX.fixed)\r\n\t\t\t\tpoint.x = relative ? topX.value.subtract(result.x) : topX.value;\r\n\t\tif(distortionType === Distortion.OPERATION_SKEW_HORIZONTAL)\r\n\t\t\tpoint.y = topY.value;\r\n\t\telse\r\n\t\t\tif(topY.fixed)\r\n\t\t\t\tpoint.y = relative ? topY.value.subtract(result.y) : topY.value;\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tstatic applyDistortion(context, top, result, distortionType, distortionValue)\r\n\t{\r\n\t\tlet origin;\r\n\t\tlet point;\r\n\t\tlet command;\r\n\t\tlet relative;\r\n\t\tlet point1;\r\n\t\tlet point2;\r\n\t\tlet last;\r\n\t\tlet lastAngle;\r\n\r\n\t\tcommand = top[0].toLowerCase();\r\n\t\trelative = top[0].toLowerCase() === top[0];\r\n\t\torigin =\r\n\t\t{\r\n\t\t\tx: relative ? new BigDecimal(0) : result.x,\r\n\t\t\ty: relative ? new BigDecimal(0) : result.y\r\n\t\t}\r\n\t\tif(result.pending)\r\n\t\t\tthrow(new SyntaxError(`Too few arguments for command ${top[0]}`));\r\n\t\tif(result.fixNext)\r\n\t\t\tthrow(new SyntaxError(`Dangling fix operator after command ${top[0]}`));\r\n\t\tconst distortionFunction =\r\n\t\t({\r\n\t\t\t[Distortion.OPERATION_ROTATE]: this.#rotate,\r\n\t\t\t[Distortion.OPERATION_SKEW_HORIZONTAL]: this.#skewX,\r\n\t\t\t[Distortion.OPERATION_SKEW_VERTICAL]: this.#skewY\r\n\t\t})[distortionType] || this.#rotate;\r\n\t\t// TODO: Eventually, all values will need to be rounded just beyond this point\r\n\t\tswitch(command)\r\n\t\t{\r\n\t\t\tcase \"a\":\r\n\t\t\t\tpoint =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: top[6].value,\r\n\t\t\t\t\ty: top[7].value\r\n\t\t\t\t};\r\n\t\t\t\tif(distortionType !== Distortion.OPERATION_NONE)\r\n\t\t\t\t\tpoint = distortionFunction(origin.x, origin.y, point.x, point.y, distortionValue);\r\n\t\t\t\tDistortion.#fixPoint(point, relative, top[6], top[7], distortionType, result);\r\n\t\t\t\ttop =\r\n\t\t\t\t[\r\n\t\t\t\t\ttop[0],\r\n\t\t\t\t\ttop[1].value,\r\n\t\t\t\t\ttop[2].value,\r\n\t\t\t\t\ttop[3].fixed ? top[3].value : top[3].value.add(distortionValue),\r\n\t\t\t\t\ttop[4].value,\r\n\t\t\t\t\ttop[5].value,\r\n\t\t\t\t\tpoint.x,\r\n\t\t\t\t\tpoint.y\r\n\t\t\t\t];\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"c\":\r\n\t\t\t\tpoint1 =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: top[1].value,\r\n\t\t\t\t\ty: top[2].value\r\n\t\t\t\t};\r\n\t\t\t\tpoint2 =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: top[3].value,\r\n\t\t\t\t\ty: top[4].value\r\n\t\t\t\t};\r\n\t\t\t\tpoint =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: top[5].value,\r\n\t\t\t\t\ty: top[6].value\r\n\t\t\t\t};\r\n\t\t\t\tif(distortionType !== Distortion.OPERATION_NONE)\r\n\t\t\t\t{\r\n\t\t\t\t\tpoint1 = distortionFunction(origin.x, origin.y, point1.x, point1.y, distortionValue);\r\n\t\t\t\t\tpoint2 = distortionFunction(origin.x, origin.y, point2.x, point2.y, distortionValue);\r\n\t\t\t\t\tpoint = distortionFunction(origin.x, origin.y, point.x, point.y, distortionValue);\r\n\t\t\t\t}\r\n\t\t\t\tDistortion.#fixPoint(point, relative, top[5], top[6], distortionType, result);\r\n\t\t\t\ttop =\r\n\t\t\t\t[\r\n\t\t\t\t\ttop[0],\r\n\t\t\t\t\ttop[1].fixed ? (relative ? top[1].value.subtract(result.x) : top[1].value) : point1.x,\r\n\t\t\t\t\ttop[2].fixed ? (relative ? top[2].value.subtract(result.y) : top[2].value) : point1.y,\r\n\t\t\t\t\ttop[3].fixed ? (relative ? top[3].value.subtract(result.x) : top[3].value) : point2.x,\r\n\t\t\t\t\ttop[4].fixed ? (relative ? top[4].value.subtract(result.y) : top[4].value) : point2.y,\r\n\t\t\t\t\tpoint.x,\r\n\t\t\t\t\tpoint.y\r\n\t\t\t\t];\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"s\":\r\n\t\t\tcase \"q\":\r\n\t\t\t\tpoint1 =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: top[1].value,\r\n\t\t\t\t\ty: top[2].value\r\n\t\t\t\t};\r\n\t\t\t\tpoint =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: top[3].value,\r\n\t\t\t\t\ty: top[4].value\r\n\t\t\t\t};\r\n\t\t\t\tif(distortionType !== Distortion.OPERATION_NONE)\r\n\t\t\t\t{\r\n\t\t\t\t\tpoint1 = distortionFunction(origin.x, origin.y, point1.x, point1.y, distortionValue);\r\n\t\t\t\t\tpoint = distortionFunction(origin.x, origin.y, point.x, point.y, distortionValue);\r\n\t\t\t\t}\r\n\t\t\t\tDistortion.#fixPoint(point, relative, top[3], top[4], distortionType, result);\r\n\t\t\t\ttop =\r\n\t\t\t\t[\r\n\t\t\t\t\ttop[0],\r\n\t\t\t\t\tpoint1.x,\r\n\t\t\t\t\tpoint1.y,\r\n\t\t\t\t\tpoint.x,\r\n\t\t\t\t\tpoint.y\r\n\t\t\t\t];\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"l\":\r\n\t\t\tcase \"h\":\r\n\t\t\tcase \"v\":\r\n\t\t\t\tlet topX = command === \"v\" ? {value: new BigDecimal(origin.x), fixed: top[1].fixed} : top[1];\r\n\t\t\t\tlet topY = command === \"h\" ? {value: new BigDecimal(origin.y), fixed: top[1].fixed} : (command === \"v\" ? top[1] : top[2]);\r\n\t\t\t\tpoint =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: topX.value,\r\n\t\t\t\t\ty: topY.value\r\n\t\t\t\t};\r\n\t\t\t\tif(distortionType !== Distortion.OPERATION_NONE)\r\n\t\t\t\t\tpoint = distortionFunction(origin.x, origin.y, point.x, point.y, distortionValue);\r\n\t\t\t\tlastAngle = Math.atan2(point.y.subtract(origin.y).toNumber(), point.x.subtract(origin.x).toNumber()) * 180 / Math.PI;\r\n\t\t\t\tDistortion.#fixPoint(point, relative, topX, topY, distortionType, result);\r\n\t\t\t\ttop = point.x.equals(origin.x)\r\n\t\t\t\t\t?\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tpoint.y.equals(origin.y)\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t[\"v\", point.y]\r\n\t\t\t\t\t)\r\n\t\t\t\t\t:\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tpoint.y.equals(origin.y)\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\t[\"h\", point.x]\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t[\"l\", point.x, point.y]\r\n\t\t\t\t\t);\r\n\t\t\t\tif(top)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(context.optimisation.path.combineCommands && result.sequence.length > 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlast = result.sequence[result.sequence.length - 1];\r\n\t\t\t\t\t\tif(last[0].toLowerCase() === top[0].toLowerCase() && lastAngle === result.lastAngle)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif(relative)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif(last.length > 2)\r\n\t\t\t\t\t\t\t\t\tlast[2] = last[2].add(top[2]);\r\n\t\t\t\t\t\t\t\tlast[1] = last[1].add(top[1]);\r\n\t\t\t\t\t\t\t\ttop = null;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tresult.sequnce.pop();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresult.lastAngle = lastAngle;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"m\":\r\n\t\t\tcase \"t\":\r\n\t\t\t\tpoint =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: top[1].value,\r\n\t\t\t\t\ty: top[2].value\r\n\t\t\t\t}\r\n\t\t\t\tif(distortionType !== Distortion.OPERATION_NONE)\r\n\t\t\t\t\tpoint = distortionFunction(origin.x, origin.y, point.x, point.y, distortionValue);\r\n\t\t\t\tDistortion.#fixPoint(point, relative, top[1], top[2], distortionType, result);\r\n\t\t\t\ttop = [top[0], point.x, point.y];\r\n\t\t\t\tif(context.optimisation.path.combineCommands && command === \"m\" && result.sequence.length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tlast = result.sequence[result.sequence.length - 1];\r\n\t\t\t\t\tif(last[0].toLowerCase() === \"m\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(relative)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlast[1] = last[1].add(top[1]);\r\n\t\t\t\t\t\t\tlast[2] = last[2].add(top[2]);\r\n\t\t\t\t\t\t\ttop = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tresult.sequnce.pop();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"z\":\r\n\t\t\t\ttop = [\"z\"];\r\n\t\t\t\tresult.x = new BigDecimal(result.originX);\r\n\t\t\t\tresult.y = new BigDecimal(result.originY);\r\n\t\t\t\tresult.lastAngle = null;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tif(command !== \"z\")\r\n\t\t{\r\n\t\t\tresult.x = relative ? result.x.add(point.x) : point.x;\r\n\t\t\tresult.y = relative ? result.y.add(point.y) : point.y;\r\n\t\t}\r\n\t\tif(command === \"m\")\r\n\t\t{\r\n\t\t\tresult.originX = new BigDecimal(result.x);\r\n\t\t\tresult.originY = new BigDecimal(result.y);\r\n\t\t}\r\n\t\tif(top)\r\n\t\t{\r\n\t\t\tif(!relative)\r\n\t\t\t\ttop[0] = top[0].toUpperCase();\r\n\t\t\t/* TODO: Primitive optimiser someday? */\r\n\t\t\tresult.sequence.push(top);\r\n\t\t}\r\n\r\n\t\treturn;\r\n\t}\r\n}\r\n","import ExpressionParser from \"./ExpressionParser\";\nimport Token from \"./Token\";\nimport TokenStream from \"./TokenStream\";\nimport BigDecimal from \"./BigDecimal\";\nimport Value from \"./Value\";\nimport Distortion from \"./Distortion\";\n\nexport default class PathParser\n{\n\tconstructor(stream)\n\t{\n\t\tthis.stream = stream;\n\n\t\treturn;\n\t}\n\n\tstatic resultToString(result, precision = BigDecimal.LIMIT_PRECISION)\n\t{\n\t\treturn(result.sequence.map(i => \"\" + i[0].toString() + (i.length > 1 ? \" \" + i.slice(1).join(\",\") : \"\")).join(\" \"));\n\t}\n\n\tparseList(context, result = Value.getEmptyResult(), limit = -1)\n\t{\n\t\tlet state;\n\t\tlet top;\n\n\t\tstate =\n\t\t{\n\t\t\tcurrent: this.stream.getCurrent(),\n\t\t\treading: true,\n\t\t\tindex: 0\n\t\t};\n\t\ttop = [];\n\n\t\twhile(state.reading && state.current && (state.index < limit || limit === -1))\n\t\t{\n\t\t\tswitch(state.current.type)\n\t\t\t{\n\t\t\t\tcase Token.TYPE_WHITESPACE:\n\t\t\t\tcase Token.TYPE_DELIMITER:\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_END:\n\t\t\t\t\tstate.reading = false;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet expResult = new ExpressionParser(this.stream).parse(context, 0, [], false, {x: result.x, y: result.y}, Value.TYPE_UNIT);\n\t\t\t\t\tresult.sequence.push([expResult.accumulator]);\n\t\t\t\t\tresult.index++;\n\t\t\t\t\tstate.current = this.stream.getCurrent();\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tstate.current = this.stream.getNext();\n\t\t}\n\n\t\treturn(result);\n\t}\n\n\tparse(context, result = Value.getEmptyResult(), distortionType = Distortion.OPERATION_NONE, distortionValue = new BigDecimal(0), index = 1, argumentList)\n\t{\n\t\tlet state;\n\t\tlet top;\n\t\tlet invoked;\n\t\tlet next;\n\n\t\tstate =\n\t\t{\n\t\t\tcurrent: this.stream.getCurrent(),\n\t\t\treading: true\n\t\t};\n\n\t\twhile(state.reading && state.current)\n\t\t{\n\t\t\tswitch(state.current.type)\n\t\t\t{\n\t\t\t\tcase Token.TYPE_COMMAND:\n\t\t\t\t\tif(result.arity === null && state.current.name.toLowerCase() !== \"m\")\n\t\t\t\t\t\tthrow(new SyntaxError(\"Paths must begin with a Move To command\"));\n\t\t\t\t\tif(top)\n\t\t\t\t\t\tDistortion.applyDistortion(context, top, result, distortionType, distortionValue);\n\t\t\t\t\tresult.arity = state.current.value;\n\t\t\t\t\tresult.pending = result.arity.length;\n\t\t\t\t\ttop = [state.current.name];\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_OPERATOR_FIX:\n\t\t\t\t\tresult.fixNext = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_WHITESPACE:\n\t\t\t\tcase Token.TYPE_DELIMITER:\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_END:\n\t\t\t\t\tif(top)\n\t\t\t\t\t\tDistortion.applyDistortion(context, top, result, distortionType, distortionValue);\n\t\t\t\t\tstate.reading = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_IDENTIFIER:\n\t\t\t\tcase Token.TYPE_NUMBER:\n\t\t\t\t\tif(state.current.type === Token.TYPE_NUMBER)\n\t\t\t\t\t{\n\t\t\t\t\t\tnext = this.stream.peekNext();\n\t\t\t\t\t\tinvoked = next.type === Token.TYPE_IDENTIFIER && context.segment[next.name];\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tinvoked = context.segment[state.current.name];\n\t\t\t\t\tif(invoked)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(top)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tDistortion.applyDistortion(context, top, result, distortionType, distortionValue);\n\t\t\t\t\t\t\ttop = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnew ExpressionParser(this.stream).parseInvocation(context, result, argumentList);\n\t\t\t\t\t\tstate.current = this.stream.getCurrent();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tif(!top)\n\t\t\t\t\t\tthrow(new Error(`Expected command, but found \"${state.current.name}\"`));\n\t\t\t\t\tif(!result.pending)\n\t\t\t\t\t{\n\t\t\t\t\t\tDistortion.applyDistortion(context, top, result, distortionType, distortionValue);\n\t\t\t\t\t\tresult.pending = result.arity.length;\n\t\t\t\t\t\ttop = [top[0]];\n\t\t\t\t\t}\n\t\t\t\t\tif(!result.pending)\n\t\t\t\t\t\tthrow(new SyntaxError(`Too many parameters supplied to command \"${top[0]}\"`));\n\t\t\t\t\tif(top[0].toLowerCase() === \"a\" && (result.pending === 4 || result.pending === 3) && state.current.type === Token.TYPE_NUMBER && state.current.name.length > 1 && [\"0\", \"1\"].indexOf(state.current.name.substr(0, 1)) !== -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttop.push({fixed: result.fixNext, value: new BigDecimal(state.current.name.substr(0, 1))});\n\t\t\t\t\t\tstate.current.name = state.current.name.substr(1);\n\t\t\t\t\t\tstate.current.value = new BigDecimal(state.current.name);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif(state.current.type === Token.TYPE_NUMBER)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnext = this.stream.peekNext();\n\t\t\t\t\t\t\tinvoked = next.type === Token.TYPE_IDENTIFIER && context.segment[next.name];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tinvoked = context.segment[state.current.name];\n\t\t\t\t\t\tif(!invoked)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet expResult = new ExpressionParser(this.stream).parse(context, 0, argumentList, false, {x: result.x, y: result.y}, result.arity[result.arity.length - result.pending]);\n\t\t\t\t\t\t\ttop.push({fixed: result.fixNext, value: expResult.accumulator});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tresult.fixNext = false;\n\t\t\t\t\tresult.pending--;\n\t\t\t\t\tstate.current = this.stream.getCurrent();\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tstate.current = this.stream.getNext();\n\t\t}\n\n\t\treturn(result);\n\t}\n}\n","import TokenStream from \"./TokenStream\";\nimport Token from \"./Token\";\nimport BigDecimal from \"./BigDecimal\";\nimport Value from \"./Value\";\nimport PathParser from \"./PathParser\";\nimport Distortion from \"./Distortion\";\n\nexport default class ExpressionParser\n{\n    static #OPERATION_EVALUATE  = 1;\n    static #OPERATION_ADD       = 2;\n    static #OPERATION_SUBTRACT  = 3;\n    static #OPERATION_MULTIPLY  = 4;\n    static #OPERATION_DIVIDE    = 5;\n\n    constructor(stream)\n    {\n        this.stream = stream;\n\t\tthis.debug = false;\n    }\n\n    static #formatOperation(operation)\n    {\n\t\treturn(operation.value.toString() + \" \" + [\"\", \"=\", \"+\", \"-\", \"*\", \"/\"][operation.operation]);\n\t}\n\n    #unwind(result, limit)\n    {\n\t\tvar start;\n\t\tvar index;\n\t\tvar leftValue;\n\t\tvar leftOperation;\n\n\t\tstart = result.stack.length - 1;\n\t\twhile(start > -1 && result.stack[start].operation > limit)\n\t\t\tstart--;\n\t\tindex = start + 1;\n\t\tif(index < result.stack.length)\n\t\t{\n\t\t\tresult.stack.push({operation: ExpressionParser.#OPERATION_EVALUATE, value: result.accumulator});\n\t\t\tif(this.debug)\n\t\t\t\tconsole.log(\"<<\\n\" + result.stack.slice(index).map((i, j) => j + \": \" + ExpressionParser.#formatOperation(i)).join(\"\\n\"));\n\t\t\tleftValue = result.stack[index].value;\n\t\t\tfor(; index < result.stack.length - 1; index++)\n\t\t\t{\n\t\t\t\tleftOperation = result.stack[index].operation;\n\t\t\t\tswitch(leftOperation)\n\t\t\t\t{\n\t\t\t\t\tcase ExpressionParser.#OPERATION_MULTIPLY:\n\t\t\t\t\t\tleftValue = leftValue.multiplyBy(result.stack[index + 1].value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ExpressionParser.#OPERATION_DIVIDE:\n\t\t\t\t\t\tleftValue = leftValue.divideBy(result.stack[index + 1].value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ExpressionParser.#OPERATION_ADD:\n\t\t\t\t\t\tleftValue = leftValue.add(result.stack[index + 1].value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ExpressionParser.#OPERATION_SUBTRACT:\n\t\t\t\t\t\tleftValue = leftValue.subtract(result.stack[index + 1].value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult.accumulator = leftValue;\n\t\t\tresult.stack = result.stack.slice(0, start + 1);\n\t\t}\n\n\t\treturn;\n\t}\n\n    parse(context, depth = 0, argumentList = {}, insideArgumentList = false, position, type, additionalTerminatorList = [])\n    {\n\t\tvar result;\n\t\tvar state;\n\n\t\tresult =\n\t\t{\n\t\t\taccumulator: new BigDecimal(0),\n\t\t\tbase: 0,\n\t\t\tcounter: depth,\n\t\t\tdata: 0,\n\t\t\tstack: []\n\t\t};\n\t\tstate =\n\t\t{\n\t\t\tcurrent: this.stream.getCurrent(),\n\t\t\treading: true\n\t\t};\n\n\t\twhile(state.reading && state.current)\n\t\t{\n\t\t\tswitch(state.current.type)\n\t\t\t{\n\t\t\t\tcase Token.TYPE_NUMBER:\n\t\t\t\t\tif(result.data === Token.TYPE_WHITESPACE)\n\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected space-delimited value \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\tif(result.data === Token.TYPE_NUMBER)\n\t\t\t\t\t\tif(result.counter)\n\t\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate.reading = false;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\tconsole.log(\"Number\", state.current);\n\t\t\t\t\tresult.accumulator = state.current.value;\n\t\t\t\t\tresult.data = Token.TYPE_NUMBER;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_OPERATOR_DIVIDE:\n\t\t\t\t\tif(result.data !== Token.TYPE_NUMBER && result.data !== Token.TYPE_WHITESPACE)\n\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\tconsole.log(\"/\", state.current);\n\t\t\t\t\tresult.stack.push({operation: ExpressionParser.#OPERATION_DIVIDE, value: result.accumulator});\n\t\t\t\t\tresult.data = Token.TYPE_OPERATOR_DIVIDE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_OPERATOR_MULTIPLY:\n\t\t\t\t\tif(result.data !== Token.TYPE_NUMBER && result.data !== Token.TYPE_WHITESPACE)\n\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\tconsole.log(\"*\", state.current);\n\t\t\t\t\tresult.stack.push({operation: ExpressionParser.#OPERATION_MULTIPLY, value: result.accumulator});\n\t\t\t\t\tresult.data = Token.TYPE_OPERATOR_MULTIPLY;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_OPERATOR_SUBTRACT:\n\t\t\t\t\tif(result.data === Token.TYPE_NUMBER && result.counter === 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tstate.reading = false;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(result.data !== Token.TYPE_NUMBER && result.data !== 0 && result.data !== Token.TYPE_BRACKET && result.data !== Token.TYPE_WHITESPACE)\n\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\tconsole.log(\"-\", state.current);\n\t\t\t\t\tthis.#unwind(result, ExpressionParser.#OPERATION_SUBTRACT);\n\t\t\t\t\tresult.stack.push({operation: ExpressionParser.#OPERATION_SUBTRACT, value: result.accumulator});\n\t\t\t\t\tresult.data = Token.TYPE_OPERATOR_SUBTRACT;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_OPERATOR_ADD:\n\t\t\t\t\tif(result.data !== Token.TYPE_NUMBER && result.data !== Token.TYPE_WHITESPACE)\n\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\tconsole.log(\"+\", state.current);\n\t\t\t\t\tthis.#unwind(result, ExpressionParser.#OPERATION_SUBTRACT);\n\t\t\t\t\tresult.stack.push({operation: ExpressionParser.#OPERATION_ADD, value: result.accumulator});\n\t\t\t\t\tresult.data = Token.TYPE_OPERATOR_ADD;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_OPERATOR_MEASURE:\n\t\t\t\t\tif(result.data === Token.TYPE_WHITESPACE)\n\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected space before measure operator (\"${state.current.name}\") at column ${state.current.position}`));\n\t\t\t\t\tif(result.data === Token.TYPE_NUMBER)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\t\tconsole.log(\"*\", state.current);\n\t\t\t\t\t\tresult.stack.push({operation: ExpressionParser.#OPERATION_MULTIPLY, value: result.accumulator});\n\t\t\t\t\t}\n\t\t\t\t\tif(type === Value.TYPE_UNIT)\n\t\t\t\t\t\tthrow(new SyntaxError(`The unit type is incompatible with the return value of a segment measurement`));\n\t\t\t\t\tif(type === Value.TYPE_FLAG)\n\t\t\t\t\t\tthrow(new SyntaxError(`The flag type is incompatible with the return value of a segment measurement`));\n\t\t\t\t\tthis.stream.getNext();\n\t\t\t\t\tif(this.stream.getCurrent().type === Token.TYPE_WHITESPACE)\n\t\t\t\t\t\tthis.stream.getNext();\n\t\t\t\t\tif(this.stream.getCurrent().type !== Token.TYPE_IDENTIFIER)\n\t\t\t\t\t\tthrow(new SyntaxError(`Expected identifier at ${this.stream.getCurrent().position}, found \"${this.stream.getCurrent().name}\"`))\n\t\t\t\t\tlet expResult = Value.getEmptyResult();\n\t\t\t\t\texpResult.x = position.x;\n\t\t\t\t\texpResult.y = position.y;\n\t\t\t\t\texpResult.arity = [];\n\t\t\t\t\tnew ExpressionParser(this.stream).parseInvocation(context, expResult, argumentList);\n\t\t\t\t\tresult.data = Token.TYPE_NUMBER;\n\t\t\t\t\tswitch(type)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase Value.TYPE_X:\n\t\t\t\t\t\t\tresult.accumulator = expResult.x.subtract(position.x);\n\t\t\t\t\t\t\tconsole.log(\"RETURNING X\", result.accumulator.toString());\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase Value.TYPE_Y:\n\t\t\t\t\t\t\tresult.accumulator = expResult.y.subtract(position.y);\n\t\t\t\t\t\t\tconsole.log(\"RETURNING Y\", result.accumulator.toString());\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase Value.TYPE_THETA:\n\t\t\t\t\t\t\tresult.accumulator = (new BigDecimal(Math.atan2(expResult.x.subtract(position.x).toNumber(), expResult.y.subtract(position.y).toNumber()))).multiplyBy(180).divideBy(BigDecimal.PI);\n\t\t\t\t\t\t\tconsole.log(\"RETURNING THETA\", result.accumulator.toString());\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(this.stream.getCurrent().type === Token.TYPE_WHITESPACE)\n\t\t\t\t\t\tthis.stream.getNext();\n\t\t\t\t\tstate.current = this.stream.getCurrent();\n\t\t\t\t\tif(state.current.type !== Token.TYPE_OPERATOR_MEASURE)\n\t\t\t\t\t\tthrow(new SyntaxError(`Expected measurement operator, found \"${state.current.name}`));\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_BRACKET:\n\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\tconsole.log(state.current.value ? \"(\" : \")\", state.current, result.counter, context.depth);\n\t\t\t\t\tif(state.current.value)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(result.data === Token.TYPE_WHITESPACE)\n\t\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\t\tresult.counter++;\n\t\t\t\t\t\tif(result.data === Token.TYPE_NUMBER)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\t\t\tconsole.log(\"*\", state.current);\n\t\t\t\t\t\t\tresult.stack.push({operation: ExpressionParser.#OPERATION_MULTIPLY, value: result.accumulator});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.accumulator = new BigDecimal(0);\n\t\t\t\t\t\tresult.stack.push({operation: ExpressionParser.#OPERATION_EVALUATE});\n\t\t\t\t\t\tresult.data = Token.TYPE_BRACKET;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif(!insideArgumentList && result.counter === context.depth)\n\t\t\t\t\t\t\tthrow(new SyntaxError(`Mismatched bracket at column ${state.current.position}`));\n\t\t\t\t\t\tif(result.data !== Token.TYPE_NUMBER)\n\t\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected bracket at column ${state.current.position}`));\n\t\t\t\t\t\tthis.#unwind(result, ExpressionParser.#OPERATION_SUBTRACT);\n\t\t\t\t\t\tthis.#unwind(result, ExpressionParser.#OPERATION_EVALUATE);\n\t\t\t\t\t\tresult.stack.pop();\n\t\t\t\t\t\tresult.data = Token.TYPE_NUMBER;\n\t\t\t\t\t\tif(insideArgumentList)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate.reading = false;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tresult.counter--;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_IDENTIFIER:\n\t\t\t\t\tif(result.data === Token.TYPE_WHITESPACE)\n\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected space-delimited value \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\tif(state.current.name in argumentList || state.current.name in context.unit)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(result.data === Token.TYPE_NUMBER)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\t\t\tconsole.log(\"*\", state.current);\n\t\t\t\t\t\t\tresult.stack.push({operation: ExpressionParser.#OPERATION_MULTIPLY, value: result.accumulator});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\t\tconsole.log(\"Unit\", state.current);\n\t\t\t\t\t\tresult.accumulator = argumentList[state.current.name] ?? context.unit[state.current.name];\n\t\t\t\t\t\tresult.data = Token.TYPE_NUMBER;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tthrow(new ReferenceError(`Reference to undefined unit \"${state.current.name}\" at column ${state.current.position}.`));\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_DELIMITER:\n\t\t\t\t\tif(result.counter)\n\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected delimiter \"${state.current.name}\" in expression at column ${state.current.position}.`));\n\t\t\t\tcase Token.TYPE_WHITESPACE:\n\t\t\t\t\tif(result.counter || result.data === 0) // TODO\n\t\t\t\t\t{\n\t\t\t\t\t\tif(result.data === Token.TYPE_NUMBER)\n\t\t\t\t\t\t\tresult.data = Token.TYPE_WHITESPACE;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase Token.TYPE_END:\n\t\t\t\t\tif(result.counter > context.depth)\n\t\t\t\t\t\tthrow(new SyntaxError(`Missing closing bracket(s) at end of segment (nesting depth = ${result.counter - context.depth})`));\n\t\t\t\t\tstate.reading = false;\n\t\t\t\t\tcontinue;\n\t\t\t\tdefault:\n\t\t\t\t\tif(additionalTerminatorList.includes(state.current.type))\n\t\t\t\t\t{\n\t\t\t\t\t\tstate.reading = false;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t}\n\t\t\tstate.current = this.stream.getNext();\n\t\t}\n\t\tthis.#unwind(result, ExpressionParser.#OPERATION_SUBTRACT);\n\t\tthis.#unwind(result, 0);\n\n\t\treturn(result);\n\t}\n\n\tparseInvocation(context, result, argumentList)\n\t{\n\t\tlet state;\n\t\tlet segment;\n\t\tlet inner;\n\t\tlet name;\n\t\tlet index;\n\t\tlet expResult;\n\t\tlet type;\n\t\n\t\tstate =\n\t\t{\n\t\t\tcurrent: this.stream.getCurrent(),\n\t\t\treading: true,\n\t\t\thasCount: false,\n\t\t\thasArgumentList: false,\n\t\t\tdistortionValue: new BigDecimal(0),\n\t\t\tdistorationType: Distortion.OPERATION_NONE,\n\t\t\tcount: false,\n\t\t\targumentList: {},\n\t\t\tdelimited: false\n\t\t};\n\t\n\t\tif(state.current.type === Token.TYPE_NUMBER)\n\t\t{\n\t\t\tstate.count = state.current.value.toNumber();\n\t\t\tstate.hasCount = true;\n\t\t\tstate.current = this.stream.getNext();\n\t\t}\n\t\telse\n\t\t\tstate.count = 1;\n\t\tname = state.current.name;\n\t\tif(result.stack.indexOf(name) === -1)\n\t\t{\n\t\t\tif(!(name in context.segment))\n\t\t\t\tthrow(new ReferenceError(`Reference to undefined section \"${name}\" at ${state.current.position}`));\n\t\t\tsegment = context.segment[name];\n\t\t\tconst segmentName = name;\n\t\t\tstate.current = this.stream.getNext();\n\t\t\twhile(state.reading === true && state.current)\n\t\t\t{\n\t\t\t\tswitch(state.current.type)\n\t\t\t\t{\n\t\t\t\t\tcase Token.TYPE_OPERATOR_ROTATE:\n\t\t\t\t\tcase Token.TYPE_OPERATOR_SKEW_HORIZONTAL:\n\t\t\t\t\tcase Token.TYPE_OPERATOR_SKEW_VERTICAL:\n\t\t\t\t\t\tif(state.distorationType !== Distortion.OPERATION_NONE)\n\t\t\t\t\t\t\tthrow(new Error(`Encountered distortion operator, but distortion for segment \"${name}\" is already specified (parameter value: ${state.distortionValue})`));\n\t\t\t\t\t\tthis.stream.getNext();\n\t\t\t\t\t\texpResult = new ExpressionParser(this.stream).parse(context, 0, argumentList, false, {x: result.x, y: result.y}, Value.TYPE_THETA, [Token.TYPE_OPERATOR_ROTATE, Token.TYPE_OPERATOR_SKEW_HORIZONTAL, Token.TYPE_OPERATOR_SKEW_VERTICAL]);\n\t\t\t\t\t\tstate.distortionValue = expResult.accumulator;\n\t\t\t\t\t\tstate.distorationType =\n\t\t\t\t\t\t({\n\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_ROTATE]: Distortion.OPERATION_ROTATE,\n\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_SKEW_HORIZONTAL]: Distortion.OPERATION_SKEW_HORIZONTAL,\n\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_SKEW_VERTICAL]: Distortion.OPERATION_SKEW_VERTICAL\n\t\t\t\t\t\t})[state.current.type];\n\t\t\t\t\t\tstate.current = this.stream.getCurrent();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tcase Token.TYPE_BRACKET:\n\t\t\t\t\t\tif(!state.hasArgumentList)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(state.current.value)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstate.current = this.stream.getNext();\n\t\t\t\t\t\t\t\twhile(!state.hasArgumentList)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tswitch(state.current.type)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_BRACKET:\n\t\t\t\t\t\t\t\t\t\t\tif(state.current.value)\n\t\t\t\t\t\t\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\t\t\t\t\t\t\tstate.hasArgumentList = true;\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_IDENTIFIER:\n\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_ROTATE:\n\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_REPEAT:\n\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_SKEW_HORIZONTAL:\n\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_SKEW_VERTICAL:\n\t\t\t\t\t\t\t\t\t\t\tstate.delimited = false;\n\t\t\t\t\t\t\t\t\t\t\tname = state.current.name;\n\t\t\t\t\t\t\t\t\t\t\ttype = state.current.type;\n\t\t\t\t\t\t\t\t\t\t\tswitch(type)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_IDENTIFIER:\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(context.segment[name])\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthrow(new ReferenceError(`Argument \"${name}\" is already defined as a segment`));\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_ROTATE:\n\t\t\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_SKEW_HORIZONTAL:\n\t\t\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_SKEW_VERTICAL:\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(state.distorationType !== Distortion.OPERATION_NONE)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthrow(new Error(`Encountered distortion operator, but distortion for segment \"${segmentName}\" is already specified (parameter value: ${state.distortionValue})`));\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_REPEAT:\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(state.hasCount)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthrow(new ReferenceError(`Execution count is already defined for this invocation`));\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif(this.stream.peekNext().type === Token.TYPE_WHITESPACE)\n\t\t\t\t\t\t\t\t\t\t\t\tstate.current = this.stream.getNext();\n\t\t\t\t\t\t\t\t\t\t\tstate.current = this.stream.getNext();\n\t\t\t\t\t\t\t\t\t\t\tif(state.current.type === Token.TYPE_END)\n\t\t\t\t\t\t\t\t\t\t\t\tthrow(new Error(`Unexpected end of segment at ${state.current.position}`));\n\t\t\t\t\t\t\t\t\t\t\tif(state.current.type !== Token.TYPE_OPERATOR_ASSIGN)\n\t\t\t\t\t\t\t\t\t\t\t\tthrow(new SyntaxError(`Expected assignment operator after argument name, but found \"${state.current.name}\"`));\n\t\t\t\t\t\t\t\t\t\t\tstate.current = this.stream.getNext();\n\t\t\t\t\t\t\t\t\t\t\texpResult = new ExpressionParser(this.stream).parse(context, 0, argumentList, true, {x: result.x, y: result.y},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t[Token.TYPE_IDENTIFIER]: Value.TYPE_UNIT,\n\t\t\t\t\t\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_ROTATE]: Value.TYPE_THETA,\n\t\t\t\t\t\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_SKEW_HORIZONTAL]: Value.TYPE_THETA,\n\t\t\t\t\t\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_SKEW_VERTICAL]: Value.TYPE_THETA,\n\t\t\t\t\t\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_REPEAT]: Value.TYPE_UNIT,\n\t\t\t\t\t\t\t\t\t\t\t}[type]);\n\t\t\t\t\t\t\t\t\t\t\tswitch(type)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_IDENTIFIER:\n\t\t\t\t\t\t\t\t\t\t\t\t\tstate.argumentList[name] = expResult.accumulator;\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_ROTATE:\n\t\t\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_SKEW_HORIZONTAL:\n\t\t\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_SKEW_VERTICAL:\n\t\t\t\t\t\t\t\t\t\t\t\t\tstate.distortionValue = expResult.accumulator;\n\t\t\t\t\t\t\t\t\t\t\t\t\tstate.distorationType = ({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_ROTATE]: Distortion.OPERATION_ROTATE,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_SKEW_HORIZONTAL]: Distortion.OPERATION_SKEW_HORIZONTAL,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_SKEW_VERTICAL]: Distortion.OPERATION_SKEW_VERTICAL\n\t\t\t\t\t\t\t\t\t\t\t\t\t})[type];\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_REPEAT:\n\t\t\t\t\t\t\t\t\t\t\t\t\tstate.count = expResult.accumulator.toNumber();\n\t\t\t\t\t\t\t\t\t\t\t\t\tstate.hasCount = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tstate.current = this.stream.getCurrent();\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_DELIMITER:\n\t\t\t\t\t\t\t\t\t\t\tif(state.delimited)\n\t\t\t\t\t\t\t\t\t\t\t\tthrow(new Error(`Unexpected delimiter at column ${state.current.position}`));\n\t\t\t\t\t\t\t\t\t\t\tstate.delimited = true;\n\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_WHITESPACE:\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_END:\n\t\t\t\t\t\t\t\t\t\t\tthrow(new Error(`Unexpected end of segment at ${state.current.position}`));\n\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tstate.current = this.stream.getNext();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate.reading = false;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Token.TYPE_WHITESPACE:\n\t\t\t\t\t\tif([Token.TYPE_OPERATOR_ROTATE, Token.TYPE_OPERATOR_SKEW_HORIZONTAL, Token.TYPE_OPERATOR_SKEW_VERTICAL].includes(this.stream.peekNext().type))\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tstate.reading = false;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tstate.current = this.stream.getNext();\n\t\t\t}\n\t\t\tif(state.count !== parseInt(state.count))\n\t\t\t\tthrow(new Error(`The execution count (${state.count}) for segment \"${name}\" must be an integer.`));\n\t\t\tif(state.count < 1)\n\t\t\t\tthrow(new Error(`The execution count (${state.count}) for segment \"${name}\" can't be less than 1.`));\n\t\t\tfor(index = 1; index <= state.count; index++)\n\t\t\t{\n\t\t\t\tinner = new PathParser(new TokenStream(segment));\n\t\t\t\tinner.parse(context, result, state.distorationType, state.distortionValue, index, state.argumentList);\n\t\t\t\tresult.stack.pop();\n\t\t\t}\n\t\t\tstate.reading = false;\n\t\t}\n\t\telse\n\t\t\tthrow(new ReferenceError(`Segment ${state.current.name} cannot call itself`));\n\t\n\t\treturn;\n\t}\n}\n","import ExpressionParser from \"./ExpressionParser\";\nimport TokenStream from \"./TokenStream\";\nimport PathParser from \"./PathParser\";\nimport BigDecimal from \"./BigDecimal\";\nimport Value from \"./Value\";\n\nexport default class Transformer\n{\n\tconstructor(text)\n\t{\n\t\tthis.document = Transformer.#parseXML(text);\n\t}\n\n\tstatic #parseXML(text)\n\t{\n\t\treturn((new (typeof(DOMParser) === \"undefined\" ? require('xmldom').DOMParser : DOMParser)()).parseFromString(text, \"text/xml\"));\n\t}\n\n\t#parseUnitList(context, list)\n\t{\n\t\tlet stack = [];\n\t\tlet item;\n\n\t\twhile(stack.length || list.length)\n\t\t{\n\t\t\tif(stack.length)\n\t\t\t\titem = stack.pop();\n\t\t\telse\n\t\t\t{\n\t\t\t\titem = list.shift();\n\t\t\t\tif(!item.previousSibling.tagName && item.previousSibling.nodeValue.trim() === \"\")\n\t\t\t\t\titem.parentNode.removeChild(item.previousSibling);\n\t\t\t\titem.parentNode.removeChild(item);\n\t\t\t}\n\t\t\tlet parser = new ExpressionParser(new TokenStream(item.getAttribute(\"value\")));\n\t\t\ttry\n\t\t\t{\n\t\t\t\tlet result = parser.parse(context, 1, {}, false, null, Value.TYPE_UNIT);\n\t\t\t\tlet id = item.getAttribute(\"id\");\n\t\t\t\tif(id in context.unit)\n\t\t\t\t\tthrow(new Error(`Duplicate unit ID: \"${id}\"`));\n\t\t\t\tcontext.unit[id] = result.accumulator;\n\t\t\t}\n\t\t\tcatch(except)\n\t\t\t{\n\t\t\t\tif(except instanceof ReferenceError)\n\t\t\t\t{\n\t\t\t\t\tif(stack.filter(i => i.getAttribute(\"id\") === parser.stream.getCurrent().name).length === 1)\n\t\t\t\t\t\tthrow(new ReferenceError(`Circular reference to \"${parser.stream.getCurrent().name}\"`));\n\t\t\t\t\tstack.push(item);\n\t\t\t\t\tlet next = list.filter(i => i.getAttribute(\"id\") === parser.stream.getCurrent().name);\n\t\t\t\t\tif(next.length > 1)\n\t\t\t\t\t\tthrow(new ReferenceError(`Unable to resolve expression \"${item.getAttribute(\"value\")}\". Duplicate ID \"${parser.stream.getCurrent().name}\".`));\n\t\t\t\t\tif(next.length === 0)\n\t\t\t\t\t\tthrow(new ReferenceError(`Unable to resolve expression \"${item.getAttribute(\"value\")}\". \"${parser.stream.getCurrent().name}\" is undefined.`));\n\t\t\t\t\tstack.push(next[0]);\n\t\t\t\t\tnext[0].parentNode.removeChild(next[0]);\n\t\t\t\t\tlist = list.slice(0, list.indexOf(next[0])).concat(list.slice(list.indexOf(next[0]) + 1));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tthrow(new Error(\"Couldn't parse item, \" + except.message, {cause: except}));\n\t\t\t}\n\t\t}\n\t}\n\n\t#parseSegmentList(context, list)\n\t{\n\t\tlist.forEach(i =>\n\t\t{\n\t\t\tif(!i.previousSibling.tagName && i.previousSibling.nodeValue.trim() === \"\")\n\t\t\t\ti.parentNode.removeChild(i.previousSibling);\n\t\t\ti.parentNode.removeChild(i)\n\n\t\t\treturn;\n\t\t});\n\t\tcontext.segment = list.reduce((previous, current) =>\n\t\t{\n\t\t\tlet id = current.getAttribute(\"id\");\n\t\t\tif(id in previous)\n\t\t\t\tthrow(new Error(`Duplicate segment ID: \"${id}\"`));\n\t\t\tif(id in context.unit)\n\t\t\t\tthrow(new Error(`Segment ID: \"${id}\" already defined as a unit`));\n\t\t\tprevious[current.getAttribute(\"id\")] = current.getAttribute(\"d\");\n\n\t\t\treturn(previous);\n\t\t}, {});\n\t}\n\n\t#parseIncludeList(configuration)\n\t{\n\t\tlet list;\n\t\tlet seen = [];\n\n\t\tdo\n\t\t{\n\t\t\tlist = Array.from(this.document.getElementsByTagName(\"include\"));\n\t\t\tlist.forEach(item =>\n\t\t\t{\n\t\t\t\tlet href = item.getAttribute(\"href\");\n\t\t\t\tif(seen.indexOf(href) !== -1)\n\t\t\t\t\tthrow(new Error(`Circular include reference: ${href}`));\n\t\t\t\tseen.push(href);\n\t\t\t\thref = href.split(\"#\");\n\t\t\t\tlet filename = href[0];\n\t\t\t\tlet id = href.length > 1 ? href.slice(1).join(\"#\") : null;\n\t\t\t\tconst fs = require('fs');\n\t\t\t\tconst data = fs.readFileSync(configuration.base + filename, {encoding: \"utf-8\", flag: \"r\"});\n\t\t\t\tlet inner = Transformer.#parseXML(data);\n\t\t\t\tlet target;\n\t\t\t\tif(id !== null)\n\t\t\t\t{\n\t\t\t\t\ttarget = inner.getElementById(id);\n\t\t\t\t\tif(!target)\n\t\t\t\t\t\tthrow(new Error(`Failed to include file: ${filename}, ID: ${id}`));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttarget = inner.documentElement;\n\t\t\t\t\tif(!target)\n\t\t\t\t\t\tthrow(new Error(`Failed to include file: ${filename}`));\n\t\t\t\t}\n\t\t\t\tif(target.nodeName.toLowerCase() === \"svg\")\n\t\t\t\t{\n\t\t\t\t\tlet child = target.firstChild;\n\t\t\t\t\twhile(child)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet add = child;\n\t\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t\t\titem.parentNode.insertBefore(add, item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet child = target;\n\t\t\t\t\twhile(child)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet add = child;\n\t\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t\t\titem.parentNode.insertBefore(add, item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\titem.parentNode.removeChild(item);\n\t\t\t});\n\t\t} while(list.length);\n\t}\n\n\t#extractIsolated(documentElement, base, list)\n\t{\n\t\tconst path = require('path');\n\n\t\treturn(list.filter(i => i.hasAttribute(\"id\")).map(i =>\n\t\t{\n\t\t\tlet container = documentElement.cloneNode(true);\n\t\t\tlet cursor = container.firstChild;\n\t\t\tlet target = null;\n\t\t\tlet visited = [];\n\t\t\twhile(cursor)\n\t\t\t{\n\t\t\t\tif(cursor.firstChild && !visited.includes(cursor.firstChild))\n\t\t\t\t{\n\t\t\t\t\tcursor = cursor.firstChild;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet nextNode = cursor.nextSibling ?? cursor.parentNode;\n\t\t\t\t\tlet ancestor = cursor;\n\t\t\t\t\twhile(ancestor && ancestor.tagName !== \"defs\")\n\t\t\t\t\t\tancestor = ancestor.parentNode;\n\t\t\t\t\tif(!ancestor && cursor.tagName && cursor.hasAttribute(\"id\"))\n\t\t\t\t\t{\n\t\t\t\t\t\tif(cursor.getAttribute(\"id\") !== i.getAttribute(\"id\") || target !== null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet parent = cursor.parentNode;\n\t\t\t\t\t\t\tif(cursor.previousSibling && !cursor.previousSibling.tagName && cursor.previousSibling.nodeValue.trim() === \"\")\n\t\t\t\t\t\t\t\tparent.removeChild(cursor.previousSibling);\n\t\t\t\t\t\t\tparent.removeChild(cursor);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(target === null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttarget = cursor;\n\t\t\t\t\t\t\t\ttarget.removeAttribute(\"id\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvisited.push(cursor);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tvisited.push(cursor);\n\t\t\t\t\tcursor = nextNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst chain = [];\n\t\t\twhile(target && !target.hasAttribute(\"dir\"))\n\t\t\t{\n\t\t\t\tchain.push(target);\n\t\t\t\ttarget = target.parentNode;\n\t\t\t}\n\t\t\tif(target)\n\t\t\t\tif(target.attributes.length === 1 && target.parentNode)\n\t\t\t\t{\n\t\t\t\t\tconst parent = target.parentNode;\n\t\t\t\t\tparent.insertBefore(chain[chain.length - 1], target);\n\t\t\t\t\tparent.removeChild(target);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\ttarget.removeAttribute(\"dir\");\n\n\t\t\treturn([base + (target ? target.getAttribute(\"dir\") + path.sep : \"\") + i.getAttribute(\"id\") + \".svg\", container]);\n\t\t}));\n\t}\n\n\ttransform(configuration)\n\t{\n\t\tlet context =\n\t\t{\n\t\t\tunit: {},\n\t\t\tdepth: 1,\n\t\t\toptimisation:\n\t\t\t{\n\t\t\t\tpath:\n\t\t\t\t{\n\t\t\t\t\tprecision: configuration.precision,\n\t\t\t\t\tcombineCommands: configuration.combinePathCommands /* Don't output h 20 h 20 */\n\t\t\t\t},\n\t\t\t\txml:\n\t\t\t\t{\n\t\t\t\t\tstripWhitespace: configuration.stripWhitespace === \"xml\" || configuration.stripWhitespace === \"all\",\n\t\t\t\t\tstripComments: configuration.stripComments\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthis.#parseIncludeList(configuration);\n\t\tthis.#parseUnitList(context, Array.from(this.document.getElementsByTagName(\"unit\")));\n\t\tfor(let item in configuration.unit)\n\t\t\tcontext.unit[item] = configuration.unit[item];\n\t\tthis.#parseSegmentList(context, Array.from(this.document.getElementsByTagName(\"segment\")));\n\t\tlet list = Array.from(this.document.getElementsByTagName(\"path\"));\n\t\tcontext.depth = 0;\n\t\twhile(list.length)\n\t\t{\n\t\t\tlet item = list.shift();\n\t\t\tlet parser = new PathParser(new TokenStream(item.getAttribute(\"d\")));\n\t\t\tlet pathResult = parser.parse(context);\n\t\t\titem.setAttribute(\"d\", PathParser.resultToString(pathResult, context.optimisation.path.precision))\n\t\t}\n\t\tconst scan =\n\t\t[\n\t\t\t{tagName: \"svg\", attribute: [{name: \"viewBox\", limit: 4}, \"width\", \"height\"]},\n\t\t\t{tagName: \"rect\", attribute: [\"x\", \"y\", \"width\", \"height\", \"rx\", \"ry\"]},\n\t\t\t{tagName: \"circle\", attribute: [\"r\", \"cx\", \"cy\"]},\n\t\t\t{tagName: \"ellipse\", attribute: [\"rx\", \"ry\", \"cx\", \"cy\"]},\n\t\t\t{tagName: \"line\", attribute: [\"x1\", \"y1\", \"x2\", \"y2\"]},\n\t\t\t{tagName: \"image\", attribute: [\"x\", \"y\", \"width\", \"height\"]},\n\t\t\t{tagName: \"pattern\", attribute: [\"width\", \"height\"]},\n\t\t\t{tagName: \"polygon\", attribute: [{name: \"points\", limit: -1}]},\n\t\t\t{tagName: \"polyline\", attribute: [{name: \"points\", limit: -1}]},\n\t\t\t{tagName: \"line\", attribute: [\"x1\", \"y1\", \"x2\", \"y2\"]},\n\t\t\t{tagName: \"textPath\", attribute: [\"startOffset\"]},\n\t\t\t{tagName: \"path\", attribute: [\"stroke-width\"]},\n\t\t\t{tagName: \"image\", attribute: [\"x\", \"y\", \"width\", \"height\"]},\n\t\t\t{tagName: \"marker\", attribute: [\"markerWidth\", \"markerHeight\", \"refX\", \"refY\"]},\n\t\t];\n\t\tscan.forEach(target =>\n\t\t{\n\t\t\tlist = Array.from(this.document.getElementsByTagName(target.tagName));\n\t\t\tcontext.depth = 0;\n\t\t\twhile(list.length)\n\t\t\t{\n\t\t\t\tlet item = list.shift();\n\t\t\t\ttarget.attribute.forEach(attribute =>\n\t\t\t\t{\n\t\t\t\t\tlet attributeName;\n\t\t\t\t\tlet attributeLimit;\n\n\t\t\t\t\tif(typeof(attribute) === \"string\")\n\t\t\t\t\t{\n\t\t\t\t\t\tattributeName = attribute;\n\t\t\t\t\t\tattributeLimit = 1;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tattributeName = attribute.name;\n\t\t\t\t\t\tattributeLimit = attribute.limit;\n\t\t\t\t\t}\n\t\t\t\t\tif(item.hasAttribute(attributeName))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet parser = new PathParser(new TokenStream(item.getAttribute(attributeName)));\n\t\t\t\t\t\tlet viewBoxResult = parser.parseList(context, Value.getEmptyResult(), attributeLimit);\n\t\t\t\t\t\titem.setAttribute(attributeName, PathParser.resultToString(viewBoxResult, context.optimisation.path.precision));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\treturn;\n\t\t});\n\t\tlet stack = [];\n\t\tlet cursor = this.document.documentElement.firstChild;\n\t\tlet Node = {COMMENT_NODE: 8, TEXT_NODE: 3};\n\t\twhile(stack.length || cursor)\n\t\t{\n\t\t\tif(cursor.firstChild)\n\t\t\t\tstack.push(cursor.firstChild);\n\t\t\tlet target = cursor;\n\t\t\tif(cursor.nextSibling)\n\t\t\t\tcursor = cursor.nextSibling;\n\t\t\telse\n\t\t\t\tcursor = stack.pop();\n\t\t\tif(context.optimisation.xml.stripWhitespace && target.nodeType === Node.TEXT_NODE && target.nodeValue.replace(new RegExp(\"\\\\s+\", \"g\"), \"\").length === 0)\n\t\t\t\ttarget.parentNode.removeChild(target);\n\t\t\tif(context.optimisation.xml.stripComments && target.nodeType === Node.COMMENT_NODE)\n\t\t\t\ttarget.parentNode.removeChild(target);\n\t\t}\n\t\tif(configuration.extract)\n\t\t{\n\t\t\tconst path = require('path');\n\t\t\tlet base = configuration.destination + path.sep;\n\t\t\tlist = this.#extractIsolated(this.document.documentElement, base, Array.from(this.document.getElementsByTagName(\"*\")));\n\t\t}\n\t\telse\n\t\t\tlist = [[configuration.destination, this.document.documentElement]];\n\n\t\treturn(list.map(([i, j]) => [i, (new (typeof(XMLSerializer) === \"undefined\" ? require(\"xmldom\").XMLSerializer : XMLSerializer)()).serializeToString(j)]));\n\t}\n};\n","import Transformer from \"./class/Transformer\";\nimport PathParser from \"./class/PathParser\";\nimport BigDecimal from \"./class/BigDecimal\";\nimport * as fs from 'fs';\n\n/*\nexport function transform(text, configuration, require)\n{\n\tconsole.log(\"Transforming\"); \n\twindow.PathParser = PathParser;\n\twindow.BigDecimal = BigDecimal;\n\tvar tt = `\n\t<svg>\n\t\t<unit id=\"pp\" value=\"3n\" />\n\t\t<unit id=\"n\" value=\"2\" />\n\t\t<unit id=\"q\" value=\"3n + 4pp((3))\" />\n\t\t<segment id=\"kSegment\" d=\"l 20 0 \" />\n\t\t<segment id=\"kSegment2\" d=\"L 200,100\" />\n\t\t<segment id=\"kSegment3\" d=\"c 20,50 80,-50 100,0\" />\n\t\t<segment id=\"kSegment4\" d=\"a 50,60 30 1 0 100,0\" />\n\t\t<segment id=\"kSegment5\" d=\"l 100,20 l 100,-20 l @400,@400\" />\n\t\t<segment id=\"purple\" d=\"h 5j v 5j h 3n\" />\n\t\t<apath d=\"m 50,50n kSegment kSegment % 90 l -3.2.5 l-20-20 40 40 l 50 0 l 50 50\" />\n\t\t<apath d=\"M 100,100 kSegment2 L 100,100 kSegment2%45 L 300,100\" />\n\t\t<apath d=\"M 100,100 kSegment2%90 M 200,200 kSegment2%90\" />\n\t\t<apath d=\"M 100,100 kSegment3\" />\n\t\t<apath d=\"M 100,300 kSegment3%90\" />\n\t\t<apath d=\"M 100,100 kSegment4\" />\n\t\t<apath d=\"M 100,300 kSegment4%90\" />\n\t\t<apath d=\"M 100,100 kSegment5\" />\n\t\t<apath d=\"M 100,100 kSegment5%30\" />\n\t\t<apath d=\"M 100,100 m 30,30 3kSegment2()%45 3kSegment z\" />\n\t\t<apath d=\"M 100,100 purple(j=5 n=5 #=2)m(49) 50\" />\n\t\t<segment id=\"green\" d=\"h 50 v 50\" />\n\t\t<apath d=\"M 100,100 green%|green|\" />\n\t\t<path d=\"m 50,50 h 30 h 30 h 30\" />\n\t\t<include href=\"somefile.svg#element\" />\n\t</svg>`;\n\ttt = `<svg viewBox=\"0 0 300 300\">\n\t\t<path d=\"m 50,50 Q 50,100 100,100 Q 150,100 150,50 Q 150,0 100,0\" stroke=\"red\" strokewidth=\"3\" />\n\t\t<path d=\"m 50,75 Q 50,125 100,125 T 150,75 T 100,25\" fill=\"transparent\" stroke=\"red\" strokewidth=\"3\" />\n\t</svg>`;\n\treturn((new Transformer(tt)).transform());\n};\n*/\n\n(function() {\n\tlet parameter = process.argv.slice(2);\n\tlet valid = true;\n\tlet reading = true;\n\tlet whitespaceTypeList = [\"path\", \"xml\", \"all\"];\n\tlet configuration =\n\t{\n\t\tstripWhitespace: null,\n\t\tstripComments: false,\n\t\tcombinePathCommands: false,\n\t\tprecision: 3\n\t};\n\n\twhile(reading && valid && parameter[0] && parameter[0].startsWith(\"--\"))\n\t\tswitch(parameter[0])\n\t\t{\n\t\t\tcase \"--precision\":\n\t\t\t\tconfiguration.precision = parseInt(parameter[1]);\n\t\t\t\tif(configuration.precision.toString() !== parameter[1] || isNaN(configuration.precision))\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"Invalid syntax for --precision switch\");\n\t\t\t\t\tvalid = false;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tparameter = parameter.slice(2);\n\t\t\t\tbreak;\n\t\t\tcase \"--stripWhitespace\":\n\t\t\t\tconfiguration.stripWhitespace = parameter[1];\n\t\t\t\tif(whitespaceTypeList.indexOf(configuration.stripWhitespace) === -1)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"Invalid syntax for --stripWhitespace switch\");\n\t\t\t\t\tvalid = false;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tparameter = parameter.slice(2);\n\t\t\t\tbreak;\n\t\t\tcase \"--stripComments\":\n\t\t\t\tconfiguration.stripComments = true;\n\t\t\t\tparameter.shift();\n\t\t\t\tbreak;\n\t\t\tcase \"--combinePathCommands\":\n\t\t\t\tconfiguration.combinePathCommands = true;\n\t\t\t\tparameter.shift();\n\t\t\t\tbreak;\n\t\t\tcase \"--extract\":\n\t\t\t\tconfiguration.extract = true;\n\t\t\t\tparameter.shift();\n\t\t\t\tbreak;\n\t\t\tcase \"--\":\n\t\t\t\tparameter.shift();\n\t\t\tdefault:\n\t\t\t\treading = false;\n\t\t\tbreak;\n\t\t}\n\tif(!valid || parameter.length < 2)\n\t{\n\t\tconsole.log(\n`\nUsage: npm start -- [options] <source> <destination> [units...]\n\nsource       An unprocessed SVG file containing Pather commands\ndestination  Desired filename of the processed output\noptions      One or more of the following switches:\n  --precision <n>                   Write numbers to the output with N decimal places. Default is 3\n  --stripWhitespace <path|xml|all>  Strip whitespace from within path data, between XML tags or both (all)\n  --stripComments                   Strip XML comments from the output document\n  --combinePathCommands             Combine repeated commands in path data, e.g. h 30 h 30 becomes h 60\n  --extract                         Extract all elements with an ID to individual files (destination is a directory)\nunits        Variable values to be passed to the Pather environment\n             Name/value pairs separated by \"=\", e.g. myUnit=3 myOtherUnit=4.2\n`\n\t\t\t);\n\t}\n\telse\n\t{\n\t\tlet source = parameter.shift();\n\t\tconfiguration.destination = parameter.shift();\n\t\tconfiguration.unit = {};\n\t\treading = true;\n\t\twhile(reading && parameter.length) {\n\t\t\tlet unit = parameter.shift().split(\"=\");\n\t\t\tlet reason;\n\t\t\tswitch(true)\n\t\t\t{\n\t\t\t\tcase unit.length !== 2:\n\t\t\t\t\treason = `Invalid unit format \"${unit.join(\"=\")}\".`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase new RegExp(\"^[bdefgijknopruwxy]|[a-z_$][a-z0-9_$]+$\", \"i\").exec(unit[0]) === null:\n\t\t\t\t\treason = `Invalid unit name \"${unit[0]}\".`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase parseFloat(unit[1]).toString() !== unit[1].substr(0, parseFloat(unit[1]).toString().length) || isNaN(parseFloat(unit[1])) || parseFloat(unit[1]) === Infinity || parseFloat(unit[1]) === -Infinity:\n\t\t\t\t\treason = `Invalid unit value \"${unit[1]}\".`;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(reason)\n\t\t\t{\n\t\t\t\tconsole.log(`${reason} Expected valid identifier followed by a number, e.g. myUnit=3`); \n\t\t\t\treading = false;\n\t\t\t}\n\t\t\telse\n\t\t\t\tconfiguration.unit[unit[0]] = parseFloat(unit[1]);\n\t\t}\n\t\tif(reading)\n\t\t{\n\t\t\t// console.log(configuration);\n\t\t\tconst fs = require('fs');\n\t\t\tconst path = require('path');\n\t\t\tconfiguration.base = path.dirname(source) + path.sep;\n\t\t\tconst data = fs.readFileSync(source, {encoding: \"utf-8\", flag: \"r\"});\n\t\t\tlet t = new Transformer(data);\n\t\t\tlet output = t.transform(configuration);\n\t\t\toutput.forEach(([i, j]) =>\n\t\t\t{\n\t\t\t\tif(!fs.existsSync(path.dirname(i)))\n\t\t\t\t\tfs.mkdirSync(path.dirname(i), { recursive: true });\n\t\t\t\tfs.writeFileSync(i, j, {encoding: \"utf-8\"})\n\n\t\t\t\treturn;\n\t\t\t});\n\t\t}\n\t}\n\n\treturn;\n})();\n"],"names":["Token","static","constructor","type","name","value","position","this","nameOf","Object","entries","filter","key","BigDecimal","BigInt","repeat","LIMIT_PRECISION","RegExp","source","integerPart","decimalPart","VALUE_SHIFT","split","substr","padEnd","charCodeAt","fromBigInt","result","fromBigIntDivision","dividend","divisor","add","other","subtract","multiplyBy","divideBy","equals","valueOf","toNumber","toString","precision","text","Math","max","padStart","length","replace","PATTERN_TRAILING_ZERO","Value","getEmptyResult","stack","sequence","arity","pending","x","y","fixNext","lastAngle","originX","originY","TokenStream","TYPE_NUMBER","expression","handler","TYPE_COMMAND","a","TYPE_X","TYPE_Y","TYPE_THETA","TYPE_FLAG","c","h","l","m","q","s","t","v","z","toLowerCase","TYPE_DELIMITER","TYPE_WHITESPACE","TYPE_IDENTIFIER","TYPE_BRACKET","TYPE_OPERATOR_ADD","TYPE_OPERATOR_MULTIPLY","TYPE_OPERATOR_SUBTRACT","TYPE_OPERATOR_DIVIDE","TYPE_OPERATOR_ROTATE","TYPE_OPERATOR_SKEW_HORIZONTAL","TYPE_OPERATOR_SKEW_VERTICAL","TYPE_OPERATOR_FIX","TYPE_OPERATOR_MEASURE","TYPE_OPERATOR_ASSIGN","TYPE_OPERATOR_REPEAT","data","cursor","chainIndex","streamIndex","match","item","PRIORITY","exec","push","SyntaxError","TYPE_END","getCurrent","getNext","peekNext","reset","Distortion","rotate","x0","y0","x1","y1","distortionValue","cosine","sine","PI","cos","sin","abs","Number","EPSILON","skewX","tan","skewY","fixPoint","point","relative","topX","topY","distortionType","OPERATION_SKEW_VERTICAL","fixed","OPERATION_SKEW_HORIZONTAL","applyDistortion","context","top","origin","command","point1","point2","last","distortionFunction","OPERATION_ROTATE","OPERATION_NONE","atan2","optimisation","path","combineCommands","sequnce","pop","toUpperCase","PathParser","stream","resultToString","map","i","slice","join","parseList","limit","state","current","reading","index","expResult","ExpressionParser","parse","TYPE_UNIT","accumulator","argumentList","invoked","next","segment","parseInvocation","Error","indexOf","debug","formatOperation","operation","unwind","start","leftValue","OPERATION_EVALUATE","console","log","j","OPERATION_MULTIPLY","OPERATION_DIVIDE","OPERATION_ADD","OPERATION_SUBTRACT","depth","insideArgumentList","additionalTerminatorList","base","counter","unit","ReferenceError","includes","inner","hasCount","hasArgumentList","distorationType","count","delimited","segmentName","parseInt","Transformer","document","parseXML","require","DOMParser","parseFromString","parseUnitList","list","shift","previousSibling","tagName","nodeValue","trim","parentNode","removeChild","parser","getAttribute","id","except","message","cause","concat","parseSegmentList","forEach","reduce","previous","parseIncludeList","configuration","seen","Array","from","getElementsByTagName","href","filename","readFileSync","encoding","flag","target","getElementById","documentElement","nodeName","child","firstChild","nextSibling","insertBefore","extractIsolated","hasAttribute","container","cloneNode","visited","nextNode","ancestor","parent","removeAttribute","chain","attributes","sep","transform","combinePathCommands","xml","stripWhitespace","stripComments","pathResult","setAttribute","attribute","attributeName","attributeLimit","viewBoxResult","Node","nodeType","extract","destination","XMLSerializer","serializeToString","parameter","process","argv","valid","whitespaceTypeList","startsWith","isNaN","reason","parseFloat","Infinity","fs","dirname","existsSync","mkdirSync","recursive","writeFileSync"],"mappings":"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"}