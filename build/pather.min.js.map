{"version":3,"file":"pather.min.js","sources":["../source/class/Token.js","../source/class/BigDecimal.js","../source/class/Value.js","../source/class/TokenStream.js","../source/class/Distortion.js","../source/class/PathParser.js","../source/class/ExpressionParser.js","../source/class/ExtendedDOM.js","../source/class/Transformer.js","../source/main.js"],"sourcesContent":["export default class Token\n{\n    static TYPE_NUMBER                    = 1;\n    static TYPE_COMMAND                   = 2;\n    static TYPE_DELIMITER                 = 3;\n    static TYPE_WHITESPACE                = 4;\n    static TYPE_IDENTIFIER                = 5;\n    static TYPE_BRACKET                   = 6;\n    static TYPE_END                       = 7;\n    static TYPE_OPERATOR_ADD              = 8;\n    static TYPE_OPERATOR_SUBTRACT         = 9;\n    static TYPE_OPERATOR_MULTIPLY         = 10;\n    static TYPE_OPERATOR_DIVIDE           = 11;\n    static TYPE_OPERATOR_ROTATE           = 12;\n    static TYPE_OPERATOR_SKEW_HORIZONTAL  = 13;\n    static TYPE_OPERATOR_SKEW_VERTICAL    = 14;\n    static TYPE_OPERATOR_REVERSE_ORDER    = 15;\n    static TYPE_OPERATOR_FIX              = 16;\n    static TYPE_OPERATOR_MEASURE          = 17;\n    static TYPE_OPERATOR_ASSIGN           = 18;\n    static TYPE_OPERATOR_REPEAT           = 19;\n\n    constructor(type, name, value, position)\n    {\n        this.type = type;\n        this.name = name;\n        this.value = value;\n        this.position = position;\n    }\n\n    static nameOf(type)\n    {\n        return(Object.entries(Token).filter(([key, value]) => value === type)[0][0]);\n    }\n};\n","export default class BigDecimal\n{\n    static LIMIT_PRECISION         = 18;\n    static PI                      = new BigDecimal(\"3.141592653589793238\");\n    static #VALUE_SHIFT            = BigInt(\"1\" + \"0\".repeat(BigDecimal.LIMIT_PRECISION));\n    static #PATTERN_TRAILING_ZERO  = new RegExp(\"\\\\.?0+$\");\n\n    #value;\n\n    constructor(source = 0)\n\t{\n\t\tlet integerPart;\n\t\tlet decimalPart;\n\n\t\tif(source instanceof BigDecimal)\n            this.#value = source.#value;\n\t\telse\n            if(source instanceof BigInt)\n                this.#value = value * BigDecimal.VALUE_SHIFT;\n            else\n            {\n                [integerPart, decimalPart] = (source + \".\").split(\".\");\n                this.#value = BigInt(integerPart + decimalPart.substr(0, BigDecimal.LIMIT_PRECISION).padEnd(BigDecimal.LIMIT_PRECISION, \"0\"));\n                if(decimalPart.charCodeAt(BigDecimal.LIMIT_PRECISION) > 52)\n                    this.#value++;\n            }\n\n\t\treturn;\n    }\n\n    #fromBigInt(source)\n    {\n        let result;\n\n        result = new BigDecimal(this);\n        result.#value = source;\n\n        return(result);\n    }\n\n    #fromBigIntDivision(dividend, divisor)\n    {\n        return(this.#fromBigInt(dividend / divisor + dividend * 2n / divisor % 2n));\n    }\n\n    add(other)\n    {\n        return(this.#fromBigInt(this.#value + new BigDecimal(other).#value));\n    }\n\n    subtract(other)\n    {\n        return(this.#fromBigInt(this.#value - new BigDecimal(other).#value));\n    }\n\n    multiplyBy(other)\n    {\n        return(this.#fromBigIntDivision(this.#value * new BigDecimal(other).#value, BigDecimal.#VALUE_SHIFT));\n    }\n\n    divideBy(other)\n    {\n        return(this.#fromBigIntDivision(this.#value * BigDecimal.#VALUE_SHIFT, new BigDecimal(other).#value));\n    }\n\n    equals(other)\n    {\n        return(this.valueOf() == other);\n    }\n\n    valueOf()\n    {\n        return(this.#value);\n    }\n\n    toNumber()\n    {\n        return(+this.toString());\n    }\n\n    toString(precision = BigDecimal.LIMIT_PRECISION)\n    {\n        let text;\n\n        text = this.#fromBigIntDivision(this.#value, BigInt(\"1\" + \"0\".repeat(precision > -1 ? Math.max(BigDecimal.LIMIT_PRECISION - precision, 0) : BigDecimal.LIMIT_PRECISION))).#value.toString().padStart(precision + 1, \"0\");\n\n        return(text.substr(0, text.length - precision) + (\".\" + text.substr(-precision)).replace(BigDecimal.#PATTERN_TRAILING_ZERO, \"\"));\n    }\n}\n","import BigDecimal from \"./BigDecimal\";\n\nexport default class Value\n{\n\tstatic TYPE_X        = 1;\n\tstatic TYPE_Y        = 2;\n\tstatic TYPE_THETA    = 3;\n\tstatic TYPE_FLAG     = 4;\n\tstatic TYPE_UNIT     = 5;\n\n\tstatic getEmptyResult()\n\t{\n\t\treturn(\n\t\t{\n\t\t\tstack: [],\n\t\t\tsequence: [],\n\t\t\tarity: null,\n\t\t\tpending: 0,\n\t\t\tx: new BigDecimal(0),\n\t\t\ty: new BigDecimal(0),\n\t\t\tfixNext: false,\n\t\t\tlastAngle: null,\n\t\t\toriginX: new BigDecimal(0),\n\t\t\toriginY: new BigDecimal(0) \n\t\t});\n\t}\n};\n","import Token from \"./Token\";\nimport BigDecimal from \"./BigDecimal\";\nimport Value from \"./Value\";\n\nexport default class TokenStream\n{\n    static #PRIORITY =\n    [\n        {\n            type: Token.TYPE_NUMBER,\n            expression: new RegExp(\"^[0-9]*\\\\.?[0-9]+\", \"\"),\n            handler: value => new BigDecimal(value)\n        },\n        {\n            type: Token.TYPE_COMMAND,\n            expression: new RegExp(\"^[achlmqstvz](?![a-z_$])\", \"i\"),\n            handler: value => (\n            {\n                \"a\":\n                [\n                    Value.TYPE_X,\n                    Value.TYPE_Y,\n                    Value.TYPE_THETA,\n                    Value.TYPE_FLAG,\n                    Value.TYPE_FLAG,\n                    Value.TYPE_X,\n                    Value.TYPE_Y\n                ],\n                \"c\":\n                [\n                    Value.TYPE_X,\n                    Value.TYPE_Y,\n                    Value.TYPE_X,\n                    Value.TYPE_Y,\n                    Value.TYPE_X,\n                    Value.TYPE_Y\n                ],\n                \"h\":\n                [\n                    Value.TYPE_X\n                ],\n                \"l\":\n                [\n                    Value.TYPE_X,\n                    Value.TYPE_Y\n                ],\n                \"m\":\n                [\n                    Value.TYPE_X,\n                    Value.TYPE_Y\n                ],\n                \"q\":\n                [\n                    Value.TYPE_X,\n                    Value.TYPE_Y,\n                    Value.TYPE_X,\n                    Value.TYPE_Y\n                ],\n                \"s\":\n                [\n                    Value.TYPE_X,\n                    Value.TYPE_Y,\n                    Value.TYPE_X,\n                    Value.TYPE_Y\n                ],\n                \"t\":\n                [\n                    Value.TYPE_X,\n                    Value.TYPE_Y\n                ],\n                \"v\":\n                [\n                    Value.TYPE_Y\n                ],\n                \"z\":\n                [\n                ]\n            }[value.toLowerCase()])\n        },\n        {\n            type: Token.TYPE_DELIMITER,\n            expression: new RegExp(\"^,+\", \"\"),\n            handler: () => null\n        },\n        {\n            type: Token.TYPE_WHITESPACE,\n            expression: new RegExp(\"^\\\\s+\", \"\"),\n            handler: () => null\n        },\n        {\n            type: Token.TYPE_IDENTIFIER,\n            expression: new RegExp(\"^[a-z_$][a-z0-9_$]*\", \"i\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_BRACKET,\n            expression: new RegExp(\"^[()]\", \"\"),\n            handler: value => value === \"(\"\n        },\n        {\n            type: Token.TYPE_OPERATOR_ADD,\n            expression: new RegExp(\"^\\\\+\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_MULTIPLY,\n            expression: new RegExp(\"^\\\\*\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_SUBTRACT,\n            expression: new RegExp(\"^-\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_DIVIDE,\n            expression: new RegExp(\"^/\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_ROTATE,\n            expression: new RegExp(\"^%r\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_SKEW_HORIZONTAL,\n            expression: new RegExp(\"^%h\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_SKEW_VERTICAL,\n            expression: new RegExp(\"^%v\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_REVERSE_ORDER,\n            expression: new RegExp(\"^%o\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_FIX,\n            expression: new RegExp(\"^@\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_MEASURE,\n            expression: new RegExp(\"^\\\\|\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_ASSIGN,\n            expression: new RegExp(\"^=\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_REPEAT,\n            expression: new RegExp(\"^#\", \"\"),\n            handler: value => value\n        }\n    ];\n\n    #data = null;\n    #cursor = 0;\n\n    constructor(text)\n    {\n        var chainIndex;\n        var streamIndex;\n        var match;\n        var item;\n\n        this.#data = [];\n        streamIndex = 0;\n        while(text.length)\n        {\n            for(chainIndex = 0; chainIndex < TokenStream.#PRIORITY.length; chainIndex++)\n            {\n                item = TokenStream.#PRIORITY[chainIndex];\n                match = item.expression.exec(text);\n                if(match)\n                {\n                    this.#data.push(new Token(item.type, match[0], item.handler(match[0]), streamIndex));\n                    streamIndex += match[0].length;\n                    text = text.substr(match[0].length);\n                    break;\n                }\n            }\n            if(chainIndex === TokenStream.#PRIORITY.length)\n\t\t\t\tthrow(new SyntaxError(`Unexpected symbol \"${text.substr(0, 1)}\" at column ${streamIndex}`));\n        }\n        this.#data.push(new Token(Token.TYPE_END, null, null, streamIndex));\n    }\n\n    getCurrent()\n    {\n        return(this.#data[this.#cursor] ?? null);\n    }\n\n    getNext()\n    {\n        this.#cursor++;\n\n        return(this.getCurrent());\n    }\n\n    peekNext()\n    {\n        return(this.#data[this.#cursor + 1] ?? null);\n    }\n\n    reset()\n    {\n        this.#cursor = 0;\n\n        return(this.getCurrent());\n    }\n};\n","import BigDecimal from \"./BigDecimal\";\r\n\r\nexport default class Distortion\r\n{\r\n\tstatic OPERATION_ROTATE = 1;\r\n\tstatic OPERATION_SKEW_HORIZONTAL = 2;\r\n\tstatic OPERATION_SKEW_VERTICAL = 3;\r\n\tstatic OPERATION_REVERSE_ORDER = 4;\r\n\r\n\tconstructor(type, value)\r\n\t{\r\n\t\tthis.type = type;\r\n\t\tthis.value = value;\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\t#getName()\r\n\t{\r\n\t\treturn(\r\n\t\t({\r\n\t\t\t[Distortion.OPERATION_ROTATE]: \"Rotate\",\r\n\t\t\t[Distortion.OPERATION_SKEW_HORIZONTAL]: \"Vertical skew\",\r\n\t\t\t[Distortion.OPERATION_SKEW_VERTICAL]: \"Horizontal skew\",\r\n\t\t\t[Distortion.OPERATION_REVERSE_ORDER]: \"Reverse order\"\r\n\t\t})[this.type] ?? \"Unknown\");\r\n\t}\r\n\r\n\ttoString()\r\n\t{\r\n\t\treturn(`${this.#getName()}: ${this.value}`);\r\n\t}\r\n\r\n\trun(x0, y0, x1, y1)\r\n\t{\r\n\t\tlet result;\r\n\t\tlet distortionValue;\r\n\r\n\t\tswitch(this.type)\r\n\t\t{\r\n\t\t\tcase Distortion.OPERATION_ROTATE:\r\n\t\t\t\tlet cosine;\r\n\t\t\t\tlet sine;\r\n\t\t\r\n\t\t\t\tx1 = x1.subtract(x0);\r\n\t\t\t\ty1 = y1.subtract(y0);\r\n\t\t\t\tdistortionValue = (this.value.toNumber() % 360) * Math.PI / 180;\r\n\t\t\t\tcosine = Math.cos(distortionValue);\r\n\t\t\t\tsine = Math.sin(distortionValue);\r\n\t\t\t\tif(Math.abs(cosine - sine) < Number.EPSILON * 2)\r\n\t\t\t\t\tsine = cosine;\r\n\t\t\t\telse\r\n\t\t\t\t\tif(Math.abs(cosine + sine) < Number.EPSILON * 2)\r\n\t\t\t\t\t\tcosine = sine;\r\n\t\t\t\tif(Math.abs(cosine) < Number.EPSILON)\r\n\t\t\t\t\tcosine = 0;\r\n\t\t\t\tif(Math.abs(sine) < Number.EPSILON)\r\n\t\t\t\t\tsine = 0;\r\n\t\t\t\r\n\t\t\t\tresult =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: x0.add(x1.multiplyBy(cosine)).subtract(y1.multiplyBy(sine)),\r\n\t\t\t\t\ty: y0.add(y1.multiplyBy(cosine)).add(x1.multiplyBy(sine))\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\tcase Distortion.OPERATION_SKEW_HORIZONTAL:\r\n\t\t\t\tresult =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: x0.add(x1.subtract(x0).subtract(y1.multiplyBy(Math.tan((this.value.toNumber() % 360) * Math.PI / 180)))),\r\n\t\t\t\t\ty: y1\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\tcase Distortion.OPERATION_SKEW_VERTICAL:\r\n\t\t\t\tresult =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: x1,\r\n\t\t\t\t\ty: y0.add(y1.subtract(y0).subtract(x1.multiplyBy(Math.tan((distortionValue.toNumber() % 360) * Math.PI / 180))))\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\tcase Distortion.OPERATION_REVERSE_ORDER:\r\n\t\t\t\tresult =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: x1,\r\n\t\t\t\t\ty: y1\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn(result);\r\n\t}\r\n\r\n\tstatic runStack(x0, y0, x1, y1, distortionStack)\r\n\t{\r\n\t\treturn(distortionStack.reduceRight((carry, item) => item.run(x0, y0, carry.x, carry.y), {x: x1, y: y1}));\r\n\t}\r\n\r\n\tstatic #fixPoint(point, relative, topX, topY, result)\r\n\t{\r\n\t\tif(topX.fixed)\r\n\t\t\tpoint.x = relative ? topX.value.subtract(result.x) : topX.value;\r\n\t\tif(topY.fixed)\r\n\t\t\tpoint.y = relative ? topY.value.subtract(result.y) : topY.value;\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tstatic applyDistortion(context, top, result, distortionStack)\r\n\t{\r\n\t\tlet origin;\r\n\t\tlet point;\r\n\t\tlet command;\r\n\t\tlet relative;\r\n\t\tlet point1;\r\n\t\tlet point2;\r\n\t\tlet last;\r\n\t\tlet lastAngle;\r\n\r\n\t\tcommand = top[0].toLowerCase();\r\n\t\trelative = top[0].toLowerCase() === top[0];\r\n\t\torigin =\r\n\t\t{\r\n\t\t\tx: relative ? new BigDecimal(0) : result.x,\r\n\t\t\ty: relative ? new BigDecimal(0) : result.y\r\n\t\t}\r\n\t\tif(result.pending)\r\n\t\t\tthrow(new SyntaxError(`Too few arguments for command ${top[0]}`));\r\n\t\tif(result.fixNext)\r\n\t\t\tthrow(new SyntaxError(`Dangling fix operator after command ${top[0]}`));\r\n\t\t// TODO: Eventually, all values will need to be rounded just beyond this point\r\n\t\tswitch(command)\r\n\t\t{\r\n\t\t\tcase \"a\":\r\n\t\t\t\tpoint =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: top[6].value,\r\n\t\t\t\t\ty: top[7].value\r\n\t\t\t\t};\r\n\t\t\t\tif(distortionStack.length)\r\n\t\t\t\t\tpoint = Distortion.runStack(origin.x, origin.y, point.x, point.y, distortionStack);\r\n\t\t\t\tDistortion.#fixPoint(point, relative, top[6], top[7], result);\r\n\t\t\t\ttop =\r\n\t\t\t\t[\r\n\t\t\t\t\ttop[0],\r\n\t\t\t\t\ttop[1].value,\r\n\t\t\t\t\ttop[2].value,\r\n\t\t\t\t\ttop[3].fixed ? top[3].value : distortionStack.reduceRight((carry, item) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn(item.type === Distortion.OPERATION_ROTATE ? carry.add(item.value) : carry);\r\n\t\t\t\t\t}, top[3].value),\r\n\t\t\t\t\ttop[4].value,\r\n\t\t\t\t\ttop[5].value,\r\n\t\t\t\t\tpoint.x,\r\n\t\t\t\t\tpoint.y\r\n\t\t\t\t];\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"c\":\r\n\t\t\t\tpoint1 =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: top[1].value,\r\n\t\t\t\t\ty: top[2].value\r\n\t\t\t\t};\r\n\t\t\t\tpoint2 =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: top[3].value,\r\n\t\t\t\t\ty: top[4].value\r\n\t\t\t\t};\r\n\t\t\t\tpoint =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: top[5].value,\r\n\t\t\t\t\ty: top[6].value\r\n\t\t\t\t};\r\n\t\t\t\tif(distortionStack.length)\r\n\t\t\t\t{\r\n\t\t\t\t\tpoint1 = Distortion.runStack(origin.x, origin.y, point1.x, point1.y, distortionStack);\r\n\t\t\t\t\tpoint2 = Distortion.runStack(origin.x, origin.y, point2.x, point2.y, distortionStack);\r\n\t\t\t\t\tpoint = Distortion.runStack(origin.x, origin.y, point.x, point.y, distortionStack);\r\n\t\t\t\t}\r\n\t\t\t\tDistortion.#fixPoint(point, relative, top[5], top[6], result);\r\n\t\t\t\ttop =\r\n\t\t\t\t[\r\n\t\t\t\t\ttop[0],\r\n\t\t\t\t\ttop[1].fixed ? (relative ? top[1].value.subtract(result.x) : top[1].value) : point1.x,\r\n\t\t\t\t\ttop[2].fixed ? (relative ? top[2].value.subtract(result.y) : top[2].value) : point1.y,\r\n\t\t\t\t\ttop[3].fixed ? (relative ? top[3].value.subtract(result.x) : top[3].value) : point2.x,\r\n\t\t\t\t\ttop[4].fixed ? (relative ? top[4].value.subtract(result.y) : top[4].value) : point2.y,\r\n\t\t\t\t\tpoint.x,\r\n\t\t\t\t\tpoint.y\r\n\t\t\t\t];\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"s\":\r\n\t\t\tcase \"q\":\r\n\t\t\t\tpoint1 =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: top[1].value,\r\n\t\t\t\t\ty: top[2].value\r\n\t\t\t\t};\r\n\t\t\t\tpoint =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: top[3].value,\r\n\t\t\t\t\ty: top[4].value\r\n\t\t\t\t};\r\n\t\t\t\tif(distortionStack.length)\r\n\t\t\t\t{\r\n\t\t\t\t\tpoint1 = Distortion.runStack(origin.x, origin.y, point1.x, point1.y, distortionStack);\r\n\t\t\t\t\tpoint = Distortion.runStack(origin.x, origin.y, point.x, point.y, distortionStack);\r\n\t\t\t\t}\r\n\t\t\t\tDistortion.#fixPoint(point, relative, top[3], top[4], result);\r\n\t\t\t\ttop =\r\n\t\t\t\t[\r\n\t\t\t\t\ttop[0],\r\n\t\t\t\t\tpoint1.x,\r\n\t\t\t\t\tpoint1.y,\r\n\t\t\t\t\tpoint.x,\r\n\t\t\t\t\tpoint.y\r\n\t\t\t\t];\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"l\":\r\n\t\t\tcase \"h\":\r\n\t\t\tcase \"v\":\r\n\t\t\t\tlet topX = command === \"v\" ? {value: new BigDecimal(origin.x), fixed: top[1].fixed} : top[1];\r\n\t\t\t\tlet topY = command === \"h\" ? {value: new BigDecimal(origin.y), fixed: top[1].fixed} : (command === \"v\" ? top[1] : top[2]);\r\n\t\t\t\tpoint =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: topX.value,\r\n\t\t\t\t\ty: topY.value\r\n\t\t\t\t};\r\n\t\t\t\tif(distortionStack.length)\r\n\t\t\t\t\tpoint = Distortion.runStack(origin.x, origin.y, point.x, point.y, distortionStack);\r\n\t\t\t\tlastAngle = Math.atan2(point.y.subtract(origin.y).toNumber(), point.x.subtract(origin.x).toNumber()) * 180 / Math.PI;\r\n\t\t\t\tDistortion.#fixPoint(point, relative, topX, topY, result);\r\n\t\t\t\ttop = point.x.equals(origin.x)\r\n\t\t\t\t\t?\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tpoint.y.equals(origin.y)\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t[\"v\", point.y]\r\n\t\t\t\t\t)\r\n\t\t\t\t\t:\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tpoint.y.equals(origin.y)\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\t[\"h\", point.x]\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t[\"l\", point.x, point.y]\r\n\t\t\t\t\t);\r\n\t\t\t\tif(top)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(context.optimisation.path.combineCommands && result.sequence.length > 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlast = result.sequence[result.sequence.length - 1];\r\n\t\t\t\t\t\tif(last[0].toLowerCase() === top[0].toLowerCase() && lastAngle === result.lastAngle)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif(relative)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif(last.length > 2)\r\n\t\t\t\t\t\t\t\t\tlast[2] = last[2].add(top[2]);\r\n\t\t\t\t\t\t\t\tlast[1] = last[1].add(top[1]);\r\n\t\t\t\t\t\t\t\ttop = null;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tresult.sequnce.pop();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresult.lastAngle = lastAngle;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"m\":\r\n\t\t\tcase \"t\":\r\n\t\t\t\tpoint =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: top[1].value,\r\n\t\t\t\t\ty: top[2].value\r\n\t\t\t\t}\r\n\t\t\t\tif(distortionStack.length)\r\n\t\t\t\t\tpoint = Distortion.runStack(origin.x, origin.y, point.x, point.y, distortionStack);\r\n\t\t\t\tDistortion.#fixPoint(point, relative, top[1], top[2], result);\r\n\t\t\t\ttop = [top[0], point.x, point.y];\r\n\t\t\t\tif(context.optimisation.path.combineCommands && command === \"m\" && result.sequence.length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tlast = result.sequence[result.sequence.length - 1];\r\n\t\t\t\t\tif(last[0].toLowerCase() === \"m\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(relative)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlast[1] = last[1].add(top[1]);\r\n\t\t\t\t\t\t\tlast[2] = last[2].add(top[2]);\r\n\t\t\t\t\t\t\ttop = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tresult.sequnce.pop();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"z\":\r\n\t\t\t\ttop = [\"z\"];\r\n\t\t\t\tresult.x = new BigDecimal(result.originX);\r\n\t\t\t\tresult.y = new BigDecimal(result.originY);\r\n\t\t\t\tresult.lastAngle = null;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tif(command !== \"z\")\r\n\t\t{\r\n\t\t\tresult.x = relative ? result.x.add(point.x) : point.x;\r\n\t\t\tresult.y = relative ? result.y.add(point.y) : point.y;\r\n\t\t}\r\n\t\tif(command === \"m\")\r\n\t\t{\r\n\t\t\tresult.originX = new BigDecimal(result.x);\r\n\t\t\tresult.originY = new BigDecimal(result.y);\r\n\t\t}\r\n\t\tif(top)\r\n\t\t{\r\n\t\t\tif(!relative)\r\n\t\t\t\ttop[0] = top[0].toUpperCase();\r\n\t\t\t/* TODO: Primitive optimiser someday? */\r\n\t\t\tconst reverseList = distortionStack.filter(item => item.type === Distortion.OPERATION_REVERSE_ORDER);\r\n\t\t\tif(reverseList.length % 2)\r\n\t\t\t\tresult.sequence.splice(reverseList[0].value.toNumber(), 0, top);\r\n\t\t\telse\r\n\t\t\t\tresult.sequence.push(top);\r\n\t\t}\r\n\r\n\t\treturn;\r\n\t}\r\n}\r\n","import ExpressionParser from \"./ExpressionParser\";\nimport Token from \"./Token\";\nimport TokenStream from \"./TokenStream\";\nimport BigDecimal from \"./BigDecimal\";\nimport Value from \"./Value\";\nimport Distortion from \"./Distortion\";\n\nexport default class PathParser\n{\n\tconstructor(stream)\n\t{\n\t\tthis.stream = stream;\n\n\t\treturn;\n\t}\n\n\tstatic resultToString(result, precision = BigDecimal.LIMIT_PRECISION)\n\t{\n\t\treturn(result.sequence.map(i => \"\" + i[0].toString() + (i.length > 1 ? \" \" + i.slice(1).join(\",\") : \"\")).join(\" \"));\n\t}\n\n\tstatic parseValueAttribute(context, text)\n\t{\n\t\tlet parser = new PathParser(new TokenStream(text));\n\t\tlet pathResult = parser.parseList(context);\n\n\t\treturn(PathParser.resultToString(pathResult, context.optimisation.path.precision));\n\t}\n\n\tparseList(context, result = Value.getEmptyResult(), limit = -1)\n\t{\n\t\tlet state;\n\t\tlet top;\n\n\t\tstate =\n\t\t{\n\t\t\tcurrent: this.stream.getCurrent(),\n\t\t\treading: true,\n\t\t\tindex: 0\n\t\t};\n\t\ttop = [];\n\n\t\twhile(state.reading && state.current && (state.index < limit || limit === -1))\n\t\t{\n\t\t\tswitch(state.current.type)\n\t\t\t{\n\t\t\t\tcase Token.TYPE_WHITESPACE:\n\t\t\t\tcase Token.TYPE_DELIMITER:\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_END:\n\t\t\t\t\tstate.reading = false;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet expResult = new ExpressionParser(this.stream).parse(context, 0, [], false, {x: result.x, y: result.y}, Value.TYPE_UNIT);\n\t\t\t\t\tresult.sequence.push([expResult.accumulator]);\n\t\t\t\t\tresult.index++;\n\t\t\t\t\tstate.current = this.stream.getCurrent();\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tstate.current = this.stream.getNext();\n\t\t}\n\n\t\treturn(result);\n\t}\n\n\tparse(context, result = Value.getEmptyResult(), distortionStack = [], index = 1, argumentList)\n\t{\n\t\tlet state;\n\t\tlet top;\n\t\tlet invoked;\n\t\tlet next;\n\n\t\tstate =\n\t\t{\n\t\t\tcurrent: this.stream.getCurrent(),\n\t\t\treading: true\n\t\t};\n\t\tdistortionStack.forEach(item =>\n\t\t{\n\t\t\tif(item.type === Distortion.OPERATION_REVERSE_ORDER)\n\t\t\t\titem.value = new BigDecimal(result.sequence.length);\n\n\t\t\treturn;\n\t\t});\n\n\t\twhile(state.reading && state.current)\n\t\t{\n\t\t\tswitch(state.current.type)\n\t\t\t{\n\t\t\t\tcase Token.TYPE_COMMAND:\n\t\t\t\t\tif(result.arity === null && state.current.name.toLowerCase() !== \"m\")\n\t\t\t\t\t\tthrow(new SyntaxError(\"Paths must begin with a Move To command\"));\n\t\t\t\t\tif(top)\n\t\t\t\t\t\tDistortion.applyDistortion(context, top, result, distortionStack);\n\t\t\t\t\tresult.arity = state.current.value;\n\t\t\t\t\tresult.pending = result.arity.length;\n\t\t\t\t\ttop = [state.current.name];\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_OPERATOR_FIX:\n\t\t\t\t\tresult.fixNext = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_WHITESPACE:\n\t\t\t\tcase Token.TYPE_DELIMITER:\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_END:\n\t\t\t\t\tif(top)\n\t\t\t\t\t\tDistortion.applyDistortion(context, top, result, distortionStack);\n\t\t\t\t\tstate.reading = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_IDENTIFIER:\n\t\t\t\tcase Token.TYPE_NUMBER:\n\t\t\t\t\tif(state.current.type === Token.TYPE_NUMBER)\n\t\t\t\t\t{\n\t\t\t\t\t\tnext = this.stream.peekNext();\n\t\t\t\t\t\tinvoked = next.type === Token.TYPE_IDENTIFIER && context.segment[next.name];\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tinvoked = context.segment[state.current.name];\n\t\t\t\t\tif(invoked)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(top)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tDistortion.applyDistortion(context, top, result, distortionStack);\n\t\t\t\t\t\t\ttop = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnew ExpressionParser(this.stream).parseInvocation(context, result, argumentList, distortionStack.concat());\n\t\t\t\t\t\tstate.current = this.stream.getCurrent();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tif(!top)\n\t\t\t\t\t\tthrow(new Error(`Expected command, but found \"${state.current.name}\"`));\n\t\t\t\t\tif(!result.pending)\n\t\t\t\t\t{\n\t\t\t\t\t\tDistortion.applyDistortion(context, top, result, distortionStack);\n\t\t\t\t\t\tresult.pending = result.arity.length;\n\t\t\t\t\t\ttop = [top[0]];\n\t\t\t\t\t}\n\t\t\t\t\tif(!result.pending)\n\t\t\t\t\t\tthrow(new SyntaxError(`Too many parameters supplied to command \"${top[0]}\"`));\n\t\t\t\t\tif(top[0].toLowerCase() === \"a\" && (result.pending === 4 || result.pending === 3) && state.current.type === Token.TYPE_NUMBER && state.current.name.length > 1 && [\"0\", \"1\"].indexOf(state.current.name.substr(0, 1)) !== -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttop.push({fixed: result.fixNext, value: new BigDecimal(state.current.name.substr(0, 1))});\n\t\t\t\t\t\tstate.current.name = state.current.name.substr(1);\n\t\t\t\t\t\tstate.current.value = new BigDecimal(state.current.name);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif(state.current.type === Token.TYPE_NUMBER)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnext = this.stream.peekNext();\n\t\t\t\t\t\t\tinvoked = next.type === Token.TYPE_IDENTIFIER && context.segment[next.name];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tinvoked = context.segment[state.current.name];\n\t\t\t\t\t\tif(!invoked)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet expResult = new ExpressionParser(this.stream).parse(context, 0, argumentList, false, {x: result.x, y: result.y}, result.arity[result.arity.length - result.pending]);\n\t\t\t\t\t\t\ttop.push({fixed: result.fixNext, value: expResult.accumulator});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tresult.fixNext = false;\n\t\t\t\t\tresult.pending--;\n\t\t\t\t\tstate.current = this.stream.getCurrent();\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tstate.current = this.stream.getNext();\n\t\t}\n\n\t\treturn(result);\n\t}\n}\n","import TokenStream from \"./TokenStream\";\nimport Token from \"./Token\";\nimport BigDecimal from \"./BigDecimal\";\nimport Value from \"./Value\";\nimport PathParser from \"./PathParser\";\nimport Distortion from \"./Distortion\";\n\nexport default class ExpressionParser\n{\n    static #OPERATION_EVALUATE  = 1;\n    static #OPERATION_ADD       = 2;\n    static #OPERATION_SUBTRACT  = 3;\n    static #OPERATION_MULTIPLY  = 4;\n    static #OPERATION_DIVIDE    = 5;\n\n    constructor(stream)\n    {\n        this.stream = stream;\n\t\tthis.debug = false;\n    }\n\n    static #formatOperation(operation)\n    {\n\t\treturn(operation.value.toString() + \" \" + [\"\", \"=\", \"+\", \"-\", \"*\", \"/\"][operation.operation]);\n\t}\n\n    #unwind(result, limit)\n    {\n\t\tvar start;\n\t\tvar index;\n\t\tvar leftValue;\n\t\tvar leftOperation;\n\n\t\tstart = result.stack.length - 1;\n\t\twhile(start > -1 && result.stack[start].operation > limit)\n\t\t\tstart--;\n\t\tindex = start + 1;\n\t\tif(index < result.stack.length)\n\t\t{\n\t\t\tresult.stack.push({operation: ExpressionParser.#OPERATION_EVALUATE, value: result.accumulator});\n\t\t\tif(this.debug)\n\t\t\t\tconsole.log(\"<<\\n\" + result.stack.slice(index).map((i, j) => j + \": \" + ExpressionParser.#formatOperation(i)).join(\"\\n\"));\n\t\t\tleftValue = result.stack[index].value;\n\t\t\tfor(; index < result.stack.length - 1; index++)\n\t\t\t{\n\t\t\t\tleftOperation = result.stack[index].operation;\n\t\t\t\tswitch(leftOperation)\n\t\t\t\t{\n\t\t\t\t\tcase ExpressionParser.#OPERATION_MULTIPLY:\n\t\t\t\t\t\tleftValue = leftValue.multiplyBy(result.stack[index + 1].value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ExpressionParser.#OPERATION_DIVIDE:\n\t\t\t\t\t\tleftValue = leftValue.divideBy(result.stack[index + 1].value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ExpressionParser.#OPERATION_ADD:\n\t\t\t\t\t\tleftValue = leftValue.add(result.stack[index + 1].value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ExpressionParser.#OPERATION_SUBTRACT:\n\t\t\t\t\t\tleftValue = leftValue.subtract(result.stack[index + 1].value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult.accumulator = leftValue;\n\t\t\tresult.stack = result.stack.slice(0, start + 1);\n\t\t}\n\n\t\treturn;\n\t}\n\n    parse(context, depth = 0, argumentList = {}, insideArgumentList = false, position, type, additionalTerminatorList = [])\n    {\n\t\tvar result;\n\t\tvar state;\n\n\t\tresult =\n\t\t{\n\t\t\taccumulator: new BigDecimal(0),\n\t\t\tbase: 0,\n\t\t\tcounter: depth,\n\t\t\tdata: 0,\n\t\t\tstack: []\n\t\t};\n\t\tstate =\n\t\t{\n\t\t\tcurrent: this.stream.getCurrent(),\n\t\t\treading: true\n\t\t};\n\n\t\twhile(state.reading && state.current)\n\t\t{\n\t\t\tswitch(state.current.type)\n\t\t\t{\n\t\t\t\tcase Token.TYPE_NUMBER:\n\t\t\t\t\tif(result.data === Token.TYPE_WHITESPACE)\n\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected space-delimited value \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\tif(result.data === Token.TYPE_NUMBER)\n\t\t\t\t\t\tif(result.counter)\n\t\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate.reading = false;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\tconsole.log(\"Number\", state.current);\n\t\t\t\t\tresult.accumulator = state.current.value;\n\t\t\t\t\tresult.data = Token.TYPE_NUMBER;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_OPERATOR_DIVIDE:\n\t\t\t\t\tif(result.data !== Token.TYPE_NUMBER && result.data !== Token.TYPE_WHITESPACE)\n\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\tconsole.log(\"/\", state.current);\n\t\t\t\t\tresult.stack.push({operation: ExpressionParser.#OPERATION_DIVIDE, value: result.accumulator});\n\t\t\t\t\tresult.data = Token.TYPE_OPERATOR_DIVIDE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_OPERATOR_MULTIPLY:\n\t\t\t\t\tif(result.data !== Token.TYPE_NUMBER && result.data !== Token.TYPE_WHITESPACE)\n\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\tconsole.log(\"*\", state.current);\n\t\t\t\t\tresult.stack.push({operation: ExpressionParser.#OPERATION_MULTIPLY, value: result.accumulator});\n\t\t\t\t\tresult.data = Token.TYPE_OPERATOR_MULTIPLY;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_OPERATOR_SUBTRACT:\n\t\t\t\t\tif(result.data === Token.TYPE_NUMBER && result.counter === 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tstate.reading = false;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(result.data !== Token.TYPE_NUMBER && result.data !== 0 && result.data !== Token.TYPE_BRACKET && result.data !== Token.TYPE_WHITESPACE)\n\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\tconsole.log(\"-\", state.current);\n\t\t\t\t\tthis.#unwind(result, ExpressionParser.#OPERATION_SUBTRACT);\n\t\t\t\t\tresult.stack.push({operation: ExpressionParser.#OPERATION_SUBTRACT, value: result.accumulator});\n\t\t\t\t\tresult.data = Token.TYPE_OPERATOR_SUBTRACT;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_OPERATOR_ADD:\n\t\t\t\t\tif(result.data !== Token.TYPE_NUMBER && result.data !== Token.TYPE_WHITESPACE)\n\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\tconsole.log(\"+\", state.current);\n\t\t\t\t\tthis.#unwind(result, ExpressionParser.#OPERATION_SUBTRACT);\n\t\t\t\t\tresult.stack.push({operation: ExpressionParser.#OPERATION_ADD, value: result.accumulator});\n\t\t\t\t\tresult.data = Token.TYPE_OPERATOR_ADD;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_OPERATOR_MEASURE:\n\t\t\t\t\tif(result.data === Token.TYPE_WHITESPACE)\n\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected space before measure operator (\"${state.current.name}\") at column ${state.current.position}`));\n\t\t\t\t\tif(result.data === Token.TYPE_NUMBER)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\t\tconsole.log(\"*\", state.current);\n\t\t\t\t\t\tresult.stack.push({operation: ExpressionParser.#OPERATION_MULTIPLY, value: result.accumulator});\n\t\t\t\t\t}\n\t\t\t\t\tif(type === Value.TYPE_UNIT)\n\t\t\t\t\t\tthrow(new SyntaxError(`The unit type is incompatible with the return value of a segment measurement`));\n\t\t\t\t\tif(type === Value.TYPE_FLAG)\n\t\t\t\t\t\tthrow(new SyntaxError(`The flag type is incompatible with the return value of a segment measurement`));\n\t\t\t\t\tthis.stream.getNext();\n\t\t\t\t\tif(this.stream.getCurrent().type === Token.TYPE_WHITESPACE)\n\t\t\t\t\t\tthis.stream.getNext();\n\t\t\t\t\tif(this.stream.getCurrent().type !== Token.TYPE_IDENTIFIER)\n\t\t\t\t\t\tthrow(new SyntaxError(`Expected identifier at ${this.stream.getCurrent().position}, found \"${this.stream.getCurrent().name}\"`))\n\t\t\t\t\tlet expResult = Value.getEmptyResult();\n\t\t\t\t\texpResult.x = position.x;\n\t\t\t\t\texpResult.y = position.y;\n\t\t\t\t\texpResult.arity = [];\n\t\t\t\t\tnew ExpressionParser(this.stream).parseInvocation(context, expResult, argumentList, []);\n\t\t\t\t\tresult.data = Token.TYPE_NUMBER;\n\t\t\t\t\tswitch(type)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase Value.TYPE_X:\n\t\t\t\t\t\t\tresult.accumulator = expResult.x.subtract(position.x);\n\t\t\t\t\t\t\tconsole.log(\"RETURNING X\", result.accumulator.toString());\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase Value.TYPE_Y:\n\t\t\t\t\t\t\tresult.accumulator = expResult.y.subtract(position.y);\n\t\t\t\t\t\t\tconsole.log(\"RETURNING Y\", result.accumulator.toString());\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase Value.TYPE_THETA:\n\t\t\t\t\t\t\tresult.accumulator = (new BigDecimal(Math.atan2(expResult.x.subtract(position.x).toNumber(), expResult.y.subtract(position.y).toNumber()))).multiplyBy(180).divideBy(BigDecimal.PI);\n\t\t\t\t\t\t\tconsole.log(\"RETURNING THETA\", result.accumulator.toString());\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(this.stream.getCurrent().type === Token.TYPE_WHITESPACE)\n\t\t\t\t\t\tthis.stream.getNext();\n\t\t\t\t\tstate.current = this.stream.getCurrent();\n\t\t\t\t\tif(state.current.type !== Token.TYPE_OPERATOR_MEASURE)\n\t\t\t\t\t\tthrow(new SyntaxError(`Expected measurement operator, found \"${state.current.name}`));\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_BRACKET:\n\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\tconsole.log(state.current.value ? \"(\" : \")\", state.current, result.counter, context.depth);\n\t\t\t\t\tif(state.current.value)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(result.data === Token.TYPE_WHITESPACE)\n\t\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\t\tresult.counter++;\n\t\t\t\t\t\tif(result.data === Token.TYPE_NUMBER)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\t\t\tconsole.log(\"*\", state.current);\n\t\t\t\t\t\t\tresult.stack.push({operation: ExpressionParser.#OPERATION_MULTIPLY, value: result.accumulator});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.accumulator = new BigDecimal(0);\n\t\t\t\t\t\tresult.stack.push({operation: ExpressionParser.#OPERATION_EVALUATE});\n\t\t\t\t\t\tresult.data = Token.TYPE_BRACKET;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif(!insideArgumentList && result.counter === context.depth)\n\t\t\t\t\t\t\tthrow(new SyntaxError(`Mismatched bracket at column ${state.current.position}`));\n\t\t\t\t\t\tif(result.data !== Token.TYPE_NUMBER)\n\t\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected bracket at column ${state.current.position}`));\n\t\t\t\t\t\tthis.#unwind(result, ExpressionParser.#OPERATION_SUBTRACT);\n\t\t\t\t\t\tthis.#unwind(result, ExpressionParser.#OPERATION_EVALUATE);\n\t\t\t\t\t\tresult.stack.pop();\n\t\t\t\t\t\tresult.data = Token.TYPE_NUMBER;\n\t\t\t\t\t\tif(insideArgumentList)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate.reading = false;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tresult.counter--;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_IDENTIFIER:\n\t\t\t\t\tif(result.data === Token.TYPE_WHITESPACE)\n\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected space-delimited value \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\tif(state.current.name in argumentList || state.current.name in context.unit)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(result.data === Token.TYPE_NUMBER)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\t\t\tconsole.log(\"*\", state.current);\n\t\t\t\t\t\t\tresult.stack.push({operation: ExpressionParser.#OPERATION_MULTIPLY, value: result.accumulator});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\t\tconsole.log(\"Unit\", state.current);\n\t\t\t\t\t\tresult.accumulator = argumentList[state.current.name] ?? context.unit[state.current.name];\n\t\t\t\t\t\tresult.data = Token.TYPE_NUMBER;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tthrow(new ReferenceError(`Reference to undefined unit \"${state.current.name}\" at column ${state.current.position}.`));\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_DELIMITER:\n\t\t\t\t\tif(result.counter)\n\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected delimiter \"${state.current.name}\" in expression at column ${state.current.position}.`));\n\t\t\t\tcase Token.TYPE_WHITESPACE:\n\t\t\t\t\tif(result.counter || result.data === 0) // TODO\n\t\t\t\t\t{\n\t\t\t\t\t\tif(result.data === Token.TYPE_NUMBER)\n\t\t\t\t\t\t\tresult.data = Token.TYPE_WHITESPACE;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase Token.TYPE_END:\n\t\t\t\t\tif(result.counter > context.depth)\n\t\t\t\t\t\tthrow(new SyntaxError(`Missing closing bracket(s) at end of segment (nesting depth = ${result.counter - context.depth})`));\n\t\t\t\t\tstate.reading = false;\n\t\t\t\t\tcontinue;\n\t\t\t\tdefault:\n\t\t\t\t\tif(additionalTerminatorList.includes(state.current.type))\n\t\t\t\t\t{\n\t\t\t\t\t\tstate.reading = false;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t}\n\t\t\tstate.current = this.stream.getNext();\n\t\t}\n\t\tthis.#unwind(result, ExpressionParser.#OPERATION_SUBTRACT);\n\t\tthis.#unwind(result, 0);\n\n\t\treturn(result);\n\t}\n\n\tparseInvocation(context, result, argumentList, distortionStack)\n\t{\n\t\tlet state;\n\t\tlet segment;\n\t\tlet inner;\n\t\tlet name;\n\t\tlet index;\n\t\tlet expResult;\n\t\tlet type;\n\t\n\t\tstate =\n\t\t{\n\t\t\tcurrent: this.stream.getCurrent(),\n\t\t\treading: true,\n\t\t\thasCount: false,\n\t\t\thasArgumentList: false,\n\t\t\tdistortionStack: distortionStack,\n\t\t\tcount: false,\n\t\t\targumentList: {},\n\t\t\tdelimited: false\n\t\t};\n\t\n\t\tif(state.current.type === Token.TYPE_NUMBER)\n\t\t{\n\t\t\tstate.count = state.current.value.toNumber();\n\t\t\tstate.hasCount = true;\n\t\t\tstate.current = this.stream.getNext();\n\t\t}\n\t\telse\n\t\t\tstate.count = 1;\n\t\tname = state.current.name;\n\t\tif(result.stack.indexOf(name) === -1)\n\t\t{\n\t\t\tif(!(name in context.segment))\n\t\t\t\tthrow(new ReferenceError(`Reference to undefined section \"${name}\" at ${state.current.position}`));\n\t\t\tsegment = context.segment[name];\n\t\t\tstate.current = this.stream.getNext();\n\t\t\twhile(state.reading === true && state.current)\n\t\t\t{\n\t\t\t\tswitch(state.current.type)\n\t\t\t\t{\n\t\t\t\t\tcase Token.TYPE_OPERATOR_ROTATE:\n\t\t\t\t\tcase Token.TYPE_OPERATOR_SKEW_HORIZONTAL:\n\t\t\t\t\tcase Token.TYPE_OPERATOR_SKEW_VERTICAL:\n\t\t\t\t\t\tthis.stream.getNext();\n\t\t\t\t\t\texpResult = new ExpressionParser(this.stream).parse(context, 0, argumentList, false, {x: result.x, y: result.y}, Value.TYPE_THETA, [Token.TYPE_OPERATOR_ROTATE, Token.TYPE_OPERATOR_SKEW_HORIZONTAL, Token.TYPE_OPERATOR_SKEW_VERTICAL]);\n\t\t\t\t\t\tstate.distortionStack.push(new Distortion(\n\t\t\t\t\t\t({\n\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_ROTATE]: Distortion.OPERATION_ROTATE,\n\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_SKEW_HORIZONTAL]: Distortion.OPERATION_SKEW_HORIZONTAL,\n\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_SKEW_VERTICAL]: Distortion.OPERATION_SKEW_VERTICAL\n\t\t\t\t\t\t})[state.current.type], expResult.accumulator));\n\t\t\t\t\t\tstate.current = this.stream.getCurrent();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tcase Token.TYPE_OPERATOR_REVERSE_ORDER:\n\t\t\t\t\t\tstate.distortionStack.push(new Distortion(Distortion.OPERATION_REVERSE_ORDER, null));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Token.TYPE_BRACKET:\n\t\t\t\t\t\tif(!state.hasArgumentList)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(state.current.value)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstate.current = this.stream.getNext();\n\t\t\t\t\t\t\t\twhile(!state.hasArgumentList)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tswitch(state.current.type)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_BRACKET:\n\t\t\t\t\t\t\t\t\t\t\tif(state.current.value)\n\t\t\t\t\t\t\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\t\t\t\t\t\t\tstate.hasArgumentList = true;\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_IDENTIFIER:\n\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_ROTATE:\n\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_REPEAT:\n\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_SKEW_HORIZONTAL:\n\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_SKEW_VERTICAL:\n\t\t\t\t\t\t\t\t\t\t\tstate.delimited = false;\n\t\t\t\t\t\t\t\t\t\t\tname = state.current.name;\n\t\t\t\t\t\t\t\t\t\t\ttype = state.current.type;\n\t\t\t\t\t\t\t\t\t\t\tswitch(type)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_IDENTIFIER:\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(context.segment[name])\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthrow(new ReferenceError(`Argument \"${name}\" is already defined as a segment`));\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_REPEAT:\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(state.hasCount)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthrow(new ReferenceError(`Execution count is already defined for this invocation`));\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif(this.stream.peekNext().type === Token.TYPE_WHITESPACE)\n\t\t\t\t\t\t\t\t\t\t\t\tstate.current = this.stream.getNext();\n\t\t\t\t\t\t\t\t\t\t\tstate.current = this.stream.getNext();\n\t\t\t\t\t\t\t\t\t\t\tif(state.current.type === Token.TYPE_END)\n\t\t\t\t\t\t\t\t\t\t\t\tthrow(new Error(`Unexpected end of segment at ${state.current.position}`));\n\t\t\t\t\t\t\t\t\t\t\tif(state.current.type !== Token.TYPE_OPERATOR_ASSIGN)\n\t\t\t\t\t\t\t\t\t\t\t\tthrow(new SyntaxError(`Expected assignment operator after argument name, but found \"${state.current.name}\"`));\n\t\t\t\t\t\t\t\t\t\t\tstate.current = this.stream.getNext();\n\t\t\t\t\t\t\t\t\t\t\texpResult = new ExpressionParser(this.stream).parse(context, 0, argumentList, true, {x: result.x, y: result.y},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t[Token.TYPE_IDENTIFIER]: Value.TYPE_UNIT,\n\t\t\t\t\t\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_ROTATE]: Value.TYPE_THETA,\n\t\t\t\t\t\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_SKEW_HORIZONTAL]: Value.TYPE_THETA,\n\t\t\t\t\t\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_SKEW_VERTICAL]: Value.TYPE_THETA,\n\t\t\t\t\t\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_REPEAT]: Value.TYPE_UNIT,\n\t\t\t\t\t\t\t\t\t\t\t}[type]);\n\t\t\t\t\t\t\t\t\t\t\tswitch(type)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_IDENTIFIER:\n\t\t\t\t\t\t\t\t\t\t\t\t\tstate.argumentList[name] = expResult.accumulator;\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_ROTATE:\n\t\t\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_SKEW_HORIZONTAL:\n\t\t\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_SKEW_VERTICAL:\n\t\t\t\t\t\t\t\t\t\t\t\t\tstate.distortionStack.push(new Distortion(\n\t\t\t\t\t\t\t\t\t\t\t\t\t({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_ROTATE]: Distortion.OPERATION_ROTATE,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_SKEW_HORIZONTAL]: Distortion.OPERATION_SKEW_HORIZONTAL,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_SKEW_VERTICAL]: Distortion.OPERATION_SKEW_VERTICAL\n\t\t\t\t\t\t\t\t\t\t\t\t\t})[type], expResult.accumulator));\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_REPEAT:\n\t\t\t\t\t\t\t\t\t\t\t\t\tstate.count = expResult.accumulator.toNumber();\n\t\t\t\t\t\t\t\t\t\t\t\t\tstate.hasCount = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tstate.current = this.stream.getCurrent();\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_DELIMITER:\n\t\t\t\t\t\t\t\t\t\t\tif(state.delimited)\n\t\t\t\t\t\t\t\t\t\t\t\tthrow(new Error(`Unexpected delimiter at column ${state.current.position}`));\n\t\t\t\t\t\t\t\t\t\t\tstate.delimited = true;\n\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_WHITESPACE:\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_END:\n\t\t\t\t\t\t\t\t\t\t\tthrow(new Error(`Unexpected end of segment at ${state.current.position}`));\n\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tstate.current = this.stream.getNext();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate.reading = false;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Token.TYPE_WHITESPACE:\n\t\t\t\t\t\tif([Token.TYPE_OPERATOR_ROTATE, Token.TYPE_OPERATOR_SKEW_HORIZONTAL, Token.TYPE_OPERATOR_SKEW_VERTICAL].includes(this.stream.peekNext().type))\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tstate.reading = false;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tstate.current = this.stream.getNext();\n\t\t\t}\n\t\t\tif(state.count !== parseInt(state.count))\n\t\t\t\tthrow(new Error(`The execution count (${state.count}) for segment \"${name}\" must be an integer.`));\n\t\t\tif(state.count < 1)\n\t\t\t\tthrow(new Error(`The execution count (${state.count}) for segment \"${name}\" can't be less than 1.`));\n\t\t\tfor(index = 1; index <= state.count; index++)\n\t\t\t{\n\t\t\t\tinner = new PathParser(new TokenStream(segment));\n\t\t\t\tinner.parse(context, result, state.distortionStack.concat(), index, state.argumentList);\n\t\t\t\tresult.stack.pop();\n\t\t\t}\n\t\t\tstate.reading = false;\n\t\t}\n\t\telse\n\t\t\tthrow(new ReferenceError(`Segment ${state.current.name} cannot call itself`));\n\t\n\t\treturn;\n\t}\n}\n","export default class ExtendedDOM\r\n{\r\n\tstatic typeof(node)\r\n\t{\r\n\t\treturn(node && node.constructor ? node.constructor.name.toLowerCase() : undefined);\r\n\t}\r\n\r\n\tstatic extractChildren(element, clean = true)\r\n\t{\r\n\t\tif(clean && ExtendedDOM.typeof(element.firstChild) === \"text\")\r\n\t\t\telement.removeChild(element.firstChild);\r\n\t\twhile(element.firstChild)\r\n\t\t\telement.parentNode.insertBefore(element.firstChild, element);\r\n\t\telement.parentNode.removeChild(element);\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tstatic remove(element, clean = true)\r\n\t{\r\n\t\tif(clean && ExtendedDOM.typeof(element.previousSibling) === \"text\")\r\n\t\t\telement.parentNode.removeChild(element.previousSibling);\r\n\t\telement.parentNode.removeChild(element);\r\n\r\n\t\treturn;\r\n\t}\r\n}\r\n","import ExpressionParser from \"./ExpressionParser\";\nimport TokenStream from \"./TokenStream\";\nimport PathParser from \"./PathParser\";\nimport BigDecimal from \"./BigDecimal\";\nimport Value from \"./Value\";\nimport ExtendedDOM from \"./ExtendedDOM\";\n\nexport default class Transformer\n{\n\tconstructor(text)\n\t{\n\t\tthis.document = Transformer.#parseXML(text);\n\t}\n\n\tstatic #parseXML(text)\n\t{\n\t\treturn((new (typeof(DOMParser) === \"undefined\" ? require('xmldom').DOMParser : DOMParser)()).parseFromString(text, \"text/xml\"));\n\t}\n\n\tstatic #parseMeta(document)\n\t{\n\t\tlet defined = Array.from(document.getElementsByTagName(\"define\"))\n\t\tdefined.forEach(element => element.parentNode.removeChild(element));\n\t\tdefined = defined.filter(item =>\n\t\t\t\t[\"t\", \"true\", \"on\", \"yes\", \"y\"].includes(item.getAttribute(\"state\").toLowerCase())\n\t\t\t\t||\n\t\t\t\t(parseFloat(item.getAttribute(\"state\")) || 0) !== 0\n\t\t\t)\n\t\t\t.map(item => item.getAttribute(\"name\"));\n\t\tArray.from(document.getElementsByTagName(\"ifdef\")).forEach(element =>\n\t\t{\n\t\t\tif(defined.includes(element.getAttribute(\"name\")))\n\t\t\t\tExtendedDOM.extractChildren(element);\n\t\t\telse\n\t\t\t\tExtendedDOM.remove(element);\n\n\t\t\treturn;\n\t\t});\n\t\tArray.from(document.getElementsByTagName(\"ifndef\")).forEach(element =>\n\t\t{\n\t\t\tif(defined.includes(element.getAttribute(\"name\")))\n\t\t\t\tExtendedDOM.remove(element);\n\t\t\telse\n\t\t\t\tExtendedDOM.extractChildren(element);\n\n\t\t\treturn;\n\t\t});\n\t\n\t\treturn;\n\t}\n\n\tstatic #parseUnitList(context, list)\n\t{\n\t\tlet stack = [];\n\t\tlet item;\n\n\t\twhile(stack.length || list.length)\n\t\t{\n\t\t\tif(stack.length)\n\t\t\t\titem = stack.pop();\n\t\t\telse\n\t\t\t{\n\t\t\t\titem = list.shift();\n\t\t\t\tif(!item.previousSibling.tagName && item.previousSibling.nodeValue.trim() === \"\")\n\t\t\t\t\titem.parentNode.removeChild(item.previousSibling);\n\t\t\t\titem.parentNode.removeChild(item);\n\t\t\t}\n\t\t\tlet parser = new ExpressionParser(new TokenStream(item.getAttribute(\"value\")));\n\t\t\ttry\n\t\t\t{\n\t\t\t\tlet result = parser.parse(context, 1, {}, false, null, Value.TYPE_UNIT);\n\t\t\t\tlet id = item.getAttribute(\"id\");\n\t\t\t\tif(id in context.unit)\n\t\t\t\t\tthrow(new Error(`Duplicate unit ID: \"${id}\"`));\n\t\t\t\tcontext.unit[id] = result.accumulator;\n\t\t\t}\n\t\t\tcatch(except)\n\t\t\t{\n\t\t\t\tif(except instanceof ReferenceError)\n\t\t\t\t{\n\t\t\t\t\tif(stack.filter(i => i.getAttribute(\"id\") === parser.stream.getCurrent().name).length === 1)\n\t\t\t\t\t\tthrow(new ReferenceError(`Circular reference to \"${parser.stream.getCurrent().name}\"`));\n\t\t\t\t\tstack.push(item);\n\t\t\t\t\tlet next = list.filter(i => i.getAttribute(\"id\") === parser.stream.getCurrent().name);\n\t\t\t\t\tif(next.length > 1)\n\t\t\t\t\t\tthrow(new ReferenceError(`Unable to resolve expression \"${item.getAttribute(\"value\")}\". Duplicate ID \"${parser.stream.getCurrent().name}\".`));\n\t\t\t\t\tif(next.length === 0)\n\t\t\t\t\t\tthrow(new ReferenceError(`Unable to resolve expression \"${item.getAttribute(\"value\")}\". \"${parser.stream.getCurrent().name}\" is undefined.`));\n\t\t\t\t\tstack.push(next[0]);\n\t\t\t\t\tnext[0].parentNode.removeChild(next[0]);\n\t\t\t\t\tlist = list.slice(0, list.indexOf(next[0])).concat(list.slice(list.indexOf(next[0]) + 1));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tthrow(new Error(\"Couldn't parse item, \" + except.message, {cause: except}));\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic #parseSegmentList(context, list)\n\t{\n\t\tlist.forEach(i =>\n\t\t{\n\t\t\tif(!i.previousSibling.tagName && i.previousSibling.nodeValue.trim() === \"\")\n\t\t\t\ti.parentNode.removeChild(i.previousSibling);\n\t\t\ti.parentNode.removeChild(i)\n\n\t\t\treturn;\n\t\t});\n\t\tcontext.segment = list.reduce((previous, current) =>\n\t\t{\n\t\t\tlet id = current.getAttribute(\"id\");\n\t\t\tif(id in previous)\n\t\t\t\tthrow(new Error(`Duplicate segment ID: \"${id}\"`));\n\t\t\tif(id in context.unit)\n\t\t\t\tthrow(new Error(`Segment ID: \"${id}\" already defined as a unit`));\n\t\t\tprevious[current.getAttribute(\"id\")] = current.getAttribute(\"d\");\n\n\t\t\treturn(previous);\n\t\t}, {});\n\t}\n\n\t#parseIncludeList(configuration)\n\t{\n\t\tlet list;\n\t\tlet seen = [];\n\n\t\tdo\n\t\t{\n\t\t\tlist = Array.from(this.document.getElementsByTagName(\"include\"));\n\t\t\tlist.forEach(item =>\n\t\t\t{\n\t\t\t\tlet href = item.getAttribute(\"href\");\n\t\t\t\tif(seen.indexOf(href) !== -1)\n\t\t\t\t\tthrow(new Error(`Circular include reference: ${href}`));\n\t\t\t\tseen.push(href);\n\t\t\t\thref = href.split(\"#\");\n\t\t\t\tlet filename = href[0];\n\t\t\t\tlet id = href.length > 1 ? href.slice(1).join(\"#\") : null;\n\t\t\t\tconst fs = require('fs');\n\t\t\t\tconst data = fs.readFileSync(configuration.base + filename, {encoding: \"utf-8\", flag: \"r\"});\n\t\t\t\tlet inner = Transformer.#parseXML(data);\n\t\t\t\tlet target;\n\t\t\t\tif(id !== null)\n\t\t\t\t{\n\t\t\t\t\ttarget = inner.getElementById(id);\n\t\t\t\t\tif(!target)\n\t\t\t\t\t\tthrow(new Error(`Failed to include file: ${filename}, ID: ${id}`));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttarget = inner.documentElement;\n\t\t\t\t\tif(!target)\n\t\t\t\t\t\tthrow(new Error(`Failed to include file: ${filename}`));\n\t\t\t\t}\n\t\t\t\tif(target.nodeName.toLowerCase() === \"svg\")\n\t\t\t\t{\n\t\t\t\t\tlet child = target.firstChild;\n\t\t\t\t\twhile(child)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet add = child;\n\t\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t\t\titem.parentNode.insertBefore(add, item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet child = target;\n\t\t\t\t\twhile(child)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet add = child;\n\t\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t\t\titem.parentNode.insertBefore(add, item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\titem.parentNode.removeChild(item);\n\t\t\t});\n\t\t} while(list.length);\n\t}\n\n\tstatic #insertTemplateContent(template, replacement)\n\t{\n\t\tconst copy = template.cloneNode(true);\n\t\tconst list = Array.from(copy.getElementsByTagName(\"*\"));\n\t\tlist.forEach(element =>\n\t\t\tArray.from(element.attributes).forEach(attribute =>\n\t\t\t\tObject.entries(replacement).forEach(([replaceKey, replaceValue]) =>\n\t\t\t\t\tattribute.value = attribute.value.replaceAll(replaceKey, replaceValue)\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t\tif(copy.firstChild && !copy.firstChild.tagName && copy.firstChild.nodeValue.trim() === \"\")\n\t\t\t\tcopy.removeChild(copy.firstChild);\n\t\twhile(copy.firstChild)\n\t\t\ttemplate.parentNode.insertBefore(copy.firstChild, template);\n\n\t\treturn;\n\t}\n\n\tstatic #formatTemplateValue(value, format)\n\t{\n\t\treturn(\n\t\t\tformat.length && format === \"f\".repeat(format.length)\n\t\t\t?\n\t\t\t\tvalue.toString(16).padStart(format.length, \"0\")\n\t\t\t:\n\t\t\t\tformat === \"0\".repeat(format.length)\n\t\t\t\t?\n\t\t\t\t\tvalue.toString().padStart(format.length, \"0\")\n\t\t\t\t:\n\t\t\t\t\tvalue.toString()\n\t\t);\n\t}\n\n\tstatic #applyTemplate(context, document)\n\t{\n\t\tlet template = document.getElementsByTagName(\"template\")[0];\n\t\twhile(template)\n\t\t{\n\t\t\tswitch(template.getAttribute(\"type\"))\n\t\t\t{\n\t\t\t\tcase \"repeat\":\n\t\t\t\t\tlet start = parseInt(PathParser.parseValueAttribute(context, template.getAttribute(\"start\"))) || 0;\n\t\t\t\t\tlet stop = parseInt(PathParser.parseValueAttribute(context, template.getAttribute(\"stop\"))) || 0;\n\t\t\t\t\tlet step = parseInt(PathParser.parseValueAttribute(context, template.getAttribute(\"step\"))) || 1;\n\t\t\t\t\tlet columnCount = parseInt(PathParser.parseValueAttribute(context, template.getAttribute(\"column-count\"))) || 0;\n\t\t\t\t\tlet minimum = start < stop ? start : stop;\n\t\t\t\t\tlet maximum = start > stop ? start : stop;\n\t\t\t\t\tlet vMap = template.getAttribute(\"v-map\").split(new RegExp(\"\\\\s*,\\\\s*\", \"g\")).filter(item => item !== \"\").map(item =>\n\t\t\t\t\t{\n\t\t\t\t\t\tlet [range, value] = item.split(new RegExp(\"\\\\s*:\\\\s*\", \"g\"));\n\t\t\t\t\t\trange = range.split(\"-\");\n\t\t\t\t\t\tif(range.length < 2)\n\t\t\t\t\t\t\trange[1] = range[0];\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tif(range.length > 2)\n\t\t\t\t\t\t\t\trange = range.slice(0, 2);\n\t\t\t\t\t\trange = range.map((i, j) => i === \"*\" || i === \"\" ? (j === 0 ? minimum : maximum) : parseInt(i) || 0)\n\n\t\t\t\t\t\treturn({start: range[0], stop: range[1], value: value ?? \"\"});\n\t\t\t\t\t});\n\t\t\t\t\tlet iFormat = template.getAttribute(\"i-format\") ?? \"\";\n\t\t\t\t\tlet vFormat = template.getAttribute(\"v-format\") ?? \"\";\n\t\t\t\t\tlet xFormat = template.getAttribute(\"x-format\") ?? \"\";\n\t\t\t\t\tlet yFormat = template.getAttribute(\"y-format\") ?? \"\";\n\t\t\t\t\tlet y = Math.floor(start / columnCount);\n\t\t\t\t\tlet x = start - (y * columnCount);\n\t\t\t\t\tfor(let index = start; index <= stop; index += step)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet v = vMap.find(item => index >= item.start && index <= item.stop)?.value ?? index;\n\t\t\t\t\t\tTransformer.#insertTemplateContent(template,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"?x?\": Transformer.#formatTemplateValue(x, xFormat),\n\t\t\t\t\t\t\t\"?y?\": Transformer.#formatTemplateValue(y, yFormat),\n\t\t\t\t\t\t\t\"?i?\": Transformer.#formatTemplateValue(index, iFormat),\n\t\t\t\t\t\t\t\"?v?\": Transformer.#formatTemplateValue(v, vFormat)\n\t\t\t\t\t\t});\n\t\t\t\t\t\tx++;\n\t\t\t\t\t\tif(x === columnCount)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\t\ty++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t[\"start\", \"stop\", \"column-count\"].forEach(item =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttemplate.setAttribute(\"d\", );\n\t\t\t\t\t\t})\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttemplate.parentNode.removeChild(template);\n\t\t\ttemplate = document.getElementsByTagName(\"template\")[0];\n\t\t}\n\n\t\treturn;\n\t}\n\n\t#extractIsolated(documentElement, base, list)\n\t{\n\t\tconst path = require('path');\n\n\t\treturn(list.filter(i => i.hasAttribute(\"id\")).map(i =>\n\t\t{\n\t\t\tlet container = documentElement.cloneNode(true);\n\t\t\tlet cursor = container.firstChild;\n\t\t\tlet target = null;\n\t\t\tlet visited = [];\n\t\t\twhile(cursor)\n\t\t\t{\n\t\t\t\tif(cursor.firstChild && !visited.includes(cursor.firstChild))\n\t\t\t\t{\n\t\t\t\t\tcursor = cursor.firstChild;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet nextNode = cursor.nextSibling ?? cursor.parentNode;\n\t\t\t\t\tif(cursor.tagName && cursor.hasAttribute(\"id\"))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet ancestor = cursor;\n\t\t\t\t\t\twhile(ancestor && ancestor.tagName !== \"defs\")\n\t\t\t\t\t\t\tancestor = ancestor.parentNode;\n\t\t\t\t\t\tif(!ancestor)\n\t\t\t\t\t\t\tif(cursor.getAttribute(\"id\") !== i.getAttribute(\"id\") || target !== null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlet parent = cursor.parentNode;\n\t\t\t\t\t\t\t\tif(cursor.previousSibling && !cursor.previousSibling.tagName && cursor.previousSibling.nodeValue.trim() === \"\")\n\t\t\t\t\t\t\t\t\tparent.removeChild(cursor.previousSibling);\n\t\t\t\t\t\t\t\tparent.removeChild(cursor);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(target === null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttarget = cursor;\n\t\t\t\t\t\t\t\t\ttarget.removeAttribute(\"id\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvisited.push(cursor);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tvisited.push(cursor);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tvisited.push(cursor);\n\t\t\t\t\tcursor = nextNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst chain = [];\n\t\t\tif(target)\n\t\t\t{\n\t\t\t\twhile(target && !target.hasAttribute(\"dir\"))\n\t\t\t\t{\n\t\t\t\t\tchain.push(target);\n\t\t\t\t\ttarget = target.parentNode;\n\t\t\t\t}\n\t\t\t\tif(target)\n\t\t\t\t\tif(target.attributes.length === 1 && target.parentNode)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst parent = target.parentNode;\n\t\t\t\t\t\tparent.insertBefore(chain[chain.length - 1], target);\n\t\t\t\t\t\tparent.removeChild(target);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\ttarget.removeAttribute(\"dir\");\n\t\t\t}\n\t\t\telse\n\t\t\t\tcontainer = null;\n\n\t\t\treturn([base + (target ? target.getAttribute(\"dir\") + path.sep : \"\") + i.getAttribute(\"id\") + \".svg\", container]);\n\t\t})).filter(([, node]) => node !== null);\n\t}\n\n\ttransform(configuration)\n\t{\n\t\tlet context =\n\t\t{\n\t\t\tunit: {},\n\t\t\tdepth: 1,\n\t\t\toptimisation:\n\t\t\t{\n\t\t\t\tpath:\n\t\t\t\t{\n\t\t\t\t\tprecision: configuration.precision,\n\t\t\t\t\tcombineCommands: configuration.combinePathCommands /* Don't output h 20 h 20 */\n\t\t\t\t},\n\t\t\t\txml:\n\t\t\t\t{\n\t\t\t\t\tstripWhitespace: configuration.stripWhitespace === \"xml\" || configuration.stripWhitespace === \"all\",\n\t\t\t\t\tstripComments: configuration.stripComments\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthis.#parseIncludeList(configuration);\n\t\tTransformer.#parseMeta(this.document);\n\t\tTransformer.#parseUnitList(context, Array.from(this.document.getElementsByTagName(\"unit\")));\n\t\tfor(let item in configuration.unit)\n\t\t\tcontext.unit[item] = configuration.unit[item];\n\t\tTransformer.#parseSegmentList(context, Array.from(this.document.getElementsByTagName(\"segment\")));\n\t\tTransformer.#applyTemplate(context, this.document);\n\t\tlet list = Array.from(this.document.getElementsByTagName(\"path\"));\n\t\tcontext.depth = 0;\n\t\twhile(list.length)\n\t\t{\n\t\t\tlet item = list.shift();\n\t\t\tlet parser = new PathParser(new TokenStream(item.getAttribute(\"d\")));\n\t\t\tlet pathResult = parser.parse(context);\n\t\t\titem.setAttribute(\"d\", PathParser.resultToString(pathResult, context.optimisation.path.precision))\n\t\t}\n\t\tconst scan =\n\t\t[\n\t\t\t{tagName: \"svg\", attribute: [{name: \"viewBox\", limit: 4}, \"width\", \"height\"]},\n\t\t\t{tagName: \"rect\", attribute: [\"x\", \"y\", \"width\", \"height\", \"rx\", \"ry\"]},\n\t\t\t{tagName: \"circle\", attribute: [\"r\", \"cx\", \"cy\"]},\n\t\t\t{tagName: \"ellipse\", attribute: [\"rx\", \"ry\", \"cx\", \"cy\"]},\n\t\t\t{tagName: \"line\", attribute: [\"x1\", \"y1\", \"x2\", \"y2\"]},\n\t\t\t{tagName: \"image\", attribute: [\"x\", \"y\", \"width\", \"height\"]},\n\t\t\t{tagName: \"pattern\", attribute: [\"width\", \"height\"]},\n\t\t\t{tagName: \"polygon\", attribute: [{name: \"points\", limit: -1}]},\n\t\t\t{tagName: \"polyline\", attribute: [{name: \"points\", limit: -1}]},\n\t\t\t{tagName: \"line\", attribute: [\"x1\", \"y1\", \"x2\", \"y2\"]},\n\t\t\t{tagName: \"textPath\", attribute: [\"startOffset\"]},\n\t\t\t{tagName: \"path\", attribute: [\"stroke-width\"]},\n\t\t\t{tagName: \"image\", attribute: [\"x\", \"y\", \"width\", \"height\"]},\n\t\t\t{tagName: \"marker\", attribute: [\"markerWidth\", \"markerHeight\", \"refX\", \"refY\"]},\n\t\t];\n\t\tscan.forEach(target =>\n\t\t{\n\t\t\tlist = Array.from(this.document.getElementsByTagName(target.tagName));\n\t\t\tcontext.depth = 0;\n\t\t\twhile(list.length)\n\t\t\t{\n\t\t\t\tlet item = list.shift();\n\t\t\t\ttarget.attribute.forEach(attribute =>\n\t\t\t\t{\n\t\t\t\t\tlet attributeName;\n\t\t\t\t\tlet attributeLimit;\n\n\t\t\t\t\tif(typeof(attribute) === \"string\")\n\t\t\t\t\t{\n\t\t\t\t\t\tattributeName = attribute;\n\t\t\t\t\t\tattributeLimit = 1;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tattributeName = attribute.name;\n\t\t\t\t\t\tattributeLimit = attribute.limit;\n\t\t\t\t\t}\n\t\t\t\t\tif(item.hasAttribute(attributeName))\n\t\t\t\t\t\titem.setAttribute(attributeName, PathParser.parseValueAttribute(context, item.getAttribute(attributeName)));\n\n\t\t\t\t\treturn;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\treturn;\n\t\t});\n\t\tlet stack = [];\n\t\tlet cursor = this.document.documentElement.firstChild;\n\t\tlet Node = {COMMENT_NODE: 8, TEXT_NODE: 3};\n\t\twhile(stack.length || cursor)\n\t\t{\n\t\t\tif(cursor.firstChild)\n\t\t\t\tstack.push(cursor.firstChild);\n\t\t\tlet target = cursor;\n\t\t\tif(cursor.nextSibling)\n\t\t\t\tcursor = cursor.nextSibling;\n\t\t\telse\n\t\t\t\tcursor = stack.pop();\n\t\t\tif(context.optimisation.xml.stripWhitespace && target.nodeType === Node.TEXT_NODE && target.nodeValue.replace(new RegExp(\"\\\\s+\", \"g\"), \"\").length === 0)\n\t\t\t\ttarget.parentNode.removeChild(target);\n\t\t\tif(context.optimisation.xml.stripComments && target.nodeType === Node.COMMENT_NODE)\n\t\t\t\ttarget.parentNode.removeChild(target);\n\t\t}\n\t\tif(configuration.extract)\n\t\t{\n\t\t\tconst path = require('path');\n\t\t\tlet base = configuration.destination + path.sep;\n\t\t\tlist = this.#extractIsolated(this.document.documentElement, base, Array.from(this.document.getElementsByTagName(\"*\")));\n\t\t}\n\t\telse\n\t\t\tlist = [[configuration.destination, this.document.documentElement]];\n\n\t\treturn(list.map(([i, j]) => [i, (new (typeof(XMLSerializer) === \"undefined\" ? require(\"xmldom\").XMLSerializer : XMLSerializer)()).serializeToString(j)]));\n\t}\n};\n","import Transformer from \"./class/Transformer\";\nimport PathParser from \"./class/PathParser\";\nimport BigDecimal from \"./class/BigDecimal\";\nimport * as fs from 'fs';\n\n/*\nexport function transform(text, configuration, require)\n{\n\tconsole.log(\"Transforming\"); \n\twindow.PathParser = PathParser;\n\twindow.BigDecimal = BigDecimal;\n\tvar tt = `\n\t<svg>\n\t\t<unit id=\"pp\" value=\"3n\" />\n\t\t<unit id=\"n\" value=\"2\" />\n\t\t<unit id=\"q\" value=\"3n + 4pp((3))\" />\n\t\t<segment id=\"kSegment\" d=\"l 20 0 \" />\n\t\t<segment id=\"kSegment2\" d=\"L 200,100\" />\n\t\t<segment id=\"kSegment3\" d=\"c 20,50 80,-50 100,0\" />\n\t\t<segment id=\"kSegment4\" d=\"a 50,60 30 1 0 100,0\" />\n\t\t<segment id=\"kSegment5\" d=\"l 100,20 l 100,-20 l @400,@400\" />\n\t\t<segment id=\"purple\" d=\"h 5j v 5j h 3n\" />\n\t\t<apath d=\"m 50,50n kSegment kSegment % 90 l -3.2.5 l-20-20 40 40 l 50 0 l 50 50\" />\n\t\t<apath d=\"M 100,100 kSegment2 L 100,100 kSegment2%45 L 300,100\" />\n\t\t<apath d=\"M 100,100 kSegment2%90 M 200,200 kSegment2%90\" />\n\t\t<apath d=\"M 100,100 kSegment3\" />\n\t\t<apath d=\"M 100,300 kSegment3%90\" />\n\t\t<apath d=\"M 100,100 kSegment4\" />\n\t\t<apath d=\"M 100,300 kSegment4%90\" />\n\t\t<apath d=\"M 100,100 kSegment5\" />\n\t\t<apath d=\"M 100,100 kSegment5%30\" />\n\t\t<apath d=\"M 100,100 m 30,30 3kSegment2()%45 3kSegment z\" />\n\t\t<apath d=\"M 100,100 purple(j=5 n=5 #=2)m(49) 50\" />\n\t\t<segment id=\"green\" d=\"h 50 v 50\" />\n\t\t<apath d=\"M 100,100 green%|green|\" />\n\t\t<path d=\"m 50,50 h 30 h 30 h 30\" />\n\t\t<include href=\"somefile.svg#element\" />\n\t</svg>`;\n\ttt = `<svg viewBox=\"0 0 300 300\">\n\t\t<path d=\"m 50,50 Q 50,100 100,100 Q 150,100 150,50 Q 150,0 100,0\" stroke=\"red\" strokewidth=\"3\" />\n\t\t<path d=\"m 50,75 Q 50,125 100,125 T 150,75 T 100,25\" fill=\"transparent\" stroke=\"red\" strokewidth=\"3\" />\n\t</svg>`;\n\treturn((new Transformer(tt)).transform());\n};\n*/\n\n(function() {\n\tlet timeStart = Date.now();\n\tlet parameter = process.argv.slice(2);\n\tlet valid = true;\n\tlet reading = true;\n\tlet whitespaceTypeList = [\"path\", \"xml\", \"all\"];\n\tlet configuration =\n\t{\n\t\tstripWhitespace: null,\n\t\tstripComments: false,\n\t\tcombinePathCommands: false,\n\t\tprecision: 3\n\t};\n\n\twhile(reading && valid && parameter[0] && parameter[0].startsWith(\"--\"))\n\t\tswitch(parameter[0])\n\t\t{\n\t\t\tcase \"--precision\":\n\t\t\t\tconfiguration.precision = parseInt(parameter[1]);\n\t\t\t\tif(configuration.precision.toString() !== parameter[1] || isNaN(configuration.precision))\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"Invalid syntax for --precision switch\");\n\t\t\t\t\tvalid = false;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tparameter = parameter.slice(2);\n\t\t\t\tbreak;\n\t\t\tcase \"--stripWhitespace\":\n\t\t\t\tconfiguration.stripWhitespace = parameter[1];\n\t\t\t\tif(whitespaceTypeList.indexOf(configuration.stripWhitespace) === -1)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"Invalid syntax for --stripWhitespace switch\");\n\t\t\t\t\tvalid = false;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tparameter = parameter.slice(2);\n\t\t\t\tbreak;\n\t\t\tcase \"--stripComments\":\n\t\t\t\tconfiguration.stripComments = true;\n\t\t\t\tparameter.shift();\n\t\t\t\tbreak;\n\t\t\tcase \"--combinePathCommands\":\n\t\t\t\tconfiguration.combinePathCommands = true;\n\t\t\t\tparameter.shift();\n\t\t\t\tbreak;\n\t\t\tcase \"--extract\":\n\t\t\t\tconfiguration.extract = true;\n\t\t\t\tparameter.shift();\n\t\t\t\tbreak;\n\t\t\tcase \"--report\":\n\t\t\t\tconfiguration.report = true;\n\t\t\t\tparameter.shift();\n\t\t\t\tbreak;\n\t\t\tcase \"--\":\n\t\t\t\tparameter.shift();\n\t\t\tdefault:\n\t\t\t\treading = false;\n\t\t\tbreak;\n\t\t}\n\tif(!valid || parameter.length < 2)\n\t{\n\t\tconsole.log(\n`\nUsage: npm start -- [options] <source> <destination> [units...]\n\nsource       An unprocessed SVG file containing Pather commands\ndestination  Desired filename of the processed output\noptions      One or more of the following switches:\n  --precision <n>                   Write numbers to the output with N decimal places. Default is 3\n  --stripWhitespace <path|xml|all>  Strip whitespace from within path data, between XML tags or both (all)\n  --stripComments                   Strip XML comments from the output document\n  --combinePathCommands             Combine repeated commands in path data, e.g. h 30 h 30 becomes h 60\n  --extract                         Extract all elements with an ID to individual files (destination is a directory)\n  --report                          Report information before and after processing a file\nunits        Variable values to be passed to the Pather environment\n             Name/value pairs separated by \"=\", e.g. myUnit=3 myOtherUnit=4.2\n`\n\t\t\t);\n\t}\n\telse\n\t{\n\t\tlet source = parameter.shift();\n\t\tconfiguration.destination = parameter.shift();\n\t\tif(configuration.report)\n\t\t\tconsole.log(`Processing \"${source}\"...`);\n\t\tconfiguration.unit = {};\n\t\treading = true;\n\t\twhile(reading && parameter.length) {\n\t\t\tlet unit = parameter.shift().split(\"=\");\n\t\t\tlet reason;\n\t\t\tswitch(true)\n\t\t\t{\n\t\t\t\tcase unit.length !== 2:\n\t\t\t\t\treason = `Invalid unit format \"${unit.join(\"=\")}\".`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase new RegExp(\"^[bdefgijknopruwxy]|[a-z_$][a-z0-9_$]+$\", \"i\").exec(unit[0]) === null:\n\t\t\t\t\treason = `Invalid unit name \"${unit[0]}\".`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase parseFloat(unit[1]).toString() !== unit[1].substr(0, parseFloat(unit[1]).toString().length) || isNaN(parseFloat(unit[1])) || parseFloat(unit[1]) === Infinity || parseFloat(unit[1]) === -Infinity:\n\t\t\t\t\treason = `Invalid unit value \"${unit[1]}\".`;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(reason)\n\t\t\t{\n\t\t\t\tconsole.log(`${reason} Expected valid identifier followed by a number, e.g. myUnit=3`); \n\t\t\t\treading = false;\n\t\t\t}\n\t\t\telse\n\t\t\t\tconfiguration.unit[unit[0]] = parseFloat(unit[1]);\n\t\t}\n\t\tif(reading)\n\t\t{\n\t\t\t// console.log(configuration);\n\t\t\tconst fs = require('fs');\n\t\t\tconst path = require('path');\n\t\t\tconfiguration.base = path.dirname(source) + path.sep;\n\t\t\tconst data = fs.readFileSync(source, {encoding: \"utf-8\", flag: \"r\"});\n\t\t\tlet t = new Transformer(data);\n\t\t\tlet output = t.transform(configuration);\n\t\t\toutput.forEach(([i, j]) =>\n\t\t\t{\n\t\t\t\tif(!fs.existsSync(path.dirname(i)))\n\t\t\t\t\tfs.mkdirSync(path.dirname(i), { recursive: true });\n\t\t\t\tfs.writeFileSync(i, j, {encoding: \"utf-8\"})\n\n\t\t\t\treturn;\n\t\t\t});\n\t\t\tif(configuration.report)\n\t\t\t\tconsole.log(`Completed successfully in ${Date.now() - timeStart} ms\\n`);\n\t\t}\n\t}\n\n\treturn;\n})();\n"],"names":["Token","static","constructor","type","name","value","position","this","nameOf","Object","entries","filter","key","BigDecimal","BigInt","repeat","LIMIT_PRECISION","RegExp","source","integerPart","decimalPart","VALUE_SHIFT","split","substr","padEnd","charCodeAt","fromBigInt","result","fromBigIntDivision","dividend","divisor","add","other","subtract","multiplyBy","divideBy","equals","valueOf","toNumber","toString","precision","text","Math","max","padStart","length","replace","PATTERN_TRAILING_ZERO","Value","getEmptyResult","stack","sequence","arity","pending","x","y","fixNext","lastAngle","originX","originY","TokenStream","TYPE_NUMBER","expression","handler","TYPE_COMMAND","a","TYPE_X","TYPE_Y","TYPE_THETA","TYPE_FLAG","c","h","l","m","q","s","t","v","z","toLowerCase","TYPE_DELIMITER","TYPE_WHITESPACE","TYPE_IDENTIFIER","TYPE_BRACKET","TYPE_OPERATOR_ADD","TYPE_OPERATOR_MULTIPLY","TYPE_OPERATOR_SUBTRACT","TYPE_OPERATOR_DIVIDE","TYPE_OPERATOR_ROTATE","TYPE_OPERATOR_SKEW_HORIZONTAL","TYPE_OPERATOR_SKEW_VERTICAL","TYPE_OPERATOR_REVERSE_ORDER","TYPE_OPERATOR_FIX","TYPE_OPERATOR_MEASURE","TYPE_OPERATOR_ASSIGN","TYPE_OPERATOR_REPEAT","data","cursor","chainIndex","streamIndex","match","item","PRIORITY","exec","push","SyntaxError","TYPE_END","getCurrent","getNext","peekNext","reset","Distortion","getName","OPERATION_ROTATE","OPERATION_SKEW_HORIZONTAL","OPERATION_SKEW_VERTICAL","OPERATION_REVERSE_ORDER","run","x0","y0","x1","y1","distortionValue","cosine","sine","PI","cos","sin","abs","Number","EPSILON","tan","runStack","distortionStack","reduceRight","carry","fixPoint","point","relative","topX","topY","fixed","applyDistortion","context","top","origin","command","point1","point2","last","atan2","optimisation","path","combineCommands","sequnce","pop","toUpperCase","reverseList","splice","PathParser","stream","resultToString","map","i","slice","join","parseValueAttribute","pathResult","parseList","limit","state","current","reading","index","expResult","ExpressionParser","parse","TYPE_UNIT","accumulator","argumentList","invoked","next","forEach","segment","parseInvocation","concat","Error","indexOf","debug","formatOperation","operation","unwind","start","leftValue","OPERATION_EVALUATE","console","log","j","OPERATION_MULTIPLY","OPERATION_DIVIDE","OPERATION_ADD","OPERATION_SUBTRACT","depth","insideArgumentList","additionalTerminatorList","base","counter","unit","ReferenceError","includes","inner","hasCount","hasArgumentList","count","delimited","parseInt","ExtendedDOM","node","undefined","extractChildren","element","clean","typeof","firstChild","removeChild","parentNode","insertBefore","remove","previousSibling","Transformer","document","parseXML","require","DOMParser","parseFromString","parseMeta","defined","Array","from","getElementsByTagName","getAttribute","parseFloat","parseUnitList","list","shift","tagName","nodeValue","trim","parser","id","except","message","cause","parseSegmentList","reduce","previous","parseIncludeList","configuration","seen","href","filename","readFileSync","encoding","flag","target","getElementById","documentElement","nodeName","child","nextSibling","insertTemplateContent","template","replacement","copy","cloneNode","attributes","attribute","replaceKey","replaceValue","replaceAll","formatTemplateValue","format","applyTemplate","stop","step","columnCount","minimum","maximum","vMap","range","iFormat","vFormat","xFormat","yFormat","floor","find","Be","Fe","Ve","qe","setAttribute","extractIsolated","hasAttribute","container","visited","nextNode","ancestor","parent","removeAttribute","chain","sep","transform","combinePathCommands","xml","stripWhitespace","stripComments","attributeName","Node","nodeType","extract","destination","XMLSerializer","serializeToString","timeStart","Date","now","parameter","process","argv","valid","whitespaceTypeList","startsWith","isNaN","report","reason","Infinity","fs","dirname","existsSync","mkdirSync","recursive","writeFileSync"],"mappings":"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"}