{"version":3,"file":"pather.min.js","sources":["../source/class/Token.js","../source/class/BigDecimal.js","../source/class/Value.js","../source/class/TokenStream.js","../source/class/Distortion.js","../source/class/PathParser.js","../source/class/ExpressionParser.js","../source/class/ExtendedDOM.js","../source/class/Transformer.js","../source/main.js"],"sourcesContent":["export default class Token\n{\n    static TYPE_NUMBER                    = 1;\n    static TYPE_COMMAND                   = 2;\n    static TYPE_DELIMITER                 = 3;\n    static TYPE_WHITESPACE                = 4;\n    static TYPE_IDENTIFIER                = 5;\n    static TYPE_BRACKET                   = 6;\n    static TYPE_END                       = 7;\n    static TYPE_OPERATOR_ADD              = 8;\n    static TYPE_OPERATOR_SUBTRACT         = 9;\n    static TYPE_OPERATOR_MULTIPLY         = 10;\n    static TYPE_OPERATOR_DIVIDE           = 11;\n    static TYPE_OPERATOR_ROTATE           = 12;\n    static TYPE_OPERATOR_SKEW_HORIZONTAL  = 13;\n    static TYPE_OPERATOR_SKEW_VERTICAL    = 14;\n    static TYPE_OPERATOR_REVERSE_ORDER    = 15;\n    static TYPE_OPERATOR_FIX              = 16;\n    static TYPE_OPERATOR_MEASURE          = 17;\n    static TYPE_OPERATOR_ASSIGN           = 18;\n    static TYPE_OPERATOR_REPEAT           = 19;\n\n    constructor(type, name, value, position)\n    {\n        this.type = type;\n        this.name = name;\n        this.value = value;\n        this.position = position;\n    }\n\n    static nameOf(type)\n    {\n        return(Object.entries(Token).filter(([key, value]) => value === type)[0][0]);\n    }\n};\n","export default class BigDecimal\n{\n    static LIMIT_PRECISION         = 18;\n    static PI                      = new BigDecimal(\"3.141592653589793238\");\n    static ZERO                    = new BigDecimal(\"0\");\n    static #VALUE_SHIFT            = BigInt(\"1\" + \"0\".repeat(BigDecimal.LIMIT_PRECISION));\n    static #PATTERN_TRAILING_ZERO  = new RegExp(\"\\\\.?0+$\");\n\n    #value;\n\n    constructor(source = 0)\n\t{\n\t\tlet integerPart;\n\t\tlet decimalPart;\n\n\t\tif(source instanceof BigDecimal)\n            this.#value = source.#value;\n\t\telse\n            if(source instanceof BigInt)\n                this.#value = value * BigDecimal.#VALUE_SHIFT;\n            else\n            {\n                [integerPart, decimalPart] = (source + \".\").split(\".\");\n                this.#value = BigInt(integerPart + decimalPart.substr(0, BigDecimal.LIMIT_PRECISION).padEnd(BigDecimal.LIMIT_PRECISION, \"0\"));\n                if(decimalPart.charCodeAt(BigDecimal.LIMIT_PRECISION) > 52)\n                    this.#value++;\n            }\n\n\t\treturn;\n    }\n\n    #fromBigInt(source)\n    {\n        let result;\n\n        result = new BigDecimal(this);\n        result.#value = source;\n\n        return(result);\n    }\n\n    #fromBigIntDivision(dividend, divisor)\n    {\n        return(this.#fromBigInt(dividend / divisor + dividend * 2n / divisor % 2n));\n    }\n\n    add(other)\n    {\n        return(this.#fromBigInt(this.#value + new BigDecimal(other).#value));\n    }\n\n    subtract(other)\n    {\n        return(this.#fromBigInt(this.#value - new BigDecimal(other).#value));\n    }\n\n    multiplyBy(other)\n    {\n        return(this.#fromBigIntDivision(this.#value * new BigDecimal(other).#value, BigDecimal.#VALUE_SHIFT));\n    }\n\n    divideBy(other)\n    {\n        return(this.#fromBigIntDivision(this.#value * BigDecimal.#VALUE_SHIFT, new BigDecimal(other).#value));\n    }\n\n    equals(other)\n    {\n        return(this.valueOf() == other);\n    }\n\n    valueOf()\n    {\n        return(this.#value);\n    }\n\n    toNumber()\n    {\n        return(+this.toString());\n    }\n\n    toString(precision = BigDecimal.LIMIT_PRECISION)\n    {\n        let text;\n\n        text = this.#fromBigIntDivision(this.#value, BigInt(\"1\" + \"0\".repeat(precision > -1 ? Math.max(BigDecimal.LIMIT_PRECISION - precision, 0) : BigDecimal.LIMIT_PRECISION))).#value.toString();\n        if(text.startsWith(\"-\"))\n            text = \"-\" + text.substr(1).padStart(precision + 1, \"0\");\n        else\n            text = text.padStart(precision + 1, \"0\");\n\n        return(text.substr(0, text.length - precision) + (\".\" + text.substr(-precision)).replace(BigDecimal.#PATTERN_TRAILING_ZERO, \"\"));\n    }\n}\n","import BigDecimal from \"./BigDecimal\";\n\nexport default class Value\n{\n\tstatic TYPE_X        = 1;\n\tstatic TYPE_Y        = 2;\n\tstatic TYPE_THETA    = 3;\n\tstatic TYPE_FLAG     = 4;\n\tstatic TYPE_UNIT     = 5;\n\n\tstatic getEmptyResult()\n\t{\n\t\treturn(\n\t\t{\n\t\t\tstack: [],\n\t\t\tsequence: [],\n\t\t\tarity: null,\n\t\t\tpending: 0,\n\t\t\tx: BigDecimal.ZERO,\n\t\t\ty: BigDecimal.ZERO,\n\t\t\tfixNext: false,\n\t\t\tlastAngle: null,\n\t\t\toriginX: BigDecimal.ZERO,\n\t\t\toriginY: BigDecimal.ZERO\n\t\t});\n\t}\n};\n","import Token from \"./Token\";\nimport BigDecimal from \"./BigDecimal\";\nimport Value from \"./Value\";\n\nexport default class TokenStream\n{\n    static #PRIORITY =\n    [\n        {\n            type: Token.TYPE_NUMBER,\n            expression: new RegExp(\"^[0-9]*\\\\.?[0-9]+\", \"\"),\n            handler: value => new BigDecimal(value)\n        },\n        {\n            type: Token.TYPE_COMMAND,\n            expression: new RegExp(\"^[achlmqstvz](?![a-z_$])\", \"i\"),\n            handler: value => (\n            {\n                \"a\":\n                [\n                    Value.TYPE_X,\n                    Value.TYPE_Y,\n                    Value.TYPE_THETA,\n                    Value.TYPE_FLAG,\n                    Value.TYPE_FLAG,\n                    Value.TYPE_X,\n                    Value.TYPE_Y\n                ],\n                \"c\":\n                [\n                    Value.TYPE_X,\n                    Value.TYPE_Y,\n                    Value.TYPE_X,\n                    Value.TYPE_Y,\n                    Value.TYPE_X,\n                    Value.TYPE_Y\n                ],\n                \"h\":\n                [\n                    Value.TYPE_X\n                ],\n                \"l\":\n                [\n                    Value.TYPE_X,\n                    Value.TYPE_Y\n                ],\n                \"m\":\n                [\n                    Value.TYPE_X,\n                    Value.TYPE_Y\n                ],\n                \"q\":\n                [\n                    Value.TYPE_X,\n                    Value.TYPE_Y,\n                    Value.TYPE_X,\n                    Value.TYPE_Y\n                ],\n                \"s\":\n                [\n                    Value.TYPE_X,\n                    Value.TYPE_Y,\n                    Value.TYPE_X,\n                    Value.TYPE_Y\n                ],\n                \"t\":\n                [\n                    Value.TYPE_X,\n                    Value.TYPE_Y\n                ],\n                \"v\":\n                [\n                    Value.TYPE_Y\n                ],\n                \"z\":\n                [\n                ]\n            }[value.toLowerCase()])\n        },\n        {\n            type: Token.TYPE_DELIMITER,\n            expression: new RegExp(\"^,+\", \"\"),\n            handler: () => null\n        },\n        {\n            type: Token.TYPE_WHITESPACE,\n            expression: new RegExp(\"^\\\\s+\", \"\"),\n            handler: () => null\n        },\n        {\n            type: Token.TYPE_IDENTIFIER,\n            expression: new RegExp(\"^[a-z_$][a-z0-9_$]*\", \"i\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_BRACKET,\n            expression: new RegExp(\"^[()]\", \"\"),\n            handler: value => value === \"(\"\n        },\n        {\n            type: Token.TYPE_OPERATOR_ADD,\n            expression: new RegExp(\"^\\\\+\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_MULTIPLY,\n            expression: new RegExp(\"^\\\\*\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_SUBTRACT,\n            expression: new RegExp(\"^-\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_DIVIDE,\n            expression: new RegExp(\"^/\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_ROTATE,\n            expression: new RegExp(\"^%r\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_SKEW_HORIZONTAL,\n            expression: new RegExp(\"^%h\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_SKEW_VERTICAL,\n            expression: new RegExp(\"^%v\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_REVERSE_ORDER,\n            expression: new RegExp(\"^%o\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_FIX,\n            expression: new RegExp(\"^@\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_MEASURE,\n            expression: new RegExp(\"^\\\\|\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_ASSIGN,\n            expression: new RegExp(\"^=\", \"\"),\n            handler: value => value\n        },\n        {\n            type: Token.TYPE_OPERATOR_REPEAT,\n            expression: new RegExp(\"^#\", \"\"),\n            handler: value => value\n        }\n    ];\n\n    #data = null;\n    #cursor = 0;\n\n    constructor(text)\n    {\n        var chainIndex;\n        var streamIndex;\n        var match;\n        var item;\n\n        this.#data = [];\n        streamIndex = 0;\n        while(text.length)\n        {\n            for(chainIndex = 0; chainIndex < TokenStream.#PRIORITY.length; chainIndex++)\n            {\n                item = TokenStream.#PRIORITY[chainIndex];\n                match = item.expression.exec(text);\n                if(match)\n                {\n                    this.#data.push(new Token(item.type, match[0], item.handler(match[0]), streamIndex));\n                    streamIndex += match[0].length;\n                    text = text.substr(match[0].length);\n                    break;\n                }\n            }\n            if(chainIndex === TokenStream.#PRIORITY.length)\n\t\t\t\tthrow(new SyntaxError(`Unexpected symbol \"${text.substr(0, 1)}\" at column ${streamIndex}`));\n        }\n        this.#data.push(new Token(Token.TYPE_END, null, null, streamIndex));\n    }\n\n    getCurrent()\n    {\n        return(this.#data[this.#cursor] ?? null);\n    }\n\n    getNext()\n    {\n        this.#cursor++;\n\n        return(this.getCurrent());\n    }\n\n    peekNext()\n    {\n        return(this.#data[this.#cursor + 1] ?? null);\n    }\n\n    reset()\n    {\n        this.#cursor = 0;\n\n        return(this.getCurrent());\n    }\n};\n","import BigDecimal from \"./BigDecimal\";\r\n\r\nexport default class Distortion\r\n{\r\n\tstatic OPERATION_ROTATE = 1;\r\n\tstatic OPERATION_SKEW_HORIZONTAL = 2;\r\n\tstatic OPERATION_SKEW_VERTICAL = 3;\r\n\tstatic OPERATION_REVERSE_ORDER = 4;\r\n\r\n\tconstructor(type, value)\r\n\t{\r\n\t\tthis.type = type;\r\n\t\tthis.value = value;\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\t#getName()\r\n\t{\r\n\t\treturn(\r\n\t\t({\r\n\t\t\t[Distortion.OPERATION_ROTATE]: \"Rotate\",\r\n\t\t\t[Distortion.OPERATION_SKEW_HORIZONTAL]: \"Vertical skew\",\r\n\t\t\t[Distortion.OPERATION_SKEW_VERTICAL]: \"Horizontal skew\",\r\n\t\t\t[Distortion.OPERATION_REVERSE_ORDER]: \"Reverse order\"\r\n\t\t})[this.type] ?? \"Unknown\");\r\n\t}\r\n\r\n\ttoString()\r\n\t{\r\n\t\treturn(`${this.#getName()}: ${this.value}`);\r\n\t}\r\n\r\n\trun(x0, y0, x1, y1)\r\n\t{\r\n\t\tlet result;\r\n\t\tlet distortionValue;\r\n\r\n\t\tswitch(this.type)\r\n\t\t{\r\n\t\t\tcase Distortion.OPERATION_ROTATE:\r\n\t\t\t\tlet cosine;\r\n\t\t\t\tlet sine;\r\n\t\t\r\n\t\t\t\tx1 = x1.subtract(x0);\r\n\t\t\t\ty1 = y1.subtract(y0);\r\n\t\t\t\tdistortionValue = (this.value.toNumber() % 360) * Math.PI / 180;\r\n\t\t\t\tcosine = Math.cos(distortionValue);\r\n\t\t\t\tsine = Math.sin(distortionValue);\r\n\t\t\t\tif(Math.abs(cosine - sine) < Number.EPSILON * 2)\r\n\t\t\t\t\tsine = cosine;\r\n\t\t\t\telse\r\n\t\t\t\t\tif(Math.abs(cosine + sine) < Number.EPSILON * 2)\r\n\t\t\t\t\t\tcosine = sine;\r\n\t\t\t\tif(Math.abs(cosine) < Number.EPSILON)\r\n\t\t\t\t\tcosine = 0;\r\n\t\t\t\tif(Math.abs(sine) < Number.EPSILON)\r\n\t\t\t\t\tsine = 0;\r\n\t\t\t\r\n\t\t\t\tresult =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: x0.add(x1.multiplyBy(cosine)).subtract(y1.multiplyBy(sine)),\r\n\t\t\t\t\ty: y0.add(y1.multiplyBy(cosine)).add(x1.multiplyBy(sine))\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\tcase Distortion.OPERATION_SKEW_HORIZONTAL:\r\n\t\t\t\tresult =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: x0.add(x1.subtract(x0).subtract(y1.multiplyBy(Math.tan((this.value.toNumber() % 360) * Math.PI / 180)))),\r\n\t\t\t\t\ty: y1\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\tcase Distortion.OPERATION_SKEW_VERTICAL:\r\n\t\t\t\tresult =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: x1,\r\n\t\t\t\t\ty: y0.add(y1.subtract(y0).subtract(x1.multiplyBy(Math.tan((distortionValue.toNumber() % 360) * Math.PI / 180))))\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\tcase Distortion.OPERATION_REVERSE_ORDER:\r\n\t\t\t\tresult =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: x1,\r\n\t\t\t\t\ty: y1\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn(result);\r\n\t}\r\n\r\n\tstatic runStack(x0, y0, x1, y1, distortionStack)\r\n\t{\r\n\t\treturn(distortionStack.reduceRight((carry, item) => item.run(x0, y0, carry.x, carry.y), {x: x1, y: y1}));\r\n\t}\r\n\r\n\tstatic #fixPoint(point, relative, topX, topY, result)\r\n\t{\r\n\t\tif(topX.fixed)\r\n\t\t\tpoint.x = relative ? topX.value.subtract(result.x) : topX.value;\r\n\t\tif(topY.fixed)\r\n\t\t\tpoint.y = relative ? topY.value.subtract(result.y) : topY.value;\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tstatic applyDistortion(context, top, result, distortionStack)\r\n\t{\r\n\t\tlet origin;\r\n\t\tlet point;\r\n\t\tlet command;\r\n\t\tlet relative;\r\n\t\tlet point1;\r\n\t\tlet point2;\r\n\t\tlet last;\r\n\t\tlet lastAngle;\r\n\r\n\t\tcommand = top[0].toLowerCase();\r\n\t\trelative = top[0].toLowerCase() === top[0];\r\n\t\torigin =\r\n\t\t{\r\n\t\t\tx: relative ? BigDecimal.ZERO : result.x,\r\n\t\t\ty: relative ? BigDecimal.ZERO : result.y\r\n\t\t}\r\n\t\tif(result.pending)\r\n\t\t\tthrow(new SyntaxError(`Too few arguments for command ${top[0]}`));\r\n\t\tif(result.fixNext)\r\n\t\t\tthrow(new SyntaxError(`Dangling fix operator after command ${top[0]}`));\r\n\t\t// TODO: Eventually, all values will need to be rounded just beyond this point\r\n\t\tswitch(command)\r\n\t\t{\r\n\t\t\tcase \"a\":\r\n\t\t\t\tpoint =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: top[6].value,\r\n\t\t\t\t\ty: top[7].value\r\n\t\t\t\t};\r\n\t\t\t\tif(distortionStack.length)\r\n\t\t\t\t\tpoint = Distortion.runStack(origin.x, origin.y, point.x, point.y, distortionStack);\r\n\t\t\t\tDistortion.#fixPoint(point, relative, top[6], top[7], result);\r\n\t\t\t\ttop =\r\n\t\t\t\t[\r\n\t\t\t\t\ttop[0],\r\n\t\t\t\t\ttop[1].value,\r\n\t\t\t\t\ttop[2].value,\r\n\t\t\t\t\ttop[3].fixed ? top[3].value : distortionStack.reduceRight((carry, item) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn(item.type === Distortion.OPERATION_ROTATE ? carry.add(item.value) : carry);\r\n\t\t\t\t\t}, top[3].value),\r\n\t\t\t\t\ttop[4].value,\r\n\t\t\t\t\ttop[5].value,\r\n\t\t\t\t\tpoint.x,\r\n\t\t\t\t\tpoint.y\r\n\t\t\t\t];\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"c\":\r\n\t\t\t\tpoint1 =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: top[1].value,\r\n\t\t\t\t\ty: top[2].value\r\n\t\t\t\t};\r\n\t\t\t\tpoint2 =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: top[3].value,\r\n\t\t\t\t\ty: top[4].value\r\n\t\t\t\t};\r\n\t\t\t\tpoint =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: top[5].value,\r\n\t\t\t\t\ty: top[6].value\r\n\t\t\t\t};\r\n\t\t\t\tif(distortionStack.length)\r\n\t\t\t\t{\r\n\t\t\t\t\tpoint1 = Distortion.runStack(origin.x, origin.y, point1.x, point1.y, distortionStack);\r\n\t\t\t\t\tpoint2 = Distortion.runStack(origin.x, origin.y, point2.x, point2.y, distortionStack);\r\n\t\t\t\t\tpoint = Distortion.runStack(origin.x, origin.y, point.x, point.y, distortionStack);\r\n\t\t\t\t}\r\n\t\t\t\tDistortion.#fixPoint(point, relative, top[5], top[6], result);\r\n\t\t\t\ttop =\r\n\t\t\t\t[\r\n\t\t\t\t\ttop[0],\r\n\t\t\t\t\ttop[1].fixed ? (relative ? top[1].value.subtract(result.x) : top[1].value) : point1.x,\r\n\t\t\t\t\ttop[2].fixed ? (relative ? top[2].value.subtract(result.y) : top[2].value) : point1.y,\r\n\t\t\t\t\ttop[3].fixed ? (relative ? top[3].value.subtract(result.x) : top[3].value) : point2.x,\r\n\t\t\t\t\ttop[4].fixed ? (relative ? top[4].value.subtract(result.y) : top[4].value) : point2.y,\r\n\t\t\t\t\tpoint.x,\r\n\t\t\t\t\tpoint.y\r\n\t\t\t\t];\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"s\":\r\n\t\t\tcase \"q\":\r\n\t\t\t\tpoint1 =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: top[1].value,\r\n\t\t\t\t\ty: top[2].value\r\n\t\t\t\t};\r\n\t\t\t\tpoint =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: top[3].value,\r\n\t\t\t\t\ty: top[4].value\r\n\t\t\t\t};\r\n\t\t\t\tif(distortionStack.length)\r\n\t\t\t\t{\r\n\t\t\t\t\tpoint1 = Distortion.runStack(origin.x, origin.y, point1.x, point1.y, distortionStack);\r\n\t\t\t\t\tpoint = Distortion.runStack(origin.x, origin.y, point.x, point.y, distortionStack);\r\n\t\t\t\t}\r\n\t\t\t\tDistortion.#fixPoint(point, relative, top[3], top[4], result);\r\n\t\t\t\ttop =\r\n\t\t\t\t[\r\n\t\t\t\t\ttop[0],\r\n\t\t\t\t\tpoint1.x,\r\n\t\t\t\t\tpoint1.y,\r\n\t\t\t\t\tpoint.x,\r\n\t\t\t\t\tpoint.y\r\n\t\t\t\t];\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"l\":\r\n\t\t\tcase \"h\":\r\n\t\t\tcase \"v\":\r\n\t\t\t\tlet topX = command === \"v\" ? {value: origin.x, fixed: top[1].fixed} : top[1];\r\n\t\t\t\tlet topY = command === \"h\" ? {value: origin.y, fixed: top[1].fixed} : (command === \"v\" ? top[1] : top[2]);\r\n\t\t\t\tpoint =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: topX.value,\r\n\t\t\t\t\ty: topY.value\r\n\t\t\t\t};\r\n\t\t\t\tif(distortionStack.length)\r\n\t\t\t\t\tpoint = Distortion.runStack(origin.x, origin.y, point.x, point.y, distortionStack);\r\n\t\t\t\tlastAngle = Math.atan2(point.y.subtract(origin.y).toNumber(), point.x.subtract(origin.x).toNumber()) * 180 / Math.PI;\r\n\t\t\t\tDistortion.#fixPoint(point, relative, topX, topY, result);\r\n\t\t\t\ttop = point.x.equals(origin.x)\r\n\t\t\t\t\t?\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tpoint.y.equals(origin.y)\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t[\"v\", point.y]\r\n\t\t\t\t\t)\r\n\t\t\t\t\t:\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tpoint.y.equals(origin.y)\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\t[\"h\", point.x]\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t[\"l\", point.x, point.y]\r\n\t\t\t\t\t);\r\n\t\t\t\tif(top)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(context.optimisation.path.combineCommands && result.sequence.length > 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlast = result.sequence[result.sequence.length - 1];\r\n\t\t\t\t\t\tif(last[0].toLowerCase() === top[0].toLowerCase() && lastAngle === result.lastAngle)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif(relative)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif(last.length > 2)\r\n\t\t\t\t\t\t\t\t\tlast[2] = last[2].add(top[2]);\r\n\t\t\t\t\t\t\t\tlast[1] = last[1].add(top[1]);\r\n\t\t\t\t\t\t\t\ttop = null;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tresult.sequnce.pop();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresult.lastAngle = lastAngle;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"m\":\r\n\t\t\tcase \"t\":\r\n\t\t\t\tpoint =\r\n\t\t\t\t{\r\n\t\t\t\t\tx: top[1].value,\r\n\t\t\t\t\ty: top[2].value\r\n\t\t\t\t}\r\n\t\t\t\tif(distortionStack.length)\r\n\t\t\t\t\tpoint = Distortion.runStack(origin.x, origin.y, point.x, point.y, distortionStack);\r\n\t\t\t\tDistortion.#fixPoint(point, relative, top[1], top[2], result);\r\n\t\t\t\ttop = [top[0], point.x, point.y];\r\n\t\t\t\tif(context.optimisation.path.combineCommands && command === \"m\" && result.sequence.length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tlast = result.sequence[result.sequence.length - 1];\r\n\t\t\t\t\tif(last[0].toLowerCase() === \"m\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(relative)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlast[1] = last[1].add(top[1]);\r\n\t\t\t\t\t\t\tlast[2] = last[2].add(top[2]);\r\n\t\t\t\t\t\t\ttop = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tresult.sequnce.pop();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"z\":\r\n\t\t\t\ttop = [\"z\"];\r\n\t\t\t\tresult.x = result.originX;\r\n\t\t\t\tresult.y = result.originY;\r\n\t\t\t\tresult.lastAngle = null;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tif(command !== \"z\")\r\n\t\t{\r\n\t\t\tresult.x = relative ? result.x.add(point.x) : point.x;\r\n\t\t\tresult.y = relative ? result.y.add(point.y) : point.y;\r\n\t\t}\r\n\t\tif(command === \"m\")\r\n\t\t{\r\n\t\t\tresult.originX = result.x;\r\n\t\t\tresult.originY = result.y;\r\n\t\t}\r\n\t\tif(top)\r\n\t\t{\r\n\t\t\tif(!relative)\r\n\t\t\t\ttop[0] = top[0].toUpperCase();\r\n\t\t\t/* TODO: Primitive optimiser someday? */\r\n\t\t\tconst reverseList = distortionStack.filter(item => item.type === Distortion.OPERATION_REVERSE_ORDER);\r\n\t\t\tif(reverseList.length % 2)\r\n\t\t\t\tresult.sequence.splice(reverseList[0].value.toNumber(), 0, top);\r\n\t\t\telse\r\n\t\t\t\tresult.sequence.push(top);\r\n\t\t}\r\n\r\n\t\treturn;\r\n\t}\r\n}\r\n","import ExpressionParser from \"./ExpressionParser\";\nimport Token from \"./Token\";\nimport TokenStream from \"./TokenStream\";\nimport BigDecimal from \"./BigDecimal\";\nimport Value from \"./Value\";\nimport Distortion from \"./Distortion\";\n\nexport default class PathParser\n{\n\tconstructor(stream)\n\t{\n\t\tthis.stream = stream;\n\n\t\treturn;\n\t}\n\n\tstatic resultToString(result, precision = BigDecimal.LIMIT_PRECISION)\n\t{\n\t\treturn(result.sequence.map(i => \"\" + i[0].toString() + (i.length > 1 ? \" \" + i.slice(1).join(\",\") : \"\")).join(\" \"));\n\t}\n\n\tstatic parseValueAttribute(context, text)\n\t{\n\t\tlet parser = new PathParser(new TokenStream(text));\n\t\tlet pathResult = parser.parseList(context);\n\n\t\treturn(PathParser.resultToString(pathResult, context.optimisation.path.precision));\n\t}\n\n\tparseList(context, result = Value.getEmptyResult(), limit = -1)\n\t{\n\t\tlet state;\n\t\tlet top;\n\n\t\tstate =\n\t\t{\n\t\t\tcurrent: this.stream.getCurrent(),\n\t\t\treading: true,\n\t\t\tindex: 0\n\t\t};\n\t\ttop = [];\n\n\t\twhile(state.reading && state.current && (state.index < limit || limit === -1))\n\t\t{\n\t\t\tswitch(state.current.type)\n\t\t\t{\n\t\t\t\tcase Token.TYPE_WHITESPACE:\n\t\t\t\tcase Token.TYPE_DELIMITER:\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_END:\n\t\t\t\t\tstate.reading = false;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet expResult = new ExpressionParser(this.stream).parse(context, 0, [], false, {x: result.x, y: result.y}, Value.TYPE_UNIT);\n\t\t\t\t\tresult.sequence.push([expResult.accumulator]);\n\t\t\t\t\tresult.index++;\n\t\t\t\t\tstate.current = this.stream.getCurrent();\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tstate.current = this.stream.getNext();\n\t\t}\n\n\t\treturn(result);\n\t}\n\n\tparse(context, result = Value.getEmptyResult(), distortionStack = [], index = 1, argumentList)\n\t{\n\t\tlet state;\n\t\tlet top;\n\t\tlet invoked;\n\t\tlet next;\n\n\t\tstate =\n\t\t{\n\t\t\tcurrent: this.stream.getCurrent(),\n\t\t\treading: true\n\t\t};\n\t\tdistortionStack.forEach(item =>\n\t\t{\n\t\t\tif(item.type === Distortion.OPERATION_REVERSE_ORDER)\n\t\t\t\titem.value = new BigDecimal(result.sequence.length);\n\n\t\t\treturn;\n\t\t});\n\n\t\twhile(state.reading && state.current)\n\t\t{\n\t\t\tswitch(state.current.type)\n\t\t\t{\n\t\t\t\tcase Token.TYPE_COMMAND:\n\t\t\t\t\tif(result.arity === null && state.current.name.toLowerCase() !== \"m\")\n\t\t\t\t\t\tthrow(new SyntaxError(\"Paths must begin with a Move To command\"));\n\t\t\t\t\tif(top)\n\t\t\t\t\t\tDistortion.applyDistortion(context, top, result, distortionStack);\n\t\t\t\t\tresult.arity = state.current.value;\n\t\t\t\t\tresult.pending = result.arity.length;\n\t\t\t\t\ttop = [state.current.name];\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_OPERATOR_FIX:\n\t\t\t\t\tresult.fixNext = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_WHITESPACE:\n\t\t\t\tcase Token.TYPE_DELIMITER:\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_END:\n\t\t\t\t\tif(top)\n\t\t\t\t\t\tDistortion.applyDistortion(context, top, result, distortionStack);\n\t\t\t\t\tstate.reading = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_IDENTIFIER:\n\t\t\t\tcase Token.TYPE_NUMBER:\n\t\t\t\t\tif(state.current.type === Token.TYPE_NUMBER)\n\t\t\t\t\t{\n\t\t\t\t\t\tnext = this.stream.peekNext();\n\t\t\t\t\t\tinvoked = next.type === Token.TYPE_IDENTIFIER && context.segment[next.name];\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tinvoked = context.segment[state.current.name];\n\t\t\t\t\tif(![false, null, undefined].includes(invoked))\n\t\t\t\t\t{\n\t\t\t\t\t\tif(top)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tDistortion.applyDistortion(context, top, result, distortionStack);\n\t\t\t\t\t\t\ttop = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnew ExpressionParser(this.stream).parseInvocation(context, result, argumentList, distortionStack.concat());\n\t\t\t\t\t\tstate.current = this.stream.getCurrent();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tif(!top)\n\t\t\t\t\t\tthrow(new Error(`Expected command, but found \"${state.current.name}\"`));\n\t\t\t\t\tif(!result.pending)\n\t\t\t\t\t{\n\t\t\t\t\t\tDistortion.applyDistortion(context, top, result, distortionStack);\n\t\t\t\t\t\tresult.pending = result.arity.length;\n\t\t\t\t\t\ttop = [top[0]];\n\t\t\t\t\t}\n\t\t\t\t\tif(!result.pending)\n\t\t\t\t\t\tthrow(new SyntaxError(`Too many parameters supplied to command \"${top[0]}\"`));\n\t\t\t\t\tif(top[0].toLowerCase() === \"a\" && (result.pending === 4 || result.pending === 3) && state.current.type === Token.TYPE_NUMBER && state.current.name.length > 1 && [\"0\", \"1\"].indexOf(state.current.name.substr(0, 1)) !== -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttop.push({fixed: result.fixNext, value: new BigDecimal(state.current.name.substr(0, 1))});\n\t\t\t\t\t\tstate.current.name = state.current.name.substr(1);\n\t\t\t\t\t\tstate.current.value = new BigDecimal(state.current.name);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif(state.current.type === Token.TYPE_NUMBER)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnext = this.stream.peekNext();\n\t\t\t\t\t\t\tinvoked = next.type === Token.TYPE_IDENTIFIER ? context.segment[next.name] : null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tinvoked = context.segment[state.current.name];\n\t\t\t\t\t\tif(invoked == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet expResult = new ExpressionParser(this.stream).parse(context, 0, argumentList, false, {x: result.x, y: result.y}, result.arity[result.arity.length - result.pending]);\n\t\t\t\t\t\t\ttop.push({fixed: result.fixNext, value: expResult.accumulator});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tresult.fixNext = false;\n\t\t\t\t\tresult.pending--;\n\t\t\t\t\tstate.current = this.stream.getCurrent();\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tstate.current = this.stream.getNext();\n\t\t}\n\n\t\treturn(result);\n\t}\n}\n","import TokenStream from \"./TokenStream\";\nimport Token from \"./Token\";\nimport BigDecimal from \"./BigDecimal\";\nimport Value from \"./Value\";\nimport PathParser from \"./PathParser\";\nimport Distortion from \"./Distortion\";\n\nexport default class ExpressionParser\n{\n    static #OPERATION_EVALUATE  = 1;\n    static #OPERATION_ADD       = 2;\n    static #OPERATION_SUBTRACT  = 3;\n    static #OPERATION_MULTIPLY  = 4;\n    static #OPERATION_DIVIDE    = 5;\n\n    constructor(stream)\n    {\n        this.stream = stream;\n\t\tthis.debug = false;\n    }\n\n    static #formatOperation(operation)\n    {\n\t\treturn(operation.value.toString() + \" \" + [\"\", \"=\", \"+\", \"-\", \"*\", \"/\"][operation.operation]);\n\t}\n\n    #unwind(result, limit)\n    {\n\t\tvar start;\n\t\tvar index;\n\t\tvar leftValue;\n\t\tvar leftOperation;\n\n\t\tstart = result.stack.length - 1;\n\t\twhile(start > -1 && result.stack[start].operation > limit)\n\t\t\tstart--;\n\t\tindex = start + 1;\n\t\tif(index < result.stack.length)\n\t\t{\n\t\t\tresult.stack.push({operation: ExpressionParser.#OPERATION_EVALUATE, value: result.accumulator});\n\t\t\tif(this.debug)\n\t\t\t\tconsole.log(\"<<\\n\" + result.stack.slice(index).map((i, j) => j + \": \" + ExpressionParser.#formatOperation(i)).join(\"\\n\"));\n\t\t\tleftValue = result.stack[index].value;\n\t\t\tfor(; index < result.stack.length - 1; index++)\n\t\t\t{\n\t\t\t\tleftOperation = result.stack[index].operation;\n\t\t\t\tswitch(leftOperation)\n\t\t\t\t{\n\t\t\t\t\tcase ExpressionParser.#OPERATION_MULTIPLY:\n\t\t\t\t\t\tleftValue = leftValue.multiplyBy(result.stack[index + 1].value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ExpressionParser.#OPERATION_DIVIDE:\n\t\t\t\t\t\tleftValue = leftValue.divideBy(result.stack[index + 1].value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ExpressionParser.#OPERATION_ADD:\n\t\t\t\t\t\tleftValue = leftValue.add(result.stack[index + 1].value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ExpressionParser.#OPERATION_SUBTRACT:\n\t\t\t\t\t\tleftValue = leftValue.subtract(result.stack[index + 1].value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult.accumulator = leftValue;\n\t\t\tresult.stack = result.stack.slice(0, start + 1);\n\t\t}\n\n\t\treturn;\n\t}\n\n    parse(context, depth = 0, argumentList = {}, insideArgumentList = false, position, type, additionalTerminatorList = [])\n    {\n\t\tvar result;\n\t\tvar state;\n\n\t\tresult =\n\t\t{\n\t\t\taccumulator: BigDecimal.ZERO,\n\t\t\tbase: 0,\n\t\t\tcounter: depth,\n\t\t\tdata: 0,\n\t\t\tstack: []\n\t\t};\n\t\tstate =\n\t\t{\n\t\t\tcurrent: this.stream.getCurrent(),\n\t\t\treading: true\n\t\t};\n\n\t\twhile(state.reading && state.current)\n\t\t{\n\t\t\tswitch(state.current.type)\n\t\t\t{\n\t\t\t\tcase Token.TYPE_NUMBER:\n\t\t\t\t\tif(result.data === Token.TYPE_WHITESPACE)\n\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected space-delimited value \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\tif(result.data === Token.TYPE_NUMBER)\n\t\t\t\t\t\tif(result.counter)\n\t\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate.reading = false;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\tconsole.log(\"Number\", state.current);\n\t\t\t\t\tresult.accumulator = state.current.value;\n\t\t\t\t\tresult.data = Token.TYPE_NUMBER;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_OPERATOR_DIVIDE:\n\t\t\t\t\tif(result.data !== Token.TYPE_NUMBER && result.data !== Token.TYPE_WHITESPACE)\n\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\tconsole.log(\"/\", state.current);\n\t\t\t\t\tresult.stack.push({operation: ExpressionParser.#OPERATION_DIVIDE, value: result.accumulator});\n\t\t\t\t\tresult.data = Token.TYPE_OPERATOR_DIVIDE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_OPERATOR_MULTIPLY:\n\t\t\t\t\tif(result.data !== Token.TYPE_NUMBER && result.data !== Token.TYPE_WHITESPACE)\n\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\tconsole.log(\"*\", state.current);\n\t\t\t\t\tresult.stack.push({operation: ExpressionParser.#OPERATION_MULTIPLY, value: result.accumulator});\n\t\t\t\t\tresult.data = Token.TYPE_OPERATOR_MULTIPLY;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_OPERATOR_SUBTRACT:\n\t\t\t\t\tif(result.data === Token.TYPE_NUMBER && result.counter === 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tstate.reading = false;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(result.data !== Token.TYPE_NUMBER && result.data !== 0 && result.data !== Token.TYPE_BRACKET && result.data !== Token.TYPE_WHITESPACE)\n\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\tconsole.log(\"-\", state.current);\n\t\t\t\t\tthis.#unwind(result, ExpressionParser.#OPERATION_SUBTRACT);\n\t\t\t\t\tresult.stack.push({operation: ExpressionParser.#OPERATION_SUBTRACT, value: result.accumulator});\n\t\t\t\t\tresult.data = Token.TYPE_OPERATOR_SUBTRACT;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_OPERATOR_ADD:\n\t\t\t\t\tif(result.data !== Token.TYPE_NUMBER && result.data !== Token.TYPE_WHITESPACE)\n\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\tconsole.log(\"+\", state.current);\n\t\t\t\t\tthis.#unwind(result, ExpressionParser.#OPERATION_SUBTRACT);\n\t\t\t\t\tresult.stack.push({operation: ExpressionParser.#OPERATION_ADD, value: result.accumulator});\n\t\t\t\t\tresult.data = Token.TYPE_OPERATOR_ADD;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_OPERATOR_MEASURE:\n\t\t\t\t\tif(result.data === Token.TYPE_WHITESPACE)\n\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected space before measure operator (\"${state.current.name}\") at column ${state.current.position}`));\n\t\t\t\t\tif(result.data === Token.TYPE_NUMBER)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\t\tconsole.log(\"*\", state.current);\n\t\t\t\t\t\tresult.stack.push({operation: ExpressionParser.#OPERATION_MULTIPLY, value: result.accumulator});\n\t\t\t\t\t}\n\t\t\t\t\tif(type === Value.TYPE_UNIT)\n\t\t\t\t\t\tthrow(new SyntaxError(`The unit type is incompatible with the return value of a segment measurement`));\n\t\t\t\t\tif(type === Value.TYPE_FLAG)\n\t\t\t\t\t\tthrow(new SyntaxError(`The flag type is incompatible with the return value of a segment measurement`));\n\t\t\t\t\tthis.stream.getNext();\n\t\t\t\t\tif(this.stream.getCurrent().type === Token.TYPE_WHITESPACE)\n\t\t\t\t\t\tthis.stream.getNext();\n\t\t\t\t\tif(this.stream.getCurrent().type !== Token.TYPE_IDENTIFIER)\n\t\t\t\t\t\tthrow(new SyntaxError(`Expected identifier at ${this.stream.getCurrent().position}, found \"${this.stream.getCurrent().name}\"`))\n\t\t\t\t\tlet expResult = Value.getEmptyResult();\n\t\t\t\t\texpResult.x = position.x;\n\t\t\t\t\texpResult.y = position.y;\n\t\t\t\t\texpResult.arity = [];\n\t\t\t\t\tnew ExpressionParser(this.stream).parseInvocation(context, expResult, argumentList, []);\n\t\t\t\t\tresult.data = Token.TYPE_NUMBER;\n\t\t\t\t\tswitch(type)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase Value.TYPE_X:\n\t\t\t\t\t\t\tresult.accumulator = expResult.x.subtract(position.x);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase Value.TYPE_Y:\n\t\t\t\t\t\t\tresult.accumulator = expResult.y.subtract(position.y);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase Value.TYPE_THETA:\n\t\t\t\t\t\t\tresult.accumulator = (new BigDecimal(Math.atan2(expResult.x.subtract(position.x).toNumber(), expResult.y.subtract(position.y).toNumber()))).multiplyBy(180).divideBy(BigDecimal.PI);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(this.stream.getCurrent().type === Token.TYPE_WHITESPACE)\n\t\t\t\t\t\tthis.stream.getNext();\n\t\t\t\t\tstate.current = this.stream.getCurrent();\n\t\t\t\t\tif(state.current.type !== Token.TYPE_OPERATOR_MEASURE)\n\t\t\t\t\t\tthrow(new SyntaxError(`Expected measurement operator, found \"${state.current.name}`));\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_BRACKET:\n\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\tconsole.log(state.current.value ? \"(\" : \")\", state.current, result.counter, context.depth);\n\t\t\t\t\tif(state.current.value)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(result.data === Token.TYPE_WHITESPACE)\n\t\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\t\tresult.counter++;\n\t\t\t\t\t\tif(result.data === Token.TYPE_NUMBER)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\t\t\tconsole.log(\"*\", state.current);\n\t\t\t\t\t\t\tresult.stack.push({operation: ExpressionParser.#OPERATION_MULTIPLY, value: result.accumulator});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.accumulator = BigDecimal.ZERO;\n\t\t\t\t\t\tresult.stack.push({operation: ExpressionParser.#OPERATION_EVALUATE});\n\t\t\t\t\t\tresult.data = Token.TYPE_BRACKET;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif(!insideArgumentList && result.counter === context.depth)\n\t\t\t\t\t\t\tthrow(new SyntaxError(`Mismatched bracket at column ${state.current.position}`));\n\t\t\t\t\t\tif(result.data !== Token.TYPE_NUMBER)\n\t\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected bracket at column ${state.current.position}`));\n\t\t\t\t\t\tthis.#unwind(result, ExpressionParser.#OPERATION_SUBTRACT);\n\t\t\t\t\t\tthis.#unwind(result, ExpressionParser.#OPERATION_EVALUATE);\n\t\t\t\t\t\tresult.stack.pop();\n\t\t\t\t\t\tresult.data = Token.TYPE_NUMBER;\n\t\t\t\t\t\tif(insideArgumentList)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate.reading = false;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tresult.counter--;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_IDENTIFIER:\n\t\t\t\t\tif(result.data === Token.TYPE_WHITESPACE)\n\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected space-delimited value \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\tif(state.current.name in argumentList || state.current.name in context.unit)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(result.data === Token.TYPE_NUMBER)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\t\t\tconsole.log(\"*\", state.current);\n\t\t\t\t\t\t\tresult.stack.push({operation: ExpressionParser.#OPERATION_MULTIPLY, value: result.accumulator});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.debug)\n\t\t\t\t\t\t\tconsole.log(\"Unit\", state.current);\n\t\t\t\t\t\tresult.accumulator = argumentList[state.current.name] ?? context.unit[state.current.name];\n\t\t\t\t\t\tresult.data = Token.TYPE_NUMBER;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tthrow(new ReferenceError(`Reference to undefined unit \"${state.current.name}\" at column ${state.current.position}.`));\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TYPE_DELIMITER:\n\t\t\t\t\tif(result.counter)\n\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected delimiter \"${state.current.name}\" in expression at column ${state.current.position}.`));\n\t\t\t\tcase Token.TYPE_WHITESPACE:\n\t\t\t\t\tif(result.counter || result.data === 0) // TODO\n\t\t\t\t\t{\n\t\t\t\t\t\tif(result.data === Token.TYPE_NUMBER)\n\t\t\t\t\t\t\tresult.data = Token.TYPE_WHITESPACE;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase Token.TYPE_END:\n\t\t\t\t\tif(result.counter > context.depth)\n\t\t\t\t\t\tthrow(new SyntaxError(`Missing closing bracket(s) at end of segment (nesting depth = ${result.counter - context.depth})`));\n\t\t\t\t\tstate.reading = false;\n\t\t\t\t\tcontinue;\n\t\t\t\tdefault:\n\t\t\t\t\tif(additionalTerminatorList.includes(state.current.type))\n\t\t\t\t\t{\n\t\t\t\t\t\tstate.reading = false;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t}\n\t\t\tstate.current = this.stream.getNext();\n\t\t}\n\t\tthis.#unwind(result, ExpressionParser.#OPERATION_SUBTRACT);\n\t\tthis.#unwind(result, 0);\n\n\t\treturn(result);\n\t}\n\n\tparseInvocation(context, result, argumentList, distortionStack)\n\t{\n\t\tlet state;\n\t\tlet segment;\n\t\tlet inner;\n\t\tlet name;\n\t\tlet index;\n\t\tlet expResult;\n\t\tlet type;\n\t\n\t\tstate =\n\t\t{\n\t\t\tcurrent: this.stream.getCurrent(),\n\t\t\treading: true,\n\t\t\thasCount: false,\n\t\t\thasArgumentList: false,\n\t\t\tdistortionStack: distortionStack,\n\t\t\tcount: false,\n\t\t\targumentList: {},\n\t\t\tdelimited: false\n\t\t};\n\t\n\t\tif(state.current.type === Token.TYPE_NUMBER)\n\t\t{\n\t\t\tstate.count = state.current.value.toNumber();\n\t\t\tstate.hasCount = true;\n\t\t\tstate.current = this.stream.getNext();\n\t\t}\n\t\telse\n\t\t\tstate.count = 1;\n\t\tname = state.current.name;\n\t\tif(result.stack.indexOf(name) === -1)\n\t\t{\n\t\t\tif(!(name in context.segment))\n\t\t\t\tthrow(new ReferenceError(`Reference to undefined section \"${name}\" at ${state.current.position}`));\n\t\t\tsegment = context.segment[name];\n\t\t\tstate.current = this.stream.getNext();\n\t\t\twhile(state.reading === true && state.current)\n\t\t\t{\n\t\t\t\tswitch(state.current.type)\n\t\t\t\t{\n\t\t\t\t\tcase Token.TYPE_OPERATOR_ROTATE:\n\t\t\t\t\tcase Token.TYPE_OPERATOR_SKEW_HORIZONTAL:\n\t\t\t\t\tcase Token.TYPE_OPERATOR_SKEW_VERTICAL:\n\t\t\t\t\t\tthis.stream.getNext();\n\t\t\t\t\t\texpResult = new ExpressionParser(this.stream).parse(context, 0, argumentList, false, {x: result.x, y: result.y}, Value.TYPE_THETA, [Token.TYPE_OPERATOR_ROTATE, Token.TYPE_OPERATOR_SKEW_HORIZONTAL, Token.TYPE_OPERATOR_SKEW_VERTICAL]);\n\t\t\t\t\t\tstate.distortionStack.push(new Distortion(\n\t\t\t\t\t\t({\n\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_ROTATE]: Distortion.OPERATION_ROTATE,\n\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_SKEW_HORIZONTAL]: Distortion.OPERATION_SKEW_HORIZONTAL,\n\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_SKEW_VERTICAL]: Distortion.OPERATION_SKEW_VERTICAL\n\t\t\t\t\t\t})[state.current.type], expResult.accumulator));\n\t\t\t\t\t\tstate.current = this.stream.getCurrent();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tcase Token.TYPE_OPERATOR_REVERSE_ORDER:\n\t\t\t\t\t\tstate.distortionStack.push(new Distortion(Distortion.OPERATION_REVERSE_ORDER, null));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Token.TYPE_BRACKET:\n\t\t\t\t\t\tif(!state.hasArgumentList)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(state.current.value)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstate.current = this.stream.getNext();\n\t\t\t\t\t\t\t\twhile(!state.hasArgumentList)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tswitch(state.current.type)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_BRACKET:\n\t\t\t\t\t\t\t\t\t\t\tif(state.current.value)\n\t\t\t\t\t\t\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\t\t\t\t\t\t\tstate.hasArgumentList = true;\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_IDENTIFIER:\n\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_ROTATE:\n\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_REPEAT:\n\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_SKEW_HORIZONTAL:\n\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_SKEW_VERTICAL:\n\t\t\t\t\t\t\t\t\t\t\tstate.delimited = false;\n\t\t\t\t\t\t\t\t\t\t\tname = state.current.name;\n\t\t\t\t\t\t\t\t\t\t\ttype = state.current.type;\n\t\t\t\t\t\t\t\t\t\t\tswitch(type)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_IDENTIFIER:\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(context.segment[name])\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthrow(new ReferenceError(`Argument \"${name}\" is already defined as a segment`));\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_REPEAT:\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(state.hasCount)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthrow(new ReferenceError(`Execution count is already defined for this invocation`));\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif(this.stream.peekNext().type === Token.TYPE_WHITESPACE)\n\t\t\t\t\t\t\t\t\t\t\t\tstate.current = this.stream.getNext();\n\t\t\t\t\t\t\t\t\t\t\tstate.current = this.stream.getNext();\n\t\t\t\t\t\t\t\t\t\t\tif(state.current.type === Token.TYPE_END)\n\t\t\t\t\t\t\t\t\t\t\t\tthrow(new Error(`Unexpected end of segment at ${state.current.position}`));\n\t\t\t\t\t\t\t\t\t\t\tif(state.current.type !== Token.TYPE_OPERATOR_ASSIGN)\n\t\t\t\t\t\t\t\t\t\t\t\tthrow(new SyntaxError(`Expected assignment operator after argument name, but found \"${state.current.name}\"`));\n\t\t\t\t\t\t\t\t\t\t\tstate.current = this.stream.getNext();\n\t\t\t\t\t\t\t\t\t\t\texpResult = new ExpressionParser(this.stream).parse(context, 0, argumentList, true, {x: result.x, y: result.y},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t[Token.TYPE_IDENTIFIER]: Value.TYPE_UNIT,\n\t\t\t\t\t\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_ROTATE]: Value.TYPE_THETA,\n\t\t\t\t\t\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_SKEW_HORIZONTAL]: Value.TYPE_THETA,\n\t\t\t\t\t\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_SKEW_VERTICAL]: Value.TYPE_THETA,\n\t\t\t\t\t\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_REPEAT]: Value.TYPE_UNIT,\n\t\t\t\t\t\t\t\t\t\t\t}[type]);\n\t\t\t\t\t\t\t\t\t\t\tswitch(type)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_IDENTIFIER:\n\t\t\t\t\t\t\t\t\t\t\t\t\tstate.argumentList[name] = expResult.accumulator;\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_ROTATE:\n\t\t\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_SKEW_HORIZONTAL:\n\t\t\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_SKEW_VERTICAL:\n\t\t\t\t\t\t\t\t\t\t\t\t\tstate.distortionStack.push(new Distortion(\n\t\t\t\t\t\t\t\t\t\t\t\t\t({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_ROTATE]: Distortion.OPERATION_ROTATE,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_SKEW_HORIZONTAL]: Distortion.OPERATION_SKEW_HORIZONTAL,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[Token.TYPE_OPERATOR_SKEW_VERTICAL]: Distortion.OPERATION_SKEW_VERTICAL\n\t\t\t\t\t\t\t\t\t\t\t\t\t})[type], expResult.accumulator));\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_OPERATOR_REPEAT:\n\t\t\t\t\t\t\t\t\t\t\t\t\tstate.count = expResult.accumulator.toNumber();\n\t\t\t\t\t\t\t\t\t\t\t\t\tstate.hasCount = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tstate.current = this.stream.getCurrent();\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_DELIMITER:\n\t\t\t\t\t\t\t\t\t\t\tif(state.delimited)\n\t\t\t\t\t\t\t\t\t\t\t\tthrow(new Error(`Unexpected delimiter at column ${state.current.position}`));\n\t\t\t\t\t\t\t\t\t\t\tstate.delimited = true;\n\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_WHITESPACE:\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase Token.TYPE_END:\n\t\t\t\t\t\t\t\t\t\t\tthrow(new Error(`Unexpected end of segment at ${state.current.position}`));\n\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tstate.current = this.stream.getNext();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tthrow(new SyntaxError(`Unexpected token \"${state.current.name}\" at column ${state.current.position}`));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate.reading = false;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Token.TYPE_WHITESPACE:\n\t\t\t\t\t\tif([Token.TYPE_OPERATOR_ROTATE, Token.TYPE_OPERATOR_SKEW_HORIZONTAL, Token.TYPE_OPERATOR_SKEW_VERTICAL].includes(this.stream.peekNext().type))\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tstate.reading = false;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tstate.current = this.stream.getNext();\n\t\t\t}\n\t\t\tif(state.count !== parseInt(state.count))\n\t\t\t\tthrow(new Error(`The execution count (${state.count}) for segment \"${name}\" must be an integer.`));\n\t\t\tif(state.count < 1)\n\t\t\t\tthrow(new Error(`The execution count (${state.count}) for segment \"${name}\" can't be less than 1.`));\n\t\t\tfor(index = 1; index <= state.count; index++)\n\t\t\t{\n\t\t\t\tinner = new PathParser(new TokenStream(segment));\n\t\t\t\tinner.parse(context, result, state.distortionStack.concat(), index, state.argumentList);\n\t\t\t\tresult.stack.pop();\n\t\t\t}\n\t\t\tstate.reading = false;\n\t\t}\n\t\telse\n\t\t\tthrow(new ReferenceError(`Segment ${state.current.name} cannot call itself`));\n\t\n\t\treturn;\n\t}\n}\n","export default class ExtendedDOM\r\n{\r\n\tstatic typeof(node)\r\n\t{\r\n\t\treturn(node && node.constructor ? node.constructor.name.toLowerCase() : undefined);\r\n\t}\r\n\r\n\tstatic extractChildren(element, clean = true)\r\n\t{\r\n\t\tif(clean && ExtendedDOM.typeof(element.firstChild) === \"text\")\r\n\t\t\telement.removeChild(element.firstChild);\r\n\t\twhile(element.firstChild)\r\n\t\t\telement.parentNode.insertBefore(element.firstChild, element);\r\n\t\telement.parentNode.removeChild(element);\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tstatic remove(element, clean = true)\r\n\t{\r\n\t\tif(clean && ExtendedDOM.typeof(element.previousSibling) === \"text\")\r\n\t\t\telement.parentNode.removeChild(element.previousSibling);\r\n\t\telement.parentNode.removeChild(element);\r\n\r\n\t\treturn;\r\n\t}\r\n}\r\n","import ExpressionParser from \"./ExpressionParser\";\nimport TokenStream from \"./TokenStream\";\nimport PathParser from \"./PathParser\";\nimport BigDecimal from \"./BigDecimal\";\nimport Value from \"./Value\";\nimport ExtendedDOM from \"./ExtendedDOM\";\n\nexport default class Transformer\n{\n\tstatic #lastContext;\n\n\tconstructor(text)\n\t{\n\t\tthis.document = Transformer.#parseXML(text);\n\t}\n\n\tstatic #parseXML(text)\n\t{\n\t\treturn((new (typeof(DOMParser) === \"undefined\" ? require('xmldom').DOMParser : DOMParser)()).parseFromString(text, \"text/xml\"));\n\t}\n\n\tstatic #parseMeta(document)\n\t{\n\t\tlet defined = Array.from(document.getElementsByTagName(\"define\"))\n\t\tdefined.forEach(element => element.parentNode.removeChild(element));\n\t\tdefined = defined.filter(item =>\n\t\t\t\t[\"t\", \"true\", \"on\", \"yes\", \"y\"].includes(item.getAttribute(\"state\").toLowerCase())\n\t\t\t\t||\n\t\t\t\t(parseFloat(item.getAttribute(\"state\")) || 0) !== 0\n\t\t\t)\n\t\t\t.map(item => item.getAttribute(\"name\"));\n\t\tArray.from(document.getElementsByTagName(\"ifdef\")).forEach(element =>\n\t\t{\n\t\t\tif(defined.includes(element.getAttribute(\"name\")))\n\t\t\t\tExtendedDOM.extractChildren(element);\n\t\t\telse\n\t\t\t\tExtendedDOM.remove(element);\n\n\t\t\treturn;\n\t\t});\n\t\tArray.from(document.getElementsByTagName(\"ifndef\")).forEach(element =>\n\t\t{\n\t\t\tif(defined.includes(element.getAttribute(\"name\")))\n\t\t\t\tExtendedDOM.remove(element);\n\t\t\telse\n\t\t\t\tExtendedDOM.extractChildren(element);\n\n\t\t\treturn;\n\t\t});\n\t\n\t\treturn;\n\t}\n\n\tstatic #parseUnitList(context, list)\n\t{\n\t\tlet stack = [];\n\t\tlet item;\n\n\t\twhile(stack.length || list.length)\n\t\t{\n\t\t\tif(stack.length)\n\t\t\t\titem = stack.pop();\n\t\t\telse\n\t\t\t{\n\t\t\t\titem = list.shift();\n\t\t\t\tif(!item.previousSibling.tagName && item.previousSibling.nodeValue.trim() === \"\")\n\t\t\t\t\titem.parentNode.removeChild(item.previousSibling);\n\t\t\t\titem.parentNode.removeChild(item);\n\t\t\t}\n\t\t\tlet parser = new ExpressionParser(new TokenStream(item.getAttribute(\"value\")));\n\t\t\ttry\n\t\t\t{\n\t\t\t\tlet result = parser.parse(context, 1, {}, false, null, Value.TYPE_UNIT);\n\t\t\t\tlet id = item.getAttribute(\"id\");\n\t\t\t\tif(id in context.unit)\n\t\t\t\t\tthrow(new Error(`Duplicate unit ID: \"${id}\"`));\n\t\t\t\tcontext.unit[id] = result.accumulator;\n\t\t\t}\n\t\t\tcatch(except)\n\t\t\t{\n\t\t\t\tif(except instanceof ReferenceError)\n\t\t\t\t{\n\t\t\t\t\tif(stack.filter(i => i.getAttribute(\"id\") === parser.stream.getCurrent().name).length === 1)\n\t\t\t\t\t\tthrow(new ReferenceError(`Circular reference to \"${parser.stream.getCurrent().name}\"`));\n\t\t\t\t\tstack.push(item);\n\t\t\t\t\tlet next = list.filter(i => i.getAttribute(\"id\") === parser.stream.getCurrent().name);\n\t\t\t\t\tif(next.length > 1)\n\t\t\t\t\t\tthrow(new ReferenceError(`Unable to resolve expression \"${item.getAttribute(\"value\")}\". Duplicate ID \"${parser.stream.getCurrent().name}\".`));\n\t\t\t\t\tif(next.length === 0)\n\t\t\t\t\t\tthrow(new ReferenceError(`Unable to resolve expression \"${item.getAttribute(\"value\")}\". \"${parser.stream.getCurrent().name}\" is undefined.`));\n\t\t\t\t\tstack.push(next[0]);\n\t\t\t\t\tnext[0].parentNode.removeChild(next[0]);\n\t\t\t\t\tlist = list.slice(0, list.indexOf(next[0])).concat(list.slice(list.indexOf(next[0]) + 1));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tthrow(new Error(\"Couldn't parse item, \" + except.message, {cause: except}));\n\t\t\t}\n\t\t}\n\n\t\treturn;\n\t}\n\n\tstatic #parseLiteralList(context, list)\n\t{\n\t\tlet item;\n\n\t\twhile(list.length)\n\t\t{\n\t\t\titem = list.shift();\n\t\t\tif(!item.previousSibling.tagName && item.previousSibling.nodeValue.trim() === \"\")\n\t\t\t\titem.parentNode.removeChild(item.previousSibling);\n\t\t\titem.parentNode.removeChild(item);\n\t\t\tlet id = item.getAttribute(\"id\");\n\t\t\tif(id in context.unit)\n\t\t\t\tthrow(new Error(`Duplicate literal ID: \"${id}\"`));\n\t\t\tcontext.literal[id] = item.getAttribute(\"value\");\n\t\t}\n\n\t\treturn;\n\t}\n\n\tstatic #parseSegmentList(context, list)\n\t{\n\t\tlist.forEach(i =>\n\t\t{\n\t\t\tif(!i.previousSibling.tagName && i.previousSibling.nodeValue.trim() === \"\")\n\t\t\t\ti.parentNode.removeChild(i.previousSibling);\n\t\t\ti.parentNode.removeChild(i)\n\n\t\t\treturn;\n\t\t});\n\t\tcontext.segment = list.reduce((previous, current) =>\n\t\t{\n\t\t\tlet id = current.getAttribute(\"id\");\n\t\t\tif(id in previous)\n\t\t\t\tthrow(new Error(`Duplicate segment ID: \"${id}\"`));\n\t\t\tif(id in context.unit)\n\t\t\t\tthrow(new Error(`Segment ID: \"${id}\" already defined as a unit`));\n\t\t\tprevious[current.getAttribute(\"id\")] = current.getAttribute(\"d\");\n\n\t\t\treturn(previous);\n\t\t}, {});\n\t\tcontext.segmentKey = Object.keys(context.segment);\n\n\t\treturn;\n\t}\n\n\t#parseIncludeList(configuration)\n\t{\n\t\tlet list;\n\t\tlet seen = [];\n\n\t\tdo\n\t\t{\n\t\t\tlist = Array.from(this.document.getElementsByTagName(\"include\"));\n\t\t\tlist.forEach(item =>\n\t\t\t{\n\t\t\t\tlet href = item.getAttribute(\"href\");\n\t\t\t\tif(seen.indexOf(href) !== -1)\n\t\t\t\t\tthrow(new Error(`Circular include reference: ${href}`));\n\t\t\t\tseen.push(href);\n\t\t\t\thref = href.split(\"#\");\n\t\t\t\tlet filename = href[0];\n\t\t\t\tlet id = href.length > 1 ? href.slice(1).join(\"#\") : null;\n\t\t\t\tconst fs = require('fs');\n\t\t\t\tconst data = fs.readFileSync(configuration.base + filename, {encoding: \"utf-8\", flag: \"r\"});\n\t\t\t\tlet inner = Transformer.#parseXML(data);\n\t\t\t\tlet target;\n\t\t\t\tif(id !== null)\n\t\t\t\t{\n\t\t\t\t\ttarget = inner.getElementById(id);\n\t\t\t\t\tif(!target)\n\t\t\t\t\t\tthrow(new Error(`Failed to include file: ${filename}, ID: ${id}`));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttarget = inner.documentElement;\n\t\t\t\t\tif(!target)\n\t\t\t\t\t\tthrow(new Error(`Failed to include file: ${filename}`));\n\t\t\t\t}\n\t\t\t\tif(target.nodeName.toLowerCase() === \"svg\")\n\t\t\t\t{\n\t\t\t\t\tlet child = target.firstChild;\n\t\t\t\t\twhile(child)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet add = child;\n\t\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t\t\titem.parentNode.insertBefore(add, item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet child = target;\n\t\t\t\t\twhile(child)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet add = child;\n\t\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t\t\titem.parentNode.insertBefore(add, item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\titem.parentNode.removeChild(item);\n\t\t\t});\n\t\t} while(list.length);\n\n\t\treturn;\n\t}\n\n\tstatic #insertTemplateContent(template, replacement, iif, context, container)\n\t{\n\t\tObject.entries(replacement).forEach(([replaceKey, replaceValue]) =>\n\t\t\tiif = iif.replaceAll(replaceKey, replaceValue)\n\t\t);\n\t\tif(!iif.length || context.segmentKey.includes(iif))\n\t\t{\n\t\t\tconst copy = template.cloneNode(true);\n\t\t\tconst list = Array.from(copy.getElementsByTagName(\"*\"));\n\t\t\tlist.forEach(element =>\n\t\t\t{\n\t\t\t\tArray.from(element.attributes).forEach(attribute =>\n\t\t\t\t\tObject.entries(replacement).forEach(([replaceKey, replaceValue]) =>\n\t\t\t\t\t\tattribute.value = attribute.value.replaceAll(replaceKey, replaceValue)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\tiif = element.getAttribute(\"if\");\n\t\t\t\tif(iif.length && !context.segmentKey.includes(iif))\n\t\t\t\t\telement.parentNode.removeChild(element);\n\t\t\t\telement.removeAttribute(\"if\");\n\n\t\t\t\treturn;\n\t\t\t});\n\t\t\tif(copy.firstChild && !copy.firstChild.tagName && copy.firstChild.nodeValue.trim() === \"\")\n\t\t\t\t\tcopy.removeChild(copy.firstChild);\n\t\t\tif(!container)\n\t\t\t\twhile(copy.firstChild)\n\t\t\t\t\ttemplate.parentNode.insertBefore(copy.firstChild, template);\n\t\t\telse\n\t\t\t\twhile(copy.firstChild)\n\t\t\t\t\tcontainer.appendChild(copy.firstChild);\n\t\t}\n\n\t\treturn;\n\t}\n\n\tstatic #formatTemplateValue(value, format)\n\t{\n\t\treturn(\n\t\t\tformat.length && format === \"f\".repeat(format.length)\n\t\t\t?\n\t\t\t\tvalue.toString(16).padStart(format.length, \"0\")\n\t\t\t:\n\t\t\t\tformat === \"0\".repeat(format.length)\n\t\t\t\t?\n\t\t\t\t\tvalue.toString().padStart(format.length, \"0\")\n\t\t\t\t:\n\t\t\t\t\tvalue.toString()\n\t\t);\n\t}\n\n\tstatic #getTemplateLiteral(context, template, attribute)\n\t{\n\t\tconst value = template.getAttribute(attribute);\n\n\t\treturn(context.literal[value] ?? value);\n\t}\n\n\tstatic #applyTemplate(context, document)\n\t{\n\t\tlet template = document.getElementsByTagName(\"template\")[0];\n\t\twhile(template)\n\t\t{\n\t\t\tswitch(template.getAttribute(\"type\"))\n\t\t\t{\n\t\t\t\tcase \"repeat\":\n\t\t\t\t\tlet minimum;\n\t\t\t\t\tlet maximum;\n\t\t\t\t\tlet loop = Transformer.#getTemplateLiteral(context, template, \"range\").split(new RegExp(\"\\\\s*,\\\\s*\", \"gm\")).filter(item => item !== \"\").map(item =>\n\t\t\t\t\t{\n\t\t\t\t\t\tlet [lower, upper] = item.trim().split(new RegExp(\"\\\\s*-\\\\s*\", \"gm\")).slice(0, 2).map(i => parseInt(i) || 0);\n\t\t\t\t\t\tif(lower > upper)\n\t\t\t\t\t\t\t[lower, upper] = [upper, lower];\n\t\t\t\t\t\tif(minimum === undefined || lower < minimum)\n\t\t\t\t\t\t\tminimum = lower;\n\t\t\t\t\t\tif(maximum === undefined || upper > maximum)\n\t\t\t\t\t\t\tmaximum = upper;\n\n\t\t\t\t\t\treturn({lower, upper});\n\t\t\t\t\t});\n\t\t\t\t\tlet step = parseInt(PathParser.parseValueAttribute(context, template.getAttribute(\"step\"))) || 1;\n\t\t\t\t\tlet columnCount = parseInt(Transformer.#getTemplateLiteral(context, template, \"column-count\")) || 0;\n\t\t\t\t\tlet groupRowCount = parseInt(Transformer.#getTemplateLiteral(context, template, \"g-row-count\")) || 0;\n\t\t\t\t\tlet groupRowId = Transformer.#getTemplateLiteral(context, template, \"g-row-id\");\n\t\t\t\t\tlet vMap = Transformer.#getTemplateLiteral(context, template, \"v-map\").split(new RegExp(\"\\\\s*,\\\\s*\", \"gm\")).filter(item => item !== \"\").map(item =>\n\t\t\t\t\t{\n\t\t\t\t\t\tlet [range, value] = item.trim().split(new RegExp(\"\\\\s*:\\\\s*\", \"gm\"));\n\t\t\t\t\t\trange = range.split(\"-\");\n\t\t\t\t\t\tif(range.length < 2)\n\t\t\t\t\t\t\trange[1] = range[0];\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tif(range.length > 2)\n\t\t\t\t\t\t\t\trange = range.slice(0, 2);\n\t\t\t\t\t\trange = range.map((i, j) => i === \"*\" || i === \"\" ? (j === 0 ? minimum : maximum) : parseInt(i) || 0)\n\n\t\t\t\t\t\treturn({start: range[0], stop: range[1], value: value ?? \"\"});\n\t\t\t\t\t});\n\t\t\t\t\tlet iif = template.getAttribute(\"if\") ?? \"\";\n\t\t\t\t\tlet iFormat = template.getAttribute(\"i-format\") ?? \"\";\n\t\t\t\t\tlet vFormat = template.getAttribute(\"v-format\") ?? \"\";\n\t\t\t\t\tlet xFormat = template.getAttribute(\"x-format\") ?? \"\";\n\t\t\t\t\tlet yFormat = template.getAttribute(\"y-format\") ?? \"\";\n\t\t\t\t\tlet gFormat = template.getAttribute(\"g-format\") ?? \"\";\n\t\t\t\t\tlet y = 0;\n\t\t\t\t\tlet x = 0;\n\t\t\t\t\tlet container;\n\t\t\t\t\tlet groupIndex = -1;\n\t\t\t\t\tloop.forEach(loopEntry =>\n\t\t\t\t\t{\n\t\t\t\t\t\tfor(let index = loopEntry.lower; index <= loopEntry.upper; index += step)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet v = vMap.find(item => index >= item.start && index <= item.stop)?.value ?? index;\n\t\t\t\t\t\t\tif(groupRowCount && (y % groupRowCount === 0) && x === 0)\n\t\t\t\t\t\t\t\tgroupIndex++;\n\t\t\t\t\t\t\tconst replacement =\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"?x?\": Transformer.#formatTemplateValue(x, xFormat),\n\t\t\t\t\t\t\t\t\"?y?\": Transformer.#formatTemplateValue(y, yFormat),\n\t\t\t\t\t\t\t\t\"?i?\": Transformer.#formatTemplateValue(index, iFormat),\n\t\t\t\t\t\t\t\t\"?v?\": Transformer.#formatTemplateValue(v, vFormat),\n\t\t\t\t\t\t\t\t\"?g?\": Transformer.#formatTemplateValue(groupIndex, gFormat),\n\t\t\t\t\t\t\t\t\"?gy?\": Transformer.#formatTemplateValue(y - (groupIndex * groupRowCount), yFormat)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tif(groupRowCount && (y % groupRowCount === 0) && x === 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontainer = template.ownerDocument.createElement(\"g\");\n\t\t\t\t\t\t\t\tlet id = groupRowId;\n\t\t\t\t\t\t\t\tObject.entries(replacement).forEach(([replaceKey, replaceValue]) =>\n\t\t\t\t\t\t\t\t\tid = id.replaceAll(replaceKey, replaceValue)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tcontainer.setAttribute(\"id\", id);\n\t\t\t\t\t\t\t\ttemplate.parentNode.insertBefore(container, template);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tTransformer.#insertTemplateContent(template, replacement, iif, context, container);\n\t\t\t\t\t\t\tx++;\n\t\t\t\t\t\t\tif(x === columnCount)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\t\t\ty++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttemplate.parentNode.removeChild(template);\n\t\t\ttemplate = document.getElementsByTagName(\"template\")[0];\n\t\t}\n\n\t\treturn;\n\t}\n\n\t#extractIsolated(documentElement, base, list)\n\t{\n\t\tconst path = require('path');\n\n\t\treturn(list.filter(i => i.hasAttribute(\"id\")).map(i =>\n\t\t{\n\t\t\tlet container = documentElement.cloneNode(true);\n\t\t\tlet cursor = container.firstChild;\n\t\t\tlet target = null;\n\t\t\tlet visited = [];\n\t\t\twhile(cursor)\n\t\t\t{\n\t\t\t\tif(cursor.firstChild && !visited.includes(cursor.firstChild))\n\t\t\t\t{\n\t\t\t\t\tcursor = cursor.firstChild;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet nextNode = cursor.nextSibling ?? cursor.parentNode;\n\t\t\t\t\tif(cursor.tagName && cursor.hasAttribute(\"id\"))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet ancestor = cursor;\n\t\t\t\t\t\twhile(ancestor && ancestor.tagName !== \"defs\")\n\t\t\t\t\t\t\tancestor = ancestor.parentNode;\n\t\t\t\t\t\tif(!ancestor)\n\t\t\t\t\t\t\tif(cursor.getAttribute(\"id\") !== i.getAttribute(\"id\") || target !== null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlet parent = cursor.parentNode;\n\t\t\t\t\t\t\t\tif(cursor.previousSibling && !cursor.previousSibling.tagName && cursor.previousSibling.nodeValue.trim() === \"\")\n\t\t\t\t\t\t\t\t\tparent.removeChild(cursor.previousSibling);\n\t\t\t\t\t\t\t\tparent.removeChild(cursor);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(target === null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttarget = cursor;\n\t\t\t\t\t\t\t\t\ttarget.removeAttribute(\"id\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvisited.push(cursor);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tvisited.push(cursor);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tvisited.push(cursor);\n\t\t\t\t\tcursor = nextNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst chain = [];\n\t\t\tif(target)\n\t\t\t{\n\t\t\t\twhile(target && !target.hasAttribute(\"dir\"))\n\t\t\t\t{\n\t\t\t\t\tchain.push(target);\n\t\t\t\t\ttarget = target.parentNode;\n\t\t\t\t}\n\t\t\t\tif(target)\n\t\t\t\t\tif(target.attributes.length === 1 && target.parentNode)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst parent = target.parentNode;\n\t\t\t\t\t\tparent.insertBefore(chain[chain.length - 1], target);\n\t\t\t\t\t\tparent.removeChild(target);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\ttarget.removeAttribute(\"dir\");\n\t\t\t}\n\t\t\telse\n\t\t\t\tcontainer = null;\n\n\t\t\treturn([base + (target ? target.getAttribute(\"dir\") + path.sep : \"\") + i.getAttribute(\"id\") + \".svg\", container]);\n\t\t})).filter(([, node]) => node !== null);\n\t}\n\n\ttransform(configuration)\n\t{\n\t\tlet context;\n\n\t\tif(configuration.sharedContext && Transformer.#lastContext)\n\t\t\tcontext = Transformer.#lastContext;\n\t\telse\n\t\t{\n\t\t\tcontext =\n\t\t\t{\n\t\t\t\tliteral: {},\n\t\t\t\tunit: {},\n\t\t\t\tdepth: 1,\n\t\t\t\tcache:\n\t\t\t\t{\n\t\t\t\t\tpath: {}\n\t\t\t\t},\n\t\t\t\toptimisation:\n\t\t\t\t{\n\t\t\t\t\tpath:\n\t\t\t\t\t{\n\t\t\t\t\t\tprecision: configuration.precision,\n\t\t\t\t\t\tcombineCommands: configuration.combinePathCommands /* Don't output h 20 h 20 */\n\t\t\t\t\t},\n\t\t\t\t\txml:\n\t\t\t\t\t{\n\t\t\t\t\t\tstripWhitespace: configuration.stripWhitespace === \"xml\" || configuration.stripWhitespace === \"all\",\n\t\t\t\t\t\tstripComments: configuration.stripComments\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis.#parseIncludeList(configuration);\n\t\t\tTransformer.#parseMeta(this.document);\n\t\t\tTransformer.#parseUnitList(context, Array.from(this.document.getElementsByTagName(\"unit\")));\n\t\t\tTransformer.#parseLiteralList(context, Array.from(this.document.getElementsByTagName(\"literal\")));\n\t\t\tfor(let item in configuration.unit)\n\t\t\t\tcontext.unit[item] = configuration.unit[item];\n\t\t\tTransformer.#parseSegmentList(context, Array.from(this.document.getElementsByTagName(\"segment\")));\n\t\t\tTransformer.#lastContext = context;\n\t\t}\n\t\tTransformer.#applyTemplate(context, this.document);\n\t\tlet list = Array.from(this.document.getElementsByTagName(\"path\"));\n\t\tcontext.depth = 0;\n\t\twhile(list.length)\n\t\t{\n\t\t\tlet item = list.shift();\n\t\t\tlet d = item.getAttribute(\"d\");\n\t\t\tlet text;\n\t\t\tif(!context.cache.path[d])\n\t\t\t{\n\t\t\t\tlet parser = new PathParser(new TokenStream(d));\n\t\t\t\tlet pathResult = parser.parse(context);\n\t\t\t\ttext = PathParser.resultToString(pathResult, context.optimisation.path.precision);\n\t\t\t\tcontext.cache.path[d] = text;\n\t\t\t}\n\t\t\telse\n\t\t\t\ttext = context.cache.path[d];\n\t\t\titem.setAttribute(\"d\", text);\n\t\t}\n\t\tconst scan =\n\t\t[\n\t\t\t{tagName: \"svg\", attribute: [{name: \"viewBox\", limit: 4}, \"width\", \"height\"]},\n\t\t\t{tagName: \"rect\", attribute: [\"x\", \"y\", \"width\", \"height\", \"rx\", \"ry\"]},\n\t\t\t{tagName: \"text\", attribute: [\"x\", \"y\"]},\n\t\t\t{tagName: \"use\", attribute: [\"x\", \"y\"]},\n\t\t\t{tagName: \"circle\", attribute: [\"r\", \"cx\", \"cy\"]},\n\t\t\t{tagName: \"ellipse\", attribute: [\"rx\", \"ry\", \"cx\", \"cy\"]},\n\t\t\t{tagName: \"line\", attribute: [\"x1\", \"y1\", \"x2\", \"y2\"]},\n\t\t\t{tagName: \"image\", attribute: [\"x\", \"y\", \"width\", \"height\"]},\n\t\t\t{tagName: \"pattern\", attribute: [\"width\", \"height\"]},\n\t\t\t{tagName: \"polygon\", attribute: [{name: \"points\", limit: -1}]},\n\t\t\t{tagName: \"polyline\", attribute: [{name: \"points\", limit: -1}]},\n\t\t\t{tagName: \"line\", attribute: [\"x1\", \"y1\", \"x2\", \"y2\"]},\n\t\t\t{tagName: \"textPath\", attribute: [\"startOffset\"]},\n\t\t\t{tagName: \"path\", attribute: [\"stroke-width\"]},\n\t\t\t{tagName: \"image\", attribute: [\"x\", \"y\", \"width\", \"height\"]},\n\t\t\t{tagName: \"marker\", attribute: [\"markerWidth\", \"markerHeight\", \"refX\", \"refY\"]},\n\t\t];\n\t\tscan.forEach(target =>\n\t\t{\n\t\t\tlist = Array.from(this.document.getElementsByTagName(target.tagName));\n\t\t\tcontext.depth = 0;\n\t\t\twhile(list.length)\n\t\t\t{\n\t\t\t\tlet item = list.shift();\n\t\t\t\ttarget.attribute.forEach(attribute =>\n\t\t\t\t{\n\t\t\t\t\tlet attributeName;\n\t\t\t\t\tlet attributeLimit;\n\n\t\t\t\t\tif(typeof(attribute) === \"string\")\n\t\t\t\t\t{\n\t\t\t\t\t\tattributeName = attribute;\n\t\t\t\t\t\tattributeLimit = 1;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tattributeName = attribute.name;\n\t\t\t\t\t\tattributeLimit = attribute.limit;\n\t\t\t\t\t}\n\t\t\t\t\tif(item.hasAttribute(attributeName))\n\t\t\t\t\t\titem.setAttribute(attributeName, PathParser.parseValueAttribute(context, item.getAttribute(attributeName)));\n\n\t\t\t\t\treturn;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\treturn;\n\t\t});\n\t\tif(context.optimisation.xml.stripWhitespace || context.optimisation.xml.stripComments)\n\t\t{\n\t\t\tlet stack = [];\n\t\t\tlet cursor = this.document.documentElement.firstChild;\n\t\t\tlet Node = {COMMENT_NODE: 8, TEXT_NODE: 3};\n\t\t\twhile(stack.length || cursor)\n\t\t\t{\n\t\t\t\tif(cursor.firstChild)\n\t\t\t\t\tstack.push(cursor.firstChild);\n\t\t\t\tlet target = cursor;\n\t\t\t\tif(cursor.nextSibling)\n\t\t\t\t\tcursor = cursor.nextSibling;\n\t\t\t\telse\n\t\t\t\t\tcursor = stack.pop();\n\t\t\t\tif(context.optimisation.xml.stripWhitespace && target.nodeType === Node.TEXT_NODE && target.nodeValue.replace(new RegExp(\"\\\\s+\", \"g\"), \"\").length === 0)\n\t\t\t\t\ttarget.parentNode.removeChild(target);\n\t\t\t\tif(context.optimisation.xml.stripComments && target.nodeType === Node.COMMENT_NODE)\n\t\t\t\t\ttarget.parentNode.removeChild(target);\n\t\t\t}\n\t\t}\n\t\tif(configuration.extract)\n\t\t{\n\t\t\tconst path = require('path');\n\t\t\tlet base = configuration.destination + path.sep;\n\t\t\tlist = this.#extractIsolated(this.document.documentElement, base, Array.from(this.document.getElementsByTagName(\"*\")));\n\t\t}\n\t\telse\n\t\t\tlist = [[configuration.destination, this.document.documentElement]];\n\n\t\treturn(list.map(([i, j]) => [i, (new (typeof(XMLSerializer) === \"undefined\" ? require(\"xmldom\").XMLSerializer : XMLSerializer)()).serializeToString(j)]));\n\t}\n};\n","import Transformer from \"./class/Transformer\";\nimport Profiler from \"./class/Profiler\";\nimport PathParser from \"./class/PathParser\";\nimport BigDecimal from \"./class/BigDecimal\";\nimport * as fs from 'fs';\n\n/*\nexport function transform(text, configuration, require)\n{\n\tconsole.log(\"Transforming\"); \n\twindow.PathParser = PathParser;\n\twindow.BigDecimal = BigDecimal;\n\tvar tt = `\n\t<svg>\n\t\t<unit id=\"pp\" value=\"3n\" />\n\t\t<unit id=\"n\" value=\"2\" />\n\t\t<unit id=\"q\" value=\"3n + 4pp((3))\" />\n\t\t<segment id=\"kSegment\" d=\"l 20 0 \" />\n\t\t<segment id=\"kSegment2\" d=\"L 200,100\" />\n\t\t<segment id=\"kSegment3\" d=\"c 20,50 80,-50 100,0\" />\n\t\t<segment id=\"kSegment4\" d=\"a 50,60 30 1 0 100,0\" />\n\t\t<segment id=\"kSegment5\" d=\"l 100,20 l 100,-20 l @400,@400\" />\n\t\t<segment id=\"purple\" d=\"h 5j v 5j h 3n\" />\n\t\t<apath d=\"m 50,50n kSegment kSegment % 90 l -3.2.5 l-20-20 40 40 l 50 0 l 50 50\" />\n\t\t<apath d=\"M 100,100 kSegment2 L 100,100 kSegment2%45 L 300,100\" />\n\t\t<apath d=\"M 100,100 kSegment2%90 M 200,200 kSegment2%90\" />\n\t\t<apath d=\"M 100,100 kSegment3\" />\n\t\t<apath d=\"M 100,300 kSegment3%90\" />\n\t\t<apath d=\"M 100,100 kSegment4\" />\n\t\t<apath d=\"M 100,300 kSegment4%90\" />\n\t\t<apath d=\"M 100,100 kSegment5\" />\n\t\t<apath d=\"M 100,100 kSegment5%30\" />\n\t\t<apath d=\"M 100,100 m 30,30 3kSegment2()%45 3kSegment z\" />\n\t\t<apath d=\"M 100,100 purple(j=5 n=5 #=2)m(49) 50\" />\n\t\t<segment id=\"green\" d=\"h 50 v 50\" />\n\t\t<apath d=\"M 100,100 green%|green|\" />\n\t\t<path d=\"m 50,50 h 30 h 30 h 30\" />\n\t\t<include href=\"somefile.svg#element\" />\n\t</svg>`;\n\ttt = `<svg viewBox=\"0 0 300 300\">\n\t\t<path d=\"m 50,50 Q 50,100 100,100 Q 150,100 150,50 Q 150,0 100,0\" stroke=\"red\" strokewidth=\"3\" />\n\t\t<path d=\"m 50,75 Q 50,125 100,125 T 150,75 T 100,25\" fill=\"transparent\" stroke=\"red\" strokewidth=\"3\" />\n\t</svg>`;\n\treturn((new Transformer(tt)).transform());\n};\n*/\n\n(function() {\n\tconst fs = require('fs');\n\tconst path = require('path');\n\tlet parameterList;\n\tlet comseq = process.argv[2]\n\tlet comseqfound = false;\n\tif(fs.existsSync(comseq) && fs.lstatSync(comseq).isDirectory())\n\t{\n\t\tprocess.chdir(comseq);\n\t\tcomseq = path.join(comseq, \"comseq.txt\");\n\t\tparameterList = fs.readFileSync(comseq, \"utf-8\").split(\"\\n\").map(line => line.trim()).map(line => line.split(new RegExp(\"\\\\s+\")));\n\t\tcomseqfound = true;\n\t}\n\telse\n\t\tparameterList = [process.argv.slice(2)];\n\tparameterList.forEach((parameter, pindex) =>\n\t{\n\t\tparameter = parameter.map(pp => path.join(...pp.split(new RegExp(\"\\\\\\\\\", \"g\"))));\n\t\tif(comseqfound)\n\t\t\tconsole.log(`Command ${pindex + 1} of ${parameterList.length}`, \"[\\\"\" + parameter.join(\"\\\", \\\"\") + \"\\\"]\");\n\t\tlet timeStart = Date.now();\n\t\tlet valid = true;\n\t\tlet reading = true;\n\t\tlet whitespaceTypeList = [\"path\", \"xml\", \"all\"];\n\t\tlet configuration =\n\t\t{\n\t\t\tstripWhitespace: null,\n\t\t\tstripComments: false,\n\t\t\tcombinePathCommands: false,\n\t\t\tprecision: 3,\n\t\t\tsharedContext: false\n\t\t};\n\t\n\t\twhile(reading && valid && parameter[0] && parameter[0].startsWith(\"--\"))\n\t\t\tswitch(parameter[0])\n\t\t\t{\n\t\t\t\tcase \"--precision\":\n\t\t\t\t\tconfiguration.precision = parseInt(parameter[1]);\n\t\t\t\t\tif(configuration.precision.toString() !== parameter[1] || isNaN(configuration.precision))\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(\"Invalid syntax for --precision switch\");\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tparameter = parameter.slice(2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"--stripWhitespace\":\n\t\t\t\t\tconfiguration.stripWhitespace = parameter[1];\n\t\t\t\t\tif(whitespaceTypeList.indexOf(configuration.stripWhitespace) === -1)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(\"Invalid syntax for --stripWhitespace switch\");\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tparameter = parameter.slice(2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"--stripComments\":\n\t\t\t\t\tconfiguration.stripComments = true;\n\t\t\t\t\tparameter.shift();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"--combinePathCommands\":\n\t\t\t\t\tconfiguration.combinePathCommands = true;\n\t\t\t\t\tparameter.shift();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"--extract\":\n\t\t\t\t\tconfiguration.extract = true;\n\t\t\t\t\tparameter.shift();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"--report\":\n\t\t\t\t\tconfiguration.report = true;\n\t\t\t\t\tparameter.shift();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"--sharedContext\":\n\t\t\t\t\tconfiguration.sharedContext = true;\n\t\t\t\t\tparameter.shift();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"--\":\n\t\t\t\t\tparameter.shift();\n\t\t\t\tdefault:\n\t\t\t\t\treading = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif(!valid || parameter.length < 2)\n\t\t{\n\t\t\tconsole.log(\n`\nUsage: npm start -- [options] <source> <destination> [units...]\n\nsource       An unprocessed SVG file containing Pather commands\ndestination  Desired filename of the processed output\noptions      One or more of the following switches:\n\t--precision <n>                   Write numbers to the output with N decimal places. Default is 3\n\t--stripWhitespace <path|xml|all>  Strip whitespace from within path data, between XML tags or both (all)\n\t--stripComments                   Strip XML comments from the output document\n\t--combinePathCommands             Combine repeated commands in path data, e.g. h 30 h 30 becomes h 60\n\t--extract                         Extract all elements with an ID to individual files (destination is a directory)\n\t--report                          Report information before and after processing a file\nunits        Variable values to be passed to the Pather environment\n             Name/value pairs separated by \"=\", e.g. myUnit=3 myOtherUnit=4.2\n`\n\t\t\t\t);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet source = parameter.shift();\n\t\t\tconfiguration.destination = parameter.shift();\n\t\t\tif(configuration.report)\n\t\t\t\tconsole.log(`Processing \"${source}\"...`);\n\t\t\tconfiguration.unit = {};\n\t\t\treading = true;\n\t\t\twhile(reading && parameter.length) {\n\t\t\t\tlet unit = parameter.shift().split(\"=\");\n\t\t\t\tlet reason;\n\t\t\t\tswitch(true)\n\t\t\t\t{\n\t\t\t\t\tcase unit.length !== 2:\n\t\t\t\t\t\treason = `Invalid unit format \"${unit.join(\"=\")}\".`;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase new RegExp(\"^[bdefgijknopruwxy]|[a-z_$][a-z0-9_$]+$\", \"i\").exec(unit[0]) === null:\n\t\t\t\t\t\treason = `Invalid unit name \"${unit[0]}\".`;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase parseFloat(unit[1]).toString() !== unit[1].substr(0, parseFloat(unit[1]).toString().length) || isNaN(parseFloat(unit[1])) || parseFloat(unit[1]) === Infinity || parseFloat(unit[1]) === -Infinity:\n\t\t\t\t\t\treason = `Invalid unit value \"${unit[1]}\".`;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(reason)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(`${reason} Expected valid identifier followed by a number, e.g. myUnit=3`); \n\t\t\t\t\treading = false;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tconfiguration.unit[unit[0]] = parseFloat(unit[1]);\n\t\t\t}\n\t\t\tif(reading)\n\t\t\t{\n\t\t\t\t// console.log(configuration);\n\t\t\t\tconfiguration.base = path.dirname(source) + path.sep;\n\t\t\t\tconst data = fs.readFileSync(source, {encoding: \"utf-8\", flag: \"r\"});\n\t\t\t\tlet t = new Transformer(data);\n\t\t\t\tlet output = t.transform(configuration);\n\t\t\t\toutput.forEach(([i, j]) =>\n\t\t\t\t{\n\t\t\t\t\tif(!fs.existsSync(path.dirname(i)))\n\t\t\t\t\t\tfs.mkdirSync(path.dirname(i), { recursive: true });\n\t\t\t\t\tfs.writeFileSync(i, j, {encoding: \"utf-8\"})\n\t\n\t\t\t\t\treturn;\n\t\t\t\t});\n\t\t\t\tif(configuration.report)\n\t\t\t\t\tconsole.log(`Completed successfully in ${Date.now() - timeStart} ms\\n`);\n\t\t\t}\n\t\t}\n\n\t\treturn;\n\t});\n\n\treturn;\n})();\n"],"names":["Token","static","constructor","type","name","value","position","this","nameOf","Object","entries","filter","key","BigDecimal","BigInt","repeat","LIMIT_PRECISION","RegExp","source","integerPart","decimalPart","VALUE_SHIFT","split","substr","padEnd","charCodeAt","fromBigInt","result","fromBigIntDivision","dividend","divisor","add","other","subtract","multiplyBy","divideBy","equals","valueOf","toNumber","toString","precision","text","Math","max","startsWith","padStart","length","replace","PATTERN_TRAILING_ZERO","Value","getEmptyResult","stack","sequence","arity","pending","x","ZERO","y","fixNext","lastAngle","originX","originY","TokenStream","TYPE_NUMBER","expression","handler","TYPE_COMMAND","a","TYPE_X","TYPE_Y","TYPE_THETA","TYPE_FLAG","c","h","l","m","q","s","t","v","z","toLowerCase","TYPE_DELIMITER","TYPE_WHITESPACE","TYPE_IDENTIFIER","TYPE_BRACKET","TYPE_OPERATOR_ADD","TYPE_OPERATOR_MULTIPLY","TYPE_OPERATOR_SUBTRACT","TYPE_OPERATOR_DIVIDE","TYPE_OPERATOR_ROTATE","TYPE_OPERATOR_SKEW_HORIZONTAL","TYPE_OPERATOR_SKEW_VERTICAL","TYPE_OPERATOR_REVERSE_ORDER","TYPE_OPERATOR_FIX","TYPE_OPERATOR_MEASURE","TYPE_OPERATOR_ASSIGN","TYPE_OPERATOR_REPEAT","data","cursor","chainIndex","streamIndex","match","item","PRIORITY","exec","push","SyntaxError","TYPE_END","getCurrent","getNext","peekNext","reset","Distortion","getName","OPERATION_ROTATE","OPERATION_SKEW_HORIZONTAL","OPERATION_SKEW_VERTICAL","OPERATION_REVERSE_ORDER","run","x0","y0","x1","y1","distortionValue","cosine","sine","PI","cos","sin","abs","Number","EPSILON","tan","runStack","distortionStack","reduceRight","carry","fixPoint","point","relative","topX","topY","fixed","applyDistortion","context","top","origin","command","point1","point2","last","atan2","optimisation","path","combineCommands","sequnce","pop","toUpperCase","reverseList","splice","PathParser","stream","resultToString","map","i","slice","join","parseValueAttribute","pathResult","parseList","limit","state","current","reading","index","expResult","ExpressionParser","parse","TYPE_UNIT","accumulator","argumentList","invoked","next","forEach","segment","undefined","includes","parseInvocation","concat","Error","indexOf","debug","formatOperation","operation","unwind","start","leftValue","OPERATION_EVALUATE","console","log","j","OPERATION_MULTIPLY","OPERATION_DIVIDE","OPERATION_ADD","OPERATION_SUBTRACT","depth","insideArgumentList","additionalTerminatorList","base","counter","unit","ReferenceError","inner","hasCount","hasArgumentList","count","delimited","parseInt","ExtendedDOM","node","extractChildren","element","clean","typeof","firstChild","removeChild","parentNode","insertBefore","remove","previousSibling","Transformer","document","parseXML","require","DOMParser","parseFromString","parseMeta","defined","Array","from","getElementsByTagName","getAttribute","parseFloat","parseUnitList","list","shift","tagName","nodeValue","trim","parser","id","except","message","cause","parseLiteralList","literal","parseSegmentList","reduce","previous","segmentKey","keys","parseIncludeList","configuration","seen","href","filename","readFileSync","encoding","flag","target","getElementById","documentElement","nodeName","child","nextSibling","insertTemplateContent","template","replacement","iif","container","replaceKey","replaceValue","replaceAll","copy","cloneNode","attributes","attribute","removeAttribute","appendChild","formatTemplateValue","format","getTemplateLiteral","applyTemplate","minimum","maximum","loop","lower","upper","step","columnCount","groupRowCount","groupRowId","vMap","range","stop","iFormat","vFormat","xFormat","yFormat","gFormat","groupIndex","loopEntry","find","Be","Fe","Ve","We","Xe","He","ownerDocument","createElement","setAttribute","extractIsolated","hasAttribute","visited","nextNode","ancestor","parent","chain","sep","transform","sharedContext","lastContext","cache","combinePathCommands","xml","stripWhitespace","stripComments","d","attributeName","Node","COMMENT_NODE","TEXT_NODE","nodeType","extract","destination","XMLSerializer","serializeToString","fs","parameterList","comseq","process","argv","comseqfound","existsSync","lstatSync","isDirectory","chdir","line","parameter","pindex","pp","timeStart","Date","now","valid","whitespaceTypeList","isNaN","report","reason","Infinity","dirname","mkdirSync","recursive","writeFileSync"],"mappings":"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"}